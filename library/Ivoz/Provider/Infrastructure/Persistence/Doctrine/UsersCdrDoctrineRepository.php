<?php

namespace Ivoz\Provider\Infrastructure\Persistence\Doctrine;

use Doctrine\Persistence\ManagerRegistry;
use Ivoz\Core\Domain\Service\EntityPersisterInterface;
use Ivoz\Core\Infrastructure\Persistence\Doctrine\Repository\DoctrineRepository;
use Ivoz\Provider\Domain\Model\UsersCdr\UsersCdr;
use Ivoz\Provider\Domain\Model\UsersCdr\UsersCdrInterface;
use Ivoz\Provider\Domain\Model\UsersCdr\UsersCdrRepository;
use Ivoz\Provider\Domain\Model\UsersCdr\UsersCdrDto;

/**
 * UsersCdrDoctrineRepository
 *
 * This class was generated by ivoz:make:repositories command.
 * Add your own custom repository methods below.
 *
 * @extends DoctrineRepository<UsersCdrInterface, UsersCdrDto>
 */
class UsersCdrDoctrineRepository extends DoctrineRepository implements UsersCdrRepository
{
    public function __construct(
        ManagerRegistry $registry,
        EntityPersisterInterface $entityPersisterInterface,
    ) {
        parent::__construct(
            $registry,
            UsersCdr::class,
            $entityPersisterInterface
        );
    }

    public function findByKamUsersCdrId(int $id): ?UsersCdrInterface
    {
        return $this->findOneBy([
            'kamUsersCdr' => $id,
        ]);
    }

    public function findLastByCallidAndDirection(string $callid, string $direction): ?UsersCdrInterface
    {
        /** @var UsersCdr $response */
        $response = $this->findOneBy(
            [
            'callid' => $callid,
            'direction' => $direction,
            ],
            [
            'startTime' => 'desc'
            ],
        );

        return $response;
    }
}
