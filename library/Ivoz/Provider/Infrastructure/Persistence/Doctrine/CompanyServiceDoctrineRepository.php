<?php

namespace Ivoz\Provider\Infrastructure\Persistence\Doctrine;

use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Ivoz\Provider\Domain\Model\CompanyService\CompanyService;
use Ivoz\Provider\Domain\Model\CompanyService\CompanyServiceInterface;
use Ivoz\Provider\Domain\Model\CompanyService\CompanyServiceRepository;
use Doctrine\Persistence\ManagerRegistry;

/**
 * CompanyServiceDoctrineRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @template-extends ServiceEntityRepository<CompanyService>
 */
class CompanyServiceDoctrineRepository extends ServiceEntityRepository implements CompanyServiceRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, CompanyService::class);
    }

    /**
     * @param int $companyId
     * @param int $serviceId
     * @return CompanyServiceInterface | null
     */
    public function findCompanyService($companyId, $serviceId)
    {
        /** @var CompanyServiceInterface $response */
        $response = $this->findOneBy([
            'company' => $companyId,
            'service' => $serviceId
        ]);

        return $response;
    }

    /**
     * @return int[]
     */
    public function findServiceIdsByCompany(int $companyId): array
    {
        $qb = $this->createQueryBuilder('self');
        $expression = $qb->expr();

        $qb
            ->select('IDENTITY(self.service) as service')
            ->where(
                $expression->eq('self.company', $companyId)
            );

        $result = $qb
            ->getQuery()
            ->getScalarResult();

        return array_map(
            'intval',
            array_column($result, 'service')
        );
    }
}
