<?php

namespace Ivoz\Provider\Infrastructure\Persistence\Doctrine;

use Assert\Assertion;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Ivoz\Provider\Domain\Model\WebPortal\WebPortal;
use Ivoz\Provider\Domain\Model\WebPortal\WebPortalInterface;
use Ivoz\Provider\Domain\Model\WebPortal\WebPortalRepository;
use Doctrine\Persistence\ManagerRegistry;

/**
 * WebPortalDoctrineRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @template-extends ServiceEntityRepository<WebPortal>
 */
class WebPortalDoctrineRepository extends ServiceEntityRepository implements WebPortalRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, WebPortal::class);
    }

    public function findByServerName(string $serverName): ?WebPortalInterface
    {
        $conditions = [
            'url' => 'https://' . $serverName,
        ];

        /** @var WebPortalInterface $response */
        $response = $this->findOneBy($conditions);

        return $response;
    }

    public function findByServerNameAndType(string $serverName, string $type): ?WebPortalInterface
    {
        Assertion::choice(
            $type,
            [
                WebPortalInterface::URLTYPE_GOD,
                WebPortalInterface::URLTYPE_BRAND,
                WebPortalInterface::URLTYPE_ADMIN,
                WebPortalInterface::URLTYPE_USER,
            ],
            'urlTypevalue "%s" is not an element of the valid values: %s'
        );

        $conditions = [
            'url' => 'https://' . $serverName,
            'urlType' => $type
        ];

        /** @var WebPortalInterface $response */
        $response = $this->findOneBy($conditions);

        return $response;
    }
}
