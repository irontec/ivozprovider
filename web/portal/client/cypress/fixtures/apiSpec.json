{
  "swagger": "2.0",
  "basePath": "/api/client/",
  "info": {
    "title": "Ivoz Provider",
    "version": "3",
    "description": "Client REST API"
  },
  "paths": {
    "/admin_login": {
      "post": {
        "tags": ["Auth"],
        "operationId": "postAdminAuthenticate",
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": ["application/json"],
        "summary": "Retrieve JWT token",
        "parameters": [
          {
            "name": "username",
            "in": "formData",
            "type": "string",
            "required": true
          },
          {
            "name": "password",
            "in": "formData",
            "type": "string",
            "format": "password",
            "required": true
          }
        ],
        "responses": {
          "200": { "description": "Valid credentials" },
          "400": { "description": "Invalid input" },
          "401": { "description": "Bad credentials" }
        }
      }
    },
    "/token/refresh": {
      "post": {
        "tags": ["Auth"],
        "operationId": "postTokenRefresh",
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": ["application/json"],
        "summary": "Retrieve JWT token",
        "parameters": [
          {
            "name": "refresh_token",
            "in": "formData",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": { "description": "Valid credentials" },
          "400": { "description": "Invalid input" },
          "401": { "description": "Bad credentials" }
        }
      }
    },
    "/billable_calls": {
      "get": {
        "produces": ["application/json", "application/ld+json", "text/csv"],
        "tags": ["Provider"],
        "operationId": "getBillableCallCollection",
        "summary": "Retrieves the collection of BillableCall resources.",
        "responses": {
          "200": {
            "description": "BillableCall collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/BillableCall-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "callee",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "callee[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "caller[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callid[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callid[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callid[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callid[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callid[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callid[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          { "name": "ddi", "in": "query", "required": false, "type": "string" },
          {
            "name": "ddi[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ddi[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "duration[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointId",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "endpointId[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "endpointId[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointId[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointId[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointId[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointId[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointId[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointName[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointName[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointName[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointName[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointName[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "endpointName[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointType[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "endpointType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[callee]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[caller]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[callid]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[ddi]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[endpointId]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[endpointName]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[endpointType]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[price]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[startTime]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "price",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "price[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "price[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "price[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "price[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "price[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "price[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "price[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "startTime[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[callee]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[caller]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[callid]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[direction]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[duration]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[endpointId]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[endpointName]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[endpointType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[price]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[startTime]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "name": "_pagination",
            "in": "query",
            "required": false,
            "description": "Enable or disable pagination",
            "type": "boolean"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ]
      }
    },
    "/billable_calls/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getBillableCallItem",
        "summary": "Retrieves a BillableCall resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ],
        "responses": {
          "200": {
            "description": "BillableCall resource response",
            "schema": { "$ref": "#/definitions/BillableCall-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/calendar_periods": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCalendarPeriodCollection",
        "summary": "Retrieves the collection of CalendarPeriod resources.",
        "responses": {
          "200": {
            "description": "CalendarPeriod collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CalendarPeriod-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "calendar",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calendar[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[extension]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[locution]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[numberCountry]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[numberValue]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[routeType]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[voicemail]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "extension",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extension[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extension[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "locution",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "locution[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "locution[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "numberCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "numberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "numberValue[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "routeType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startDate[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startDate[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startDate[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startDate[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startDate[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startDate[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemail[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemail[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[endDate]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[numberValue]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[routeType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[startDate]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postCalendarPeriodCollection",
        "summary": "Creates a CalendarPeriod resource.",
        "responses": {
          "201": {
            "description": "CalendarPeriod resource created",
            "schema": { "$ref": "#/definitions/CalendarPeriod" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "calendarPeriod",
            "in": "body",
            "description": "The new CalendarPeriod resource",
            "schema": { "$ref": "#/definitions/CalendarPeriod" }
          }
        ]
      }
    },
    "/calendar_periods/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCalendarPeriodItem",
        "summary": "Retrieves a CalendarPeriod resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "CalendarPeriod resource response",
            "schema": { "$ref": "#/definitions/CalendarPeriod-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putCalendarPeriodItem",
        "summary": "Replaces the CalendarPeriod resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "calendarPeriod",
            "in": "body",
            "description": "The updated CalendarPeriod resource",
            "schema": { "$ref": "#/definitions/CalendarPeriod" }
          }
        ],
        "responses": {
          "200": {
            "description": "CalendarPeriod resource updated",
            "schema": { "$ref": "#/definitions/CalendarPeriod" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteCalendarPeriodItem",
        "summary": "Removes the CalendarPeriod resource.",
        "responses": {
          "204": { "description": "CalendarPeriod resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/calendar_periods_rel_schedules": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCalendarPeriodsRelScheduleCollection",
        "summary": "Retrieves the collection of CalendarPeriodsRelSchedule resources.",
        "responses": {
          "200": {
            "description": "CalendarPeriodsRelSchedule collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CalendarPeriodsRelSchedule-detailedCollection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "calendarPeriod",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calendarPeriod.calendar",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "calendarPeriod.endDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calendarPeriod.extension",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "calendarPeriod.locution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "calendarPeriod.numberCountry",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "calendarPeriod.numberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calendarPeriod.routeType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calendarPeriod.startDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calendarPeriod.voicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "calendarPeriod[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "schedule",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "schedule.friday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "schedule.monday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "schedule.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "schedule.saturday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "schedule.sunday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "schedule.thursday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "schedule.timeIn",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "schedule.timeout",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "schedule.tuesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "schedule.wednesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "schedule[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postCalendarPeriodsRelScheduleCollection",
        "summary": "Creates a CalendarPeriodsRelSchedule resource.",
        "responses": {
          "201": {
            "description": "CalendarPeriodsRelSchedule resource created",
            "schema": { "$ref": "#/definitions/CalendarPeriodsRelSchedule" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "calendarPeriodsRelSchedule",
            "in": "body",
            "description": "The new CalendarPeriodsRelSchedule resource",
            "schema": { "$ref": "#/definitions/CalendarPeriodsRelSchedule" }
          }
        ]
      }
    },
    "/calendar_periods_rel_schedules/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCalendarPeriodsRelScheduleItem",
        "summary": "Retrieves a CalendarPeriodsRelSchedule resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "CalendarPeriodsRelSchedule resource response",
            "schema": {
              "$ref": "#/definitions/CalendarPeriodsRelSchedule-detailed"
            }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putCalendarPeriodsRelScheduleItem",
        "summary": "Replaces the CalendarPeriodsRelSchedule resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "calendarPeriodsRelSchedule",
            "in": "body",
            "description": "The updated CalendarPeriodsRelSchedule resource",
            "schema": { "$ref": "#/definitions/CalendarPeriodsRelSchedule" }
          }
        ],
        "responses": {
          "200": {
            "description": "CalendarPeriodsRelSchedule resource updated",
            "schema": { "$ref": "#/definitions/CalendarPeriodsRelSchedule" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteCalendarPeriodsRelScheduleItem",
        "summary": "Removes the CalendarPeriodsRelSchedule resource.",
        "responses": {
          "204": {
            "description": "CalendarPeriodsRelSchedule resource deleted"
          },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/calendars": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCalendarCollection",
        "summary": "Retrieves the collection of Calendar resources.",
        "responses": {
          "200": {
            "description": "Calendar collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Calendar-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postCalendarCollection",
        "summary": "Creates a Calendar resource.",
        "responses": {
          "201": {
            "description": "Calendar resource created",
            "schema": { "$ref": "#/definitions/Calendar" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "calendar",
            "in": "body",
            "description": "The new Calendar resource",
            "schema": { "$ref": "#/definitions/Calendar" }
          }
        ]
      }
    },
    "/calendars/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCalendarItem",
        "summary": "Retrieves a Calendar resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Calendar resource response",
            "schema": { "$ref": "#/definitions/Calendar-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putCalendarItem",
        "summary": "Replaces the Calendar resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "calendar",
            "in": "body",
            "description": "The updated Calendar resource",
            "schema": { "$ref": "#/definitions/Calendar" }
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar resource updated",
            "schema": { "$ref": "#/definitions/Calendar" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteCalendarItem",
        "summary": "Removes the Calendar resource.",
        "responses": {
          "204": { "description": "Calendar resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/call_acl_rel_match_lists": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCallAclRelMatchListCollection",
        "summary": "Retrieves the collection of CallAclRelMatchList resources.",
        "responses": {
          "200": {
            "description": "CallAclRelMatchList collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CallAclRelMatchList-detailedCollection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "callAcl",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callAcl.defaultPolicy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callAcl.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callAcl[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "matchList",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "matchList.generic",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "matchList.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "matchList[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "policy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "policy[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "policy[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "policy[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "policy[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "policy[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "priority[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[policy]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[priority]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postCallAclRelMatchListCollection",
        "summary": "Creates a CallAclRelMatchList resource.",
        "responses": {
          "201": {
            "description": "CallAclRelMatchList resource created",
            "schema": { "$ref": "#/definitions/CallAclRelMatchList" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "callAclRelMatchList",
            "in": "body",
            "description": "The new CallAclRelMatchList resource",
            "schema": { "$ref": "#/definitions/CallAclRelMatchList" }
          }
        ]
      }
    },
    "/call_acl_rel_match_lists/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCallAclRelMatchListItem",
        "summary": "Retrieves a CallAclRelMatchList resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "CallAclRelMatchList resource response",
            "schema": { "$ref": "#/definitions/CallAclRelMatchList-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putCallAclRelMatchListItem",
        "summary": "Replaces the CallAclRelMatchList resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "callAclRelMatchList",
            "in": "body",
            "description": "The updated CallAclRelMatchList resource",
            "schema": { "$ref": "#/definitions/CallAclRelMatchList" }
          }
        ],
        "responses": {
          "200": {
            "description": "CallAclRelMatchList resource updated",
            "schema": { "$ref": "#/definitions/CallAclRelMatchList" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteCallAclRelMatchListItem",
        "summary": "Removes the CallAclRelMatchList resource.",
        "responses": {
          "204": { "description": "CallAclRelMatchList resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/call_acls": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCallAclCollection",
        "summary": "Retrieves the collection of CallAcl resources.",
        "responses": {
          "200": {
            "description": "CallAcl collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CallAcl-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "defaultPolicy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultPolicy[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultPolicy[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultPolicy[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultPolicy[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultPolicy[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[defaultPolicy]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postCallAclCollection",
        "summary": "Creates a CallAcl resource.",
        "responses": {
          "201": {
            "description": "CallAcl resource created",
            "schema": { "$ref": "#/definitions/CallAcl" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "callAcl",
            "in": "body",
            "description": "The new CallAcl resource",
            "schema": { "$ref": "#/definitions/CallAcl" }
          }
        ]
      }
    },
    "/call_acls/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCallAclItem",
        "summary": "Retrieves a CallAcl resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "CallAcl resource response",
            "schema": { "$ref": "#/definitions/CallAcl-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putCallAclItem",
        "summary": "Replaces the CallAcl resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "callAcl",
            "in": "body",
            "description": "The updated CallAcl resource",
            "schema": { "$ref": "#/definitions/CallAcl" }
          }
        ],
        "responses": {
          "200": {
            "description": "CallAcl resource updated",
            "schema": { "$ref": "#/definitions/CallAcl" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteCallAclItem",
        "summary": "Removes the CallAcl resource.",
        "responses": {
          "204": { "description": "CallAcl resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/call_csv_reports": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCallCsvReportCollection",
        "summary": "Retrieves the collection of CallCsvReport resources.",
        "responses": {
          "200": {
            "description": "CallCsvReport collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CallCsvReport-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "callCsvScheduler",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callCsvScheduler[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callCsvScheduler[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "createdOn",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdOn[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdOn[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdOn[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdOn[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdOn[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdOn[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "csv.baseName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "csv.baseName[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "csv.baseName[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "csv.baseName[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "csv.baseName[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "csv.baseName[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "csv.baseName[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "csv.fileSize",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "csv.fileSize[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "csv.fileSize[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "csv.fileSize[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "csv.fileSize[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "csv.fileSize[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "csv.fileSize[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "csv.fileSize[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "csv.mimeType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "csv.mimeType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "csv.mimeType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "csv.mimeType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "csv.mimeType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "csv.mimeType[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "csv.mimeType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[callCsvScheduler]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[csv.baseName]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[csv.fileSize]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[csv.mimeType]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inDate[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inDate[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inDate[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inDate[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inDate[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inDate[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outDate[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outDate[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outDate[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outDate[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outDate[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outDate[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sentTo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sentTo[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sentTo[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sentTo[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sentTo[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sentTo[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[createdOn]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[csv.baseName]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[csv.fileSize]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[csv.mimeType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[inDate]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[outDate]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[sentTo]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ]
      }
    },
    "/call_csv_reports/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCallCsvReportItem",
        "summary": "Retrieves a CallCsvReport resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ],
        "responses": {
          "200": {
            "description": "CallCsvReport resource response",
            "schema": { "$ref": "#/definitions/CallCsvReport-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/call_csv_reports/{id}/csv": {
      "get": {
        "produces": ["application/octet-stream"],
        "responses": {
          "200": {
            "description": "#/definitions/CallCsvReport_Csv",
            "schema": { "type": "file" }
          },
          "404": { "description": "Resource not found" }
        },
        "tags": ["Provider"],
        "operationId": "/callcsvreport_csvCallCsvReportItem",
        "summary": "Retrieves a CallCsvReport resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ]
      }
    },
    "/call_csv_schedulers": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCallCsvSchedulerCollection",
        "summary": "Retrieves the collection of CallCsvScheduler resources.",
        "responses": {
          "200": {
            "description": "CallCsvScheduler collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CallCsvScheduler-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "callCsvNotificationTemplate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callCsvNotificationTemplate[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callCsvNotificationTemplate[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "callDirection",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callDirection[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callDirection[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callDirection[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callDirection[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callDirection[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callDirection[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          { "name": "ddi", "in": "query", "required": false, "type": "string" },
          {
            "name": "ddi[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ddi[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[callDirection]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[lastExecutionError]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[lastExecution]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[nextExecution]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          { "name": "fax", "in": "query", "required": false, "type": "string" },
          {
            "name": "fax[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fax[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "frequency",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "frequency[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "frequency[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "frequency[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "frequency[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "frequency[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "frequency[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friend",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friend[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friend[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastExecution",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastExecutionError",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastExecutionError[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastExecutionError[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastExecutionError[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "lastExecutionError[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastExecutionError[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastExecutionError[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastExecution[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastExecution[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastExecution[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastExecution[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastExecution[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "lastExecution[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastExecution[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nextExecution",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nextExecution[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nextExecution[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nextExecution[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "nextExecution[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nextExecution[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nextExecution[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nextExecution[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "residentialDevice",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "residentialDevice[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "residentialDevice[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "retailAccount",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "retailAccount[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "retailAccount[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "unit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "unit[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "unit[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "unit[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "unit[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "unit[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[callDirection]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[email]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[frequency]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[lastExecutionError]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[lastExecution]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[nextExecution]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[unit]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postCallCsvSchedulerCollection",
        "summary": "Creates a CallCsvScheduler resource.",
        "responses": {
          "201": {
            "description": "CallCsvScheduler resource created",
            "schema": { "$ref": "#/definitions/CallCsvScheduler" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "callCsvScheduler",
            "in": "body",
            "description": "The new CallCsvScheduler resource",
            "schema": { "$ref": "#/definitions/CallCsvScheduler" }
          },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ]
      }
    },
    "/call_csv_schedulers/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCallCsvSchedulerItem",
        "summary": "Retrieves a CallCsvScheduler resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ],
        "responses": {
          "200": {
            "description": "CallCsvScheduler resource response",
            "schema": { "$ref": "#/definitions/CallCsvScheduler-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putCallCsvSchedulerItem",
        "summary": "Replaces the CallCsvScheduler resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "callCsvScheduler",
            "in": "body",
            "description": "The updated CallCsvScheduler resource",
            "schema": { "$ref": "#/definitions/CallCsvScheduler" }
          },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ],
        "responses": {
          "200": {
            "description": "CallCsvScheduler resource updated",
            "schema": { "$ref": "#/definitions/CallCsvScheduler" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteCallCsvSchedulerItem",
        "summary": "Removes the CallCsvScheduler resource.",
        "responses": {
          "204": { "description": "CallCsvScheduler resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/call_forward_settings": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCallForwardSettingCollection",
        "summary": "Retrieves the collection of CallForwardSetting resources.",
        "responses": {
          "200": {
            "description": "CallForwardSetting collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CallForwardSetting-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "callForwardType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callForwardType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callForwardType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callForwardType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callForwardType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callForwardType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callTypeFilter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callTypeFilter[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callTypeFilter[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callTypeFilter[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callTypeFilter[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callTypeFilter[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cfwToRetailAccount",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cfwToRetailAccount[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cfwToRetailAccount[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          { "name": "ddi", "in": "query", "required": false, "type": "string" },
          {
            "name": "ddi[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ddi[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "enabled",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[cfwToRetailAccount]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[ddi]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[extension]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[numberCountry]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[numberValue]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[residentialDevice]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[retailAccount]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[targetType]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[user]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[voicemail]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "extension",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extension[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extension[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "friend",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friend[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friend[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "numberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "numberValue[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "residentialDevice",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "residentialDevice[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "residentialDevice[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "retailAccount",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "retailAccount[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "retailAccount[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "targetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetType[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "targetType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "voicemail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemail[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemail[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[callForwardType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[callTypeFilter]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[enabled]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[numberValue]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[targetType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postCallForwardSettingCollection",
        "summary": "Creates a CallForwardSetting resource.",
        "responses": {
          "201": {
            "description": "CallForwardSetting resource created",
            "schema": { "$ref": "#/definitions/CallForwardSetting" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "callForwardSetting",
            "in": "body",
            "description": "The new CallForwardSetting resource",
            "schema": { "$ref": "#/definitions/CallForwardSetting" }
          }
        ]
      }
    },
    "/call_forward_settings/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCallForwardSettingItem",
        "summary": "Retrieves a CallForwardSetting resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "CallForwardSetting resource response",
            "schema": { "$ref": "#/definitions/CallForwardSetting-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putCallForwardSettingItem",
        "summary": "Replaces the CallForwardSetting resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "callForwardSetting",
            "in": "body",
            "description": "The updated CallForwardSetting resource",
            "schema": { "$ref": "#/definitions/CallForwardSetting" }
          }
        ],
        "responses": {
          "200": {
            "description": "CallForwardSetting resource updated",
            "schema": { "$ref": "#/definitions/CallForwardSetting" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteCallForwardSettingItem",
        "summary": "Removes the CallForwardSetting resource.",
        "responses": {
          "204": { "description": "CallForwardSetting resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/companies": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCompanyCollection",
        "summary": "Retrieves the collection of Company resources.",
        "responses": {
          "200": {
            "description": "Company collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Company-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "country[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultTimezone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultTimezone[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultTimezone[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "domainName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoicing.countryName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoicing.nif",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoicing.nif[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoicing.nif[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoicing.nif[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoicing.nif[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoicing.nif[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoicing.postalAddress",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoicing.postalCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoicing.province",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoicing.town",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdiRule",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdiRule[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdiRule[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "outgoingDdi[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "transformationRuleSet",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transformationRuleSet[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transformationRuleSet[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[invoicing.nif]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[type]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/companies/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCompanyItem",
        "summary": "Retrieves a Company resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Company resource response",
            "schema": { "$ref": "#/definitions/Company-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/company_services": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCompanyServiceCollection",
        "summary": "Retrieves the collection of CompanyService resources.",
        "responses": {
          "200": {
            "description": "CompanyService collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CompanyService-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "service",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "service[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[code]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postCompanyServiceCollection",
        "summary": "Creates a CompanyService resource.",
        "responses": {
          "201": {
            "description": "CompanyService resource created",
            "schema": { "$ref": "#/definitions/CompanyService" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "companyService",
            "in": "body",
            "description": "The new CompanyService resource",
            "schema": { "$ref": "#/definitions/CompanyService" }
          }
        ]
      }
    },
    "/company_services/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCompanyServiceItem",
        "summary": "Retrieves a CompanyService resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "CompanyService resource response",
            "schema": { "$ref": "#/definitions/CompanyService-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putCompanyServiceItem",
        "summary": "Replaces the CompanyService resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "companyService",
            "in": "body",
            "description": "The updated CompanyService resource",
            "schema": { "$ref": "#/definitions/CompanyService" }
          }
        ],
        "responses": {
          "200": {
            "description": "CompanyService resource updated",
            "schema": { "$ref": "#/definitions/CompanyService" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteCompanyServiceItem",
        "summary": "Removes the CompanyService resource.",
        "responses": {
          "204": { "description": "CompanyService resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/conditional_routes": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getConditionalRouteCollection",
        "summary": "Retrieves the collection of ConditionalRoute resources.",
        "responses": {
          "200": {
            "description": "ConditionalRoute collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ConditionalRoute-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "conferenceRoom",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "conferenceRoom[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "conferenceRoom[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[conferenceRoom]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[extension]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[friendvalue]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[huntGroup]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[ivr]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[locution]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[numberCountry]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[numbervalue]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[queue]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[routetype]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[user]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[voicemail]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "extension",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extension[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extension[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "friendvalue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendvalue[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendvalue[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendvalue[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendvalue[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendvalue[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendvalue[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "huntGroup",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "huntGroup[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "huntGroup[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          { "name": "ivr", "in": "query", "required": false, "type": "string" },
          {
            "name": "ivr[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ivr[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "locution",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "locution[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "locution[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "numbervalue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numbervalue[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numbervalue[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numbervalue[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numbervalue[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numbervalue[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "numbervalue[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queue[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queue[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "routetype",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routetype[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routetype[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routetype[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routetype[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routetype[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "routetype[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "voicemail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemail[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemail[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[friendvalue]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[numbervalue]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[routetype]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postConditionalRouteCollection",
        "summary": "Creates a ConditionalRoute resource.",
        "responses": {
          "201": {
            "description": "ConditionalRoute resource created",
            "schema": { "$ref": "#/definitions/ConditionalRoute" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "conditionalRoute",
            "in": "body",
            "description": "The new ConditionalRoute resource",
            "schema": { "$ref": "#/definitions/ConditionalRoute" }
          }
        ]
      }
    },
    "/conditional_routes/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getConditionalRouteItem",
        "summary": "Retrieves a ConditionalRoute resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "ConditionalRoute resource response",
            "schema": { "$ref": "#/definitions/ConditionalRoute-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putConditionalRouteItem",
        "summary": "Replaces the ConditionalRoute resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "conditionalRoute",
            "in": "body",
            "description": "The updated ConditionalRoute resource",
            "schema": { "$ref": "#/definitions/ConditionalRoute" }
          }
        ],
        "responses": {
          "200": {
            "description": "ConditionalRoute resource updated",
            "schema": { "$ref": "#/definitions/ConditionalRoute" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteConditionalRouteItem",
        "summary": "Removes the ConditionalRoute resource.",
        "responses": {
          "204": { "description": "ConditionalRoute resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/conditional_routes_conditions": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getConditionalRoutesConditionCollection",
        "summary": "Retrieves the collection of ConditionalRoutesCondition resources.",
        "responses": {
          "200": {
            "description": "ConditionalRoutesCondition collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConditionalRoutesCondition-collection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "conditionalRoute",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "conditionalRoute[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "conferenceRoom",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "conferenceRoom[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "conferenceRoom[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[conferenceRoom]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[extension]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[friendValue]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[huntGroup]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[ivr]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[locution]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[numberCountry]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[numberValue]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[queue]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[routeType]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[user]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[voicemail]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "extension",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extension[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extension[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "friendValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendValue[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendValue[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendValue[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendValue[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendValue[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendValue[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "huntGroup",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "huntGroup[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "huntGroup[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          { "name": "ivr", "in": "query", "required": false, "type": "string" },
          {
            "name": "ivr[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ivr[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "locution",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "locution[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "locution[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "numberCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "numberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "numberValue[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "priority[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queue[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queue[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "routeType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "routeType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "voicemail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemail[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemail[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[friendValue]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[numberValue]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[priority]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[routeType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postConditionalRoutesConditionCollection",
        "summary": "Creates a ConditionalRoutesCondition resource.",
        "responses": {
          "201": {
            "description": "ConditionalRoutesCondition resource created",
            "schema": {
              "$ref": "#/definitions/ConditionalRoutesCondition-withInverseRelationships"
            }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "conditionalRoutesCondition",
            "in": "body",
            "description": "The new ConditionalRoutesCondition resource",
            "schema": { "$ref": "#/definitions/ConditionalRoutesCondition" }
          }
        ]
      }
    },
    "/conditional_routes_conditions/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getConditionalRoutesConditionItem",
        "summary": "Retrieves a ConditionalRoutesCondition resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "ConditionalRoutesCondition resource response",
            "schema": {
              "$ref": "#/definitions/ConditionalRoutesCondition-detailed"
            }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putConditionalRoutesConditionItem",
        "summary": "Replaces the ConditionalRoutesCondition resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "conditionalRoutesCondition",
            "in": "body",
            "description": "The updated ConditionalRoutesCondition resource",
            "schema": { "$ref": "#/definitions/ConditionalRoutesCondition" }
          }
        ],
        "responses": {
          "200": {
            "description": "ConditionalRoutesCondition resource updated",
            "schema": {
              "$ref": "#/definitions/ConditionalRoutesCondition-withInverseRelationships"
            }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteConditionalRoutesConditionItem",
        "summary": "Removes the ConditionalRoutesCondition resource.",
        "responses": {
          "204": {
            "description": "ConditionalRoutesCondition resource deleted"
          },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/conditional_routes_conditions_rel_calendars": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getConditionalRoutesConditionsRelCalendarCollection",
        "summary": "Retrieves the collection of ConditionalRoutesConditionsRelCalendar resources.",
        "responses": {
          "200": {
            "description": "ConditionalRoutesConditionsRelCalendar collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConditionalRoutesConditionsRelCalendar-detailedCollection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "calendar",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calendar.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calendar[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "condition",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "condition.conditionalRoute",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.conferenceRoom",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.extension",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.friendValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "condition.huntGroup",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.ivr",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.locution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.numberCountry",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.numberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "condition.priority",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.queue",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.routeType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "condition.user",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.voicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postConditionalRoutesConditionsRelCalendarCollection",
        "summary": "Creates a ConditionalRoutesConditionsRelCalendar resource.",
        "responses": {
          "201": {
            "description": "ConditionalRoutesConditionsRelCalendar resource created",
            "schema": {
              "$ref": "#/definitions/ConditionalRoutesConditionsRelCalendar"
            }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "conditionalRoutesConditionsRelCalendar",
            "in": "body",
            "description": "The new ConditionalRoutesConditionsRelCalendar resource",
            "schema": {
              "$ref": "#/definitions/ConditionalRoutesConditionsRelCalendar"
            }
          }
        ]
      }
    },
    "/conditional_routes_conditions_rel_calendars/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getConditionalRoutesConditionsRelCalendarItem",
        "summary": "Retrieves a ConditionalRoutesConditionsRelCalendar resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "ConditionalRoutesConditionsRelCalendar resource response",
            "schema": {
              "$ref": "#/definitions/ConditionalRoutesConditionsRelCalendar-detailed"
            }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteConditionalRoutesConditionsRelCalendarItem",
        "summary": "Removes the ConditionalRoutesConditionsRelCalendar resource.",
        "responses": {
          "204": {
            "description": "ConditionalRoutesConditionsRelCalendar resource deleted"
          },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/conditional_routes_conditions_rel_matchlists": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getConditionalRoutesConditionsRelMatchlistCollection",
        "summary": "Retrieves the collection of ConditionalRoutesConditionsRelMatchlist resources.",
        "responses": {
          "200": {
            "description": "ConditionalRoutesConditionsRelMatchlist collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConditionalRoutesConditionsRelMatchlist-detailedCollection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "condition",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "condition.conditionalRoute",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.conferenceRoom",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.extension",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.friendValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "condition.huntGroup",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.ivr",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.locution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.numberCountry",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.numberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "condition.priority",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.queue",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.routeType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "condition.user",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.voicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "matchlist",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "matchlist.generic",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "matchlist.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "matchlist[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postConditionalRoutesConditionsRelMatchlistCollection",
        "summary": "Creates a ConditionalRoutesConditionsRelMatchlist resource.",
        "responses": {
          "201": {
            "description": "ConditionalRoutesConditionsRelMatchlist resource created",
            "schema": {
              "$ref": "#/definitions/ConditionalRoutesConditionsRelMatchlist"
            }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "conditionalRoutesConditionsRelMatchlist",
            "in": "body",
            "description": "The new ConditionalRoutesConditionsRelMatchlist resource",
            "schema": {
              "$ref": "#/definitions/ConditionalRoutesConditionsRelMatchlist"
            }
          }
        ]
      }
    },
    "/conditional_routes_conditions_rel_matchlists/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getConditionalRoutesConditionsRelMatchlistItem",
        "summary": "Retrieves a ConditionalRoutesConditionsRelMatchlist resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "ConditionalRoutesConditionsRelMatchlist resource response",
            "schema": {
              "$ref": "#/definitions/ConditionalRoutesConditionsRelMatchlist-detailed"
            }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteConditionalRoutesConditionsRelMatchlistItem",
        "summary": "Removes the ConditionalRoutesConditionsRelMatchlist resource.",
        "responses": {
          "204": {
            "description": "ConditionalRoutesConditionsRelMatchlist resource deleted"
          },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/conditional_routes_conditions_rel_route_locks": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getConditionalRoutesConditionsRelRouteLockCollection",
        "summary": "Retrieves the collection of ConditionalRoutesConditionsRelRouteLock resources.",
        "responses": {
          "200": {
            "description": "ConditionalRoutesConditionsRelRouteLock collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConditionalRoutesConditionsRelRouteLock-detailedCollection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "condition",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "condition.conditionalRoute",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.conferenceRoom",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.extension",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.friendValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "condition.huntGroup",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.ivr",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.locution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.numberCountry",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.numberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "condition.priority",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.queue",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.routeType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "condition.user",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.voicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeLock",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeLock.closeExtension",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeLock.description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeLock.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeLock.open",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "routeLock.openExtension",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeLock.toggleExtension",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeLock[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postConditionalRoutesConditionsRelRouteLockCollection",
        "summary": "Creates a ConditionalRoutesConditionsRelRouteLock resource.",
        "responses": {
          "201": {
            "description": "ConditionalRoutesConditionsRelRouteLock resource created",
            "schema": {
              "$ref": "#/definitions/ConditionalRoutesConditionsRelRouteLock"
            }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "conditionalRoutesConditionsRelRouteLock",
            "in": "body",
            "description": "The new ConditionalRoutesConditionsRelRouteLock resource",
            "schema": {
              "$ref": "#/definitions/ConditionalRoutesConditionsRelRouteLock"
            }
          }
        ]
      }
    },
    "/conditional_routes_conditions_rel_route_locks/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getConditionalRoutesConditionsRelRouteLockItem",
        "summary": "Retrieves a ConditionalRoutesConditionsRelRouteLock resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "ConditionalRoutesConditionsRelRouteLock resource response",
            "schema": {
              "$ref": "#/definitions/ConditionalRoutesConditionsRelRouteLock-detailed"
            }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteConditionalRoutesConditionsRelRouteLockItem",
        "summary": "Removes the ConditionalRoutesConditionsRelRouteLock resource.",
        "responses": {
          "204": {
            "description": "ConditionalRoutesConditionsRelRouteLock resource deleted"
          },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/conditional_routes_conditions_rel_schedules": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getConditionalRoutesConditionsRelScheduleCollection",
        "summary": "Retrieves the collection of ConditionalRoutesConditionsRelSchedule resources.",
        "responses": {
          "200": {
            "description": "ConditionalRoutesConditionsRelSchedule collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConditionalRoutesConditionsRelSchedule-detailedCollection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "condition",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "condition.conditionalRoute",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.conferenceRoom",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.extension",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.friendValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "condition.huntGroup",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.ivr",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.locution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.numberCountry",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.numberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "condition.priority",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.queue",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.routeType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "condition.user",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition.voicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "condition[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "schedule",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "schedule.friday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "schedule.monday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "schedule.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "schedule.saturday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "schedule.sunday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "schedule.thursday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "schedule.timeIn",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "schedule.timeout",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "schedule.tuesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "schedule.wednesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "schedule[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postConditionalRoutesConditionsRelScheduleCollection",
        "summary": "Creates a ConditionalRoutesConditionsRelSchedule resource.",
        "responses": {
          "201": {
            "description": "ConditionalRoutesConditionsRelSchedule resource created",
            "schema": {
              "$ref": "#/definitions/ConditionalRoutesConditionsRelSchedule"
            }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "conditionalRoutesConditionsRelSchedule",
            "in": "body",
            "description": "The new ConditionalRoutesConditionsRelSchedule resource",
            "schema": {
              "$ref": "#/definitions/ConditionalRoutesConditionsRelSchedule"
            }
          }
        ]
      }
    },
    "/conditional_routes_conditions_rel_schedules/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getConditionalRoutesConditionsRelScheduleItem",
        "summary": "Retrieves a ConditionalRoutesConditionsRelSchedule resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "ConditionalRoutesConditionsRelSchedule resource response",
            "schema": {
              "$ref": "#/definitions/ConditionalRoutesConditionsRelSchedule-detailed"
            }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteConditionalRoutesConditionsRelScheduleItem",
        "summary": "Removes the ConditionalRoutesConditionsRelSchedule resource.",
        "responses": {
          "204": {
            "description": "ConditionalRoutesConditionsRelSchedule resource deleted"
          },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/conference_rooms": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getConferenceRoomCollection",
        "summary": "Retrieves the collection of ConferenceRoom resources.",
        "responses": {
          "200": {
            "description": "ConferenceRoom collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ConferenceRoom-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "exists[pinCode]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxMembers",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "maxMembers[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxMembers[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxMembers[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxMembers[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxMembers[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxMembers[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pinCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pinCode[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pinCode[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pinCode[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pinCode[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pinCode[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pinCode[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pinProtected",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[maxMembers]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[pinCode]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[pinProtected]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postConferenceRoomCollection",
        "summary": "Creates a ConferenceRoom resource.",
        "responses": {
          "201": {
            "description": "ConferenceRoom resource created",
            "schema": { "$ref": "#/definitions/ConferenceRoom" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "conferenceRoom",
            "in": "body",
            "description": "The new ConferenceRoom resource",
            "schema": { "$ref": "#/definitions/ConferenceRoom" }
          }
        ]
      }
    },
    "/conference_rooms/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getConferenceRoomItem",
        "summary": "Retrieves a ConferenceRoom resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "ConferenceRoom resource response",
            "schema": { "$ref": "#/definitions/ConferenceRoom-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putConferenceRoomItem",
        "summary": "Replaces the ConferenceRoom resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "conferenceRoom",
            "in": "body",
            "description": "The updated ConferenceRoom resource",
            "schema": { "$ref": "#/definitions/ConferenceRoom" }
          }
        ],
        "responses": {
          "200": {
            "description": "ConferenceRoom resource updated",
            "schema": { "$ref": "#/definitions/ConferenceRoom" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteConferenceRoomItem",
        "summary": "Removes the ConferenceRoom resource.",
        "responses": {
          "204": { "description": "ConferenceRoom resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/contacts": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getContactCollection",
        "summary": "Retrieves the collection of Contact resources.",
        "responses": {
          "200": {
            "description": "Contact collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Contact-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "email[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[email]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[lastname]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[mobilePhoneE164]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[otherPhone]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[workPhoneE164]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "lastname[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mobilePhoneCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mobilePhoneCountry[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mobilePhoneCountry[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mobilePhoneE164",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mobilePhoneE164[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mobilePhoneE164[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mobilePhoneE164[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mobilePhoneE164[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mobilePhoneE164[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mobilePhoneE164[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "otherPhone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "otherPhone[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "otherPhone[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "otherPhone[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "otherPhone[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "otherPhone[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "otherPhone[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "workPhoneCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workPhoneCountry[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workPhoneCountry[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "workPhoneE164",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workPhoneE164[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workPhoneE164[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workPhoneE164[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workPhoneE164[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workPhoneE164[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "workPhoneE164[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[email]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[lastname]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[mobilePhoneE164]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[otherPhone]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[workPhoneE164]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postContactCollection",
        "summary": "Creates a Contact resource.",
        "responses": {
          "201": {
            "description": "Contact resource created",
            "schema": { "$ref": "#/definitions/Contact" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "contact",
            "in": "body",
            "description": "The new Contact resource",
            "schema": { "$ref": "#/definitions/Contact" }
          }
        ]
      }
    },
    "/contacts/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getContactItem",
        "summary": "Retrieves a Contact resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Contact resource response",
            "schema": { "$ref": "#/definitions/Contact-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putContactItem",
        "summary": "Replaces the Contact resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "contact",
            "in": "body",
            "description": "The updated Contact resource",
            "schema": { "$ref": "#/definitions/Contact" }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact resource updated",
            "schema": { "$ref": "#/definitions/Contact" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteContactItem",
        "summary": "Removes the Contact resource.",
        "responses": {
          "204": { "description": "Contact resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/countries": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCountryCollection",
        "summary": "Retrieves the collection of Country resources.",
        "responses": {
          "200": {
            "description": "Country collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Country-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "countryCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "countryCode[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "countryCode[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "countryCode[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "countryCode[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "countryCode[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "countryCode[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[countryCode]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[code]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[countryCode]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.ca]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.en]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.es]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.it]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "name": "_pagination",
            "in": "query",
            "required": false,
            "description": "Enable or disable pagination",
            "type": "boolean"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/countries/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCountryItem",
        "summary": "Retrieves a Country resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Country resource response",
            "schema": { "$ref": "#/definitions/Country-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/ddis": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getDdiCollection",
        "summary": "Retrieves the collection of Ddi resources.",
        "responses": {
          "200": {
            "description": "Ddi collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Ddi-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "conditionalRoute",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "conditionalRoute[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "conditionalRoute[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "conferenceRoom",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "conferenceRoom[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "conferenceRoom[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "country[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "country[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          { "name": "ddi", "in": "query", "required": false, "type": "string" },
          {
            "name": "ddi[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ddi[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ddi[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ddi[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ddi[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ddie164",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ddie164[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ddie164[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ddie164[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "ddie164[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ddie164[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ddie164[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[conditionalRoute]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[conferenceRoom]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[country]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[ddie164]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[description]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[externalCallFilter]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[fax]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[friendValue]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[huntGroup]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[ivr]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[language]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[queue]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[residentialDevice]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[retailAccount]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[routeType]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[user]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "externalCallFilter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "externalCallFilter[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "externalCallFilter[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          { "name": "fax", "in": "query", "required": false, "type": "string" },
          {
            "name": "fax[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fax[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "friendValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendValue[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendValue[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendValue[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "friendValue[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendValue[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendValue[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "huntGroup",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "huntGroup[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "huntGroup[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          { "name": "ivr", "in": "query", "required": false, "type": "string" },
          {
            "name": "ivr[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ivr[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queue[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queue[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "residentialDevice",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "residentialDevice[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "residentialDevice[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "retailAccount",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "retailAccount[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "retailAccount[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "routeType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "routeType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[ddi]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[ddie164]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[friendValue]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[routeType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/ddis/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getDdiItem",
        "summary": "Retrieves a Ddi resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Ddi resource response",
            "schema": { "$ref": "#/definitions/Ddi-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putDdiItem",
        "summary": "Replaces the Ddi resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "ddi",
            "in": "body",
            "description": "The updated Ddi resource",
            "schema": { "$ref": "#/definitions/Ddi" }
          }
        ],
        "responses": {
          "200": {
            "description": "Ddi resource updated",
            "schema": { "$ref": "#/definitions/Ddi" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      }
    },
    "/extensions": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getExtensionCollection",
        "summary": "Retrieves the collection of Extension resources.",
        "responses": {
          "200": {
            "description": "Extension collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Extension-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "conditionalRoute",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "conditionalRoute[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "conditionalRoute[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "conferenceRoom",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "conferenceRoom[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "conferenceRoom[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[conditionalRoute]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[conferenceRoom]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[friendValue]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[huntGroup]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[ivr]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[numberCountry]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[numberValue]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[queue]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[routeType]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[user]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[voicemail]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "friendValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendValue[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendValue[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendValue[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendValue[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friendValue[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "friendValue[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "huntGroup",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "huntGroup[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "huntGroup[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          { "name": "ivr", "in": "query", "required": false, "type": "string" },
          {
            "name": "ivr[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ivr[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "number",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "numberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "numberValue[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "number[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "number[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "number[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "number[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "number[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queue[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queue[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "routeType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "voicemail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemail[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemail[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[friendValue]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[numberValue]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[number]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[routeType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postExtensionCollection",
        "summary": "Creates a Extension resource.",
        "responses": {
          "201": {
            "description": "Extension resource created",
            "schema": { "$ref": "#/definitions/Extension" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "extension",
            "in": "body",
            "description": "The new Extension resource",
            "schema": { "$ref": "#/definitions/Extension" }
          }
        ]
      }
    },
    "/extensions/unassigned": {
      "get": {
        "produces": ["application/json"],
        "tags": ["Provider"],
        "parameters": [
          {
            "name": "_includeId",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Ensure certain extension id is included"
          },
          {
            "name": "_properties",
            "in": "query",
            "type": "array",
            "required": false,
            "items": { "type": "string" },
            "collectionFormat": "multi",
            "description": "Allows you to reduce the response to contain only the properties you need"
          }
        ],
        "operationId": "get_extensions_unassignedExtensionCollection",
        "summary": "Retrieves the collection of Extension resources.",
        "responses": {
          "200": {
            "description": "Extension collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Extension" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        }
      }
    },
    "/extensions/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getExtensionItem",
        "summary": "Retrieves a Extension resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Extension resource response",
            "schema": { "$ref": "#/definitions/Extension-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putExtensionItem",
        "summary": "Replaces the Extension resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "extension",
            "in": "body",
            "description": "The updated Extension resource",
            "schema": { "$ref": "#/definitions/Extension" }
          }
        ],
        "responses": {
          "200": {
            "description": "Extension resource updated",
            "schema": { "$ref": "#/definitions/Extension" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteExtensionItem",
        "summary": "Removes the Extension resource.",
        "responses": {
          "204": { "description": "Extension resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/external_call_filter_black_lists": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getExternalCallFilterBlackListCollection",
        "summary": "Retrieves the collection of ExternalCallFilterBlackList resources.",
        "responses": {
          "200": {
            "description": "ExternalCallFilterBlackList collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExternalCallFilterBlackList-detailedCollection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.holidayEnabled",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.holidayExtension",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.holidayLocution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.holidayNumberCountry",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.holidayNumberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.holidayTargetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.holidayVoicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.outOfScheduleEnabled",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.outOfScheduleExtension",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.outOfScheduleLocution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.outOfScheduleNumberCountry",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.outOfScheduleNumberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.outOfScheduleTargetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.outOfScheduleVoicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.welcomeLocution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "matchlist",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "matchlist.generic",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "matchlist.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "matchlist[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postExternalCallFilterBlackListCollection",
        "summary": "Creates a ExternalCallFilterBlackList resource.",
        "responses": {
          "201": {
            "description": "ExternalCallFilterBlackList resource created",
            "schema": { "$ref": "#/definitions/ExternalCallFilterBlackList" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "externalCallFilterBlackList",
            "in": "body",
            "description": "The new ExternalCallFilterBlackList resource",
            "schema": { "$ref": "#/definitions/ExternalCallFilterBlackList" }
          }
        ]
      }
    },
    "/external_call_filter_black_lists/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getExternalCallFilterBlackListItem",
        "summary": "Retrieves a ExternalCallFilterBlackList resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "ExternalCallFilterBlackList resource response",
            "schema": {
              "$ref": "#/definitions/ExternalCallFilterBlackList-detailed"
            }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putExternalCallFilterBlackListItem",
        "summary": "Replaces the ExternalCallFilterBlackList resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "externalCallFilterBlackList",
            "in": "body",
            "description": "The updated ExternalCallFilterBlackList resource",
            "schema": { "$ref": "#/definitions/ExternalCallFilterBlackList" }
          }
        ],
        "responses": {
          "200": {
            "description": "ExternalCallFilterBlackList resource updated",
            "schema": { "$ref": "#/definitions/ExternalCallFilterBlackList" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteExternalCallFilterBlackListItem",
        "summary": "Removes the ExternalCallFilterBlackList resource.",
        "responses": {
          "204": {
            "description": "ExternalCallFilterBlackList resource deleted"
          },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/external_call_filter_rel_calendars": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getExternalCallFilterRelCalendarCollection",
        "summary": "Retrieves the collection of ExternalCallFilterRelCalendar resources.",
        "responses": {
          "200": {
            "description": "ExternalCallFilterRelCalendar collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExternalCallFilterRelCalendar-detailedCollection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "calendar",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calendar.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calendar[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.holidayEnabled",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.holidayExtension",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.holidayLocution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.holidayNumberCountry",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.holidayNumberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.holidayTargetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.holidayVoicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.outOfScheduleEnabled",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.outOfScheduleExtension",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.outOfScheduleLocution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.outOfScheduleNumberCountry",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.outOfScheduleNumberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.outOfScheduleTargetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.outOfScheduleVoicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.welcomeLocution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postExternalCallFilterRelCalendarCollection",
        "summary": "Creates a ExternalCallFilterRelCalendar resource.",
        "responses": {
          "201": {
            "description": "ExternalCallFilterRelCalendar resource created",
            "schema": { "$ref": "#/definitions/ExternalCallFilterRelCalendar" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "externalCallFilterRelCalendar",
            "in": "body",
            "description": "The new ExternalCallFilterRelCalendar resource",
            "schema": { "$ref": "#/definitions/ExternalCallFilterRelCalendar" }
          }
        ]
      }
    },
    "/external_call_filter_rel_calendars/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getExternalCallFilterRelCalendarItem",
        "summary": "Retrieves a ExternalCallFilterRelCalendar resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "ExternalCallFilterRelCalendar resource response",
            "schema": {
              "$ref": "#/definitions/ExternalCallFilterRelCalendar-detailed"
            }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putExternalCallFilterRelCalendarItem",
        "summary": "Replaces the ExternalCallFilterRelCalendar resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "externalCallFilterRelCalendar",
            "in": "body",
            "description": "The updated ExternalCallFilterRelCalendar resource",
            "schema": { "$ref": "#/definitions/ExternalCallFilterRelCalendar" }
          }
        ],
        "responses": {
          "200": {
            "description": "ExternalCallFilterRelCalendar resource updated",
            "schema": { "$ref": "#/definitions/ExternalCallFilterRelCalendar" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteExternalCallFilterRelCalendarItem",
        "summary": "Removes the ExternalCallFilterRelCalendar resource.",
        "responses": {
          "204": {
            "description": "ExternalCallFilterRelCalendar resource deleted"
          },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/external_call_filter_rel_schedules": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getExternalCallFilterRelScheduleCollection",
        "summary": "Retrieves the collection of ExternalCallFilterRelSchedule resources.",
        "responses": {
          "200": {
            "description": "ExternalCallFilterRelSchedule collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExternalCallFilterRelSchedule-detailedCollection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.holidayEnabled",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.holidayExtension",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.holidayLocution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.holidayNumberCountry",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.holidayNumberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.holidayTargetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.holidayVoicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.outOfScheduleEnabled",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.outOfScheduleExtension",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.outOfScheduleLocution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.outOfScheduleNumberCountry",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.outOfScheduleNumberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.outOfScheduleTargetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.outOfScheduleVoicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.welcomeLocution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "schedule",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "schedule.friday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "schedule.monday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "schedule.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "schedule.saturday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "schedule.sunday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "schedule.thursday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "schedule.timeIn",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "schedule.timeout",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "schedule.tuesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "schedule.wednesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "schedule[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postExternalCallFilterRelScheduleCollection",
        "summary": "Creates a ExternalCallFilterRelSchedule resource.",
        "responses": {
          "201": {
            "description": "ExternalCallFilterRelSchedule resource created",
            "schema": { "$ref": "#/definitions/ExternalCallFilterRelSchedule" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "externalCallFilterRelSchedule",
            "in": "body",
            "description": "The new ExternalCallFilterRelSchedule resource",
            "schema": { "$ref": "#/definitions/ExternalCallFilterRelSchedule" }
          }
        ]
      }
    },
    "/external_call_filter_rel_schedules/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getExternalCallFilterRelScheduleItem",
        "summary": "Retrieves a ExternalCallFilterRelSchedule resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "ExternalCallFilterRelSchedule resource response",
            "schema": {
              "$ref": "#/definitions/ExternalCallFilterRelSchedule-detailed"
            }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putExternalCallFilterRelScheduleItem",
        "summary": "Replaces the ExternalCallFilterRelSchedule resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "externalCallFilterRelSchedule",
            "in": "body",
            "description": "The updated ExternalCallFilterRelSchedule resource",
            "schema": { "$ref": "#/definitions/ExternalCallFilterRelSchedule" }
          }
        ],
        "responses": {
          "200": {
            "description": "ExternalCallFilterRelSchedule resource updated",
            "schema": { "$ref": "#/definitions/ExternalCallFilterRelSchedule" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteExternalCallFilterRelScheduleItem",
        "summary": "Removes the ExternalCallFilterRelSchedule resource.",
        "responses": {
          "204": {
            "description": "ExternalCallFilterRelSchedule resource deleted"
          },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/external_call_filter_white_lists": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getExternalCallFilterWhiteListCollection",
        "summary": "Retrieves the collection of ExternalCallFilterWhiteList resources.",
        "responses": {
          "200": {
            "description": "ExternalCallFilterWhiteList collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExternalCallFilterWhiteList-detailedCollection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.holidayEnabled",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.holidayExtension",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.holidayLocution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.holidayNumberCountry",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.holidayNumberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.holidayTargetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.holidayVoicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.outOfScheduleEnabled",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.outOfScheduleExtension",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.outOfScheduleLocution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.outOfScheduleNumberCountry",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.outOfScheduleNumberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.outOfScheduleTargetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.outOfScheduleVoicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter.welcomeLocution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "filter[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "matchlist",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "matchlist.generic",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "matchlist.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "matchlist[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postExternalCallFilterWhiteListCollection",
        "summary": "Creates a ExternalCallFilterWhiteList resource.",
        "responses": {
          "201": {
            "description": "ExternalCallFilterWhiteList resource created",
            "schema": { "$ref": "#/definitions/ExternalCallFilterWhiteList" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "externalCallFilterWhiteList",
            "in": "body",
            "description": "The new ExternalCallFilterWhiteList resource",
            "schema": { "$ref": "#/definitions/ExternalCallFilterWhiteList" }
          }
        ]
      }
    },
    "/external_call_filter_white_lists/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getExternalCallFilterWhiteListItem",
        "summary": "Retrieves a ExternalCallFilterWhiteList resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "ExternalCallFilterWhiteList resource response",
            "schema": {
              "$ref": "#/definitions/ExternalCallFilterWhiteList-detailed"
            }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putExternalCallFilterWhiteListItem",
        "summary": "Replaces the ExternalCallFilterWhiteList resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "externalCallFilterWhiteList",
            "in": "body",
            "description": "The updated ExternalCallFilterWhiteList resource",
            "schema": { "$ref": "#/definitions/ExternalCallFilterWhiteList" }
          }
        ],
        "responses": {
          "200": {
            "description": "ExternalCallFilterWhiteList resource updated",
            "schema": { "$ref": "#/definitions/ExternalCallFilterWhiteList" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteExternalCallFilterWhiteListItem",
        "summary": "Removes the ExternalCallFilterWhiteList resource.",
        "responses": {
          "204": {
            "description": "ExternalCallFilterWhiteList resource deleted"
          },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/external_call_filters": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getExternalCallFilterCollection",
        "summary": "Retrieves the collection of ExternalCallFilter resources.",
        "responses": {
          "200": {
            "description": "ExternalCallFilter collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ExternalCallFilter-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "exists[holidayExtension]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[holidayLocution]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[holidayNumberCountry]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[holidayNumberValue]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[holidayTargetType]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[holidayVoicemail]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[outOfScheduleExtension]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[outOfScheduleLocution]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[outOfScheduleNumberCountry]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[outOfScheduleNumberValue]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[outOfScheduleTargetType]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[outOfScheduleVoicemail]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "holidayExtension",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "holidayExtension[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "holidayExtension[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "holidayLocution",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "holidayLocution[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "holidayLocution[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "holidayNumberCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "holidayNumberCountry[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "holidayNumberCountry[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "holidayNumberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "holidayNumberValue[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "holidayNumberValue[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "holidayNumberValue[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "holidayNumberValue[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "holidayNumberValue[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "holidayNumberValue[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "holidayTargetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "holidayTargetType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "holidayTargetType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "holidayTargetType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "holidayTargetType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "holidayTargetType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "holidayTargetType[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "holidayVoicemail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "holidayVoicemail[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "holidayVoicemail[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outOfScheduleExtension",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outOfScheduleExtension[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outOfScheduleExtension[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "outOfScheduleLocution",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outOfScheduleLocution[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outOfScheduleLocution[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "outOfScheduleNumberCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outOfScheduleNumberCountry[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outOfScheduleNumberCountry[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "outOfScheduleNumberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outOfScheduleNumberValue[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outOfScheduleNumberValue[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outOfScheduleNumberValue[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outOfScheduleNumberValue[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outOfScheduleNumberValue[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "outOfScheduleNumberValue[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outOfScheduleTargetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outOfScheduleTargetType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outOfScheduleTargetType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outOfScheduleTargetType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outOfScheduleTargetType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outOfScheduleTargetType[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "outOfScheduleTargetType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outOfScheduleVoicemail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outOfScheduleVoicemail[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outOfScheduleVoicemail[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "welcomeLocution",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "welcomeLocution[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "welcomeLocution[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[holidayNumberValue]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[holidayTargetType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[outOfScheduleNumberValue]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[outOfScheduleTargetType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postExternalCallFilterCollection",
        "summary": "Creates a ExternalCallFilter resource.",
        "responses": {
          "201": {
            "description": "ExternalCallFilter resource created",
            "schema": {
              "$ref": "#/definitions/ExternalCallFilter-withInverseRelationships"
            }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "externalCallFilter",
            "in": "body",
            "description": "The new ExternalCallFilter resource",
            "schema": { "$ref": "#/definitions/ExternalCallFilter" }
          }
        ]
      }
    },
    "/external_call_filters/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getExternalCallFilterItem",
        "summary": "Retrieves a ExternalCallFilter resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "ExternalCallFilter resource response",
            "schema": { "$ref": "#/definitions/ExternalCallFilter-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putExternalCallFilterItem",
        "summary": "Replaces the ExternalCallFilter resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "externalCallFilter",
            "in": "body",
            "description": "The updated ExternalCallFilter resource",
            "schema": { "$ref": "#/definitions/ExternalCallFilter" }
          }
        ],
        "responses": {
          "200": {
            "description": "ExternalCallFilter resource updated",
            "schema": {
              "$ref": "#/definitions/ExternalCallFilter-withInverseRelationships"
            }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteExternalCallFilterItem",
        "summary": "Removes the ExternalCallFilter resource.",
        "responses": {
          "204": { "description": "ExternalCallFilter resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/faxes": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getFaxCollection",
        "summary": "Retrieves the collection of Fax resources.",
        "responses": {
          "200": {
            "description": "Fax collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Fax-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "email[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[email]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[outgoingDdi]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sendByEmail",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[email]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[sendByEmail]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postFaxCollection",
        "summary": "Creates a Fax resource.",
        "responses": {
          "201": {
            "description": "Fax resource created",
            "schema": { "$ref": "#/definitions/Fax" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "fax",
            "in": "body",
            "description": "The new Fax resource",
            "schema": { "$ref": "#/definitions/Fax" }
          }
        ]
      }
    },
    "/faxes/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getFaxItem",
        "summary": "Retrieves a Fax resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Fax resource response",
            "schema": { "$ref": "#/definitions/Fax-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putFaxItem",
        "summary": "Replaces the Fax resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "fax",
            "in": "body",
            "description": "The updated Fax resource",
            "schema": { "$ref": "#/definitions/Fax" }
          }
        ],
        "responses": {
          "200": {
            "description": "Fax resource updated",
            "schema": { "$ref": "#/definitions/Fax" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteFaxItem",
        "summary": "Removes the Fax resource.",
        "responses": {
          "204": { "description": "Fax resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/faxes_in_outs": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getFaxesInOutCollection",
        "summary": "Retrieves the collection of FaxesInOut resources.",
        "responses": {
          "200": {
            "description": "FaxesInOut collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/FaxesInOut-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "calldate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calldate[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calldate[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calldate[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calldate[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calldate[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calldate[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          { "name": "dst", "in": "query", "required": false, "type": "string" },
          {
            "name": "dstCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dstCountry[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dstCountry[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "dst[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dst[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dst[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dst[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dst[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "dst[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[dst]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[src]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[status]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[type]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          { "name": "fax", "in": "query", "required": false, "type": "string" },
          {
            "name": "fax[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          { "name": "src", "in": "query", "required": false, "type": "string" },
          {
            "name": "src[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "src[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "src[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "src[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "src[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "src[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "status[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "type[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[calldate]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[dst]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[src]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[status]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[type]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ]
      },
      "post": {
        "consumes": [
          "multipart/form-data",
          "application/json",
          "application/ld+json"
        ],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postFaxesInOutCollection",
        "summary": "Creates a FaxesInOut resource.",
        "responses": {
          "201": {
            "description": "FaxesInOut resource created",
            "schema": { "$ref": "#/definitions/FaxesInOut" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "faxesInOut",
            "in": "formData",
            "description": "The new FaxesInOut resource",
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "type": "file",
            "required": false
          },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ]
      }
    },
    "/faxes_in_outs/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getFaxesInOutItem",
        "summary": "Retrieves a FaxesInOut resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ],
        "responses": {
          "200": {
            "description": "FaxesInOut resource response",
            "schema": { "$ref": "#/definitions/FaxesInOut-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteFaxesInOutItem",
        "summary": "Removes the FaxesInOut resource.",
        "responses": {
          "204": { "description": "FaxesInOut resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/faxes_in_outs/{id}/file": {
      "get": {
        "produces": ["application/octet-stream"],
        "responses": {
          "200": {
            "description": "#/definitions/FaxesInOut_File",
            "schema": { "type": "file" }
          },
          "404": { "description": "Resource not found" }
        },
        "tags": ["Provider"],
        "operationId": "/faxesinout_fileFaxesInOutItem",
        "summary": "Retrieves a FaxesInOut resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ]
      }
    },
    "/features_rel_companies": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getFeaturesRelCompanyCollection",
        "summary": "Retrieves the collection of FeaturesRelCompany resources.",
        "responses": {
          "200": {
            "description": "FeaturesRelCompany collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FeaturesRelCompany-detailedCollection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "feature",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "feature.iden",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "feature[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/features_rel_companies/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getFeaturesRelCompanyItem",
        "summary": "Retrieves a FeaturesRelCompany resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "FeaturesRelCompany resource response",
            "schema": { "$ref": "#/definitions/FeaturesRelCompany-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/friends": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getFriendCollection",
        "summary": "Retrieves the collection of Friend resources.",
        "responses": {
          "200": {
            "description": "Friend collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Friend-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "callAcl",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callAcl[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callAcl[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domain",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "priority[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transformationRuleSet",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transformationRuleSet[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transformationRuleSet[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[directConnectivity]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[priority]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postFriendCollection",
        "summary": "Creates a Friend resource.",
        "responses": {
          "201": {
            "description": "Friend resource created",
            "schema": { "$ref": "#/definitions/Friend" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "friend",
            "in": "body",
            "description": "The new Friend resource",
            "schema": { "$ref": "#/definitions/Friend" }
          }
        ]
      }
    },
    "/friends/status": {
      "get": {
        "tags": ["Provider"],
        "operationId": "get_status_collectionFriendCollection",
        "produces": [
          "application/json",
          "application/ld+json",
          "text/csv",
          "application/xml",
          "text/xml",
          "text/html",
          "application/octet-stream"
        ],
        "summary": "Retrieves the collection of Friend resources.",
        "responses": {
          "200": {
            "description": "Friend collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Friend-status" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "callAcl",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callAcl[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callAcl[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "domainName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "transformationRuleSet",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transformationRuleSet[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transformationRuleSet[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/friends/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getFriendItem",
        "summary": "Retrieves a Friend resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Friend resource response",
            "schema": { "$ref": "#/definitions/Friend-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putFriendItem",
        "summary": "Replaces the Friend resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "friend",
            "in": "body",
            "description": "The updated Friend resource",
            "schema": { "$ref": "#/definitions/Friend" }
          }
        ],
        "responses": {
          "200": {
            "description": "Friend resource updated",
            "schema": { "$ref": "#/definitions/Friend" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteFriendItem",
        "summary": "Removes the Friend resource.",
        "responses": {
          "204": { "description": "Friend resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/friends/{id}/status": {
      "get": {
        "tags": ["Provider"],
        "operationId": "get_status_itemFriendItem",
        "produces": [
          "application/json",
          "application/ld+json",
          "text/csv",
          "application/xml",
          "text/xml",
          "text/html",
          "application/octet-stream"
        ],
        "summary": "Retrieves a Friend resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Friend resource response",
            "schema": { "$ref": "#/definitions/Friend-status" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/friends_patterns": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getFriendsPatternCollection",
        "summary": "Retrieves the collection of FriendsPattern resources.",
        "responses": {
          "200": {
            "description": "FriendsPattern collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/FriendsPattern-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "friend",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friend[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "regExp",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "regExp[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "regExp[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "regExp[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "regExp[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "regExp[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[regExp]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postFriendsPatternCollection",
        "summary": "Creates a FriendsPattern resource.",
        "responses": {
          "201": {
            "description": "FriendsPattern resource created",
            "schema": { "$ref": "#/definitions/FriendsPattern" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "friendsPattern",
            "in": "body",
            "description": "The new FriendsPattern resource",
            "schema": { "$ref": "#/definitions/FriendsPattern" }
          }
        ]
      }
    },
    "/friends_patterns/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getFriendsPatternItem",
        "summary": "Retrieves a FriendsPattern resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "FriendsPattern resource response",
            "schema": { "$ref": "#/definitions/FriendsPattern-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putFriendsPatternItem",
        "summary": "Replaces the FriendsPattern resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "friendsPattern",
            "in": "body",
            "description": "The updated FriendsPattern resource",
            "schema": { "$ref": "#/definitions/FriendsPattern" }
          }
        ],
        "responses": {
          "200": {
            "description": "FriendsPattern resource updated",
            "schema": { "$ref": "#/definitions/FriendsPattern" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteFriendsPatternItem",
        "summary": "Removes the FriendsPattern resource.",
        "responses": {
          "204": { "description": "FriendsPattern resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/holiday_dates": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getHolidayDateCollection",
        "summary": "Retrieves the collection of HolidayDate resources.",
        "responses": {
          "200": {
            "description": "HolidayDate collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/HolidayDate-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "calendar",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calendar[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "eventDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "eventDate[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "eventDate[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "eventDate[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "eventDate[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "eventDate[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "eventDate[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[extension]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[locution]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[numberCountry]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[numberValue]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[routeType]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[timeIn]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[timeOut]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[voicemail]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "extension",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extension[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extension[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "locution",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "locution[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "locution[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "numberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "routeType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "timeIn",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeIn[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeIn[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeIn[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeIn[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeIn[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "timeIn[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeIn[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeOut",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeOut[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeOut[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeOut[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeOut[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "timeOut[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeOut[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeOut[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemail[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemail[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "wholeDayEvent",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[eventDate]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[numberValue]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[routeType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[timeIn]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[timeOut]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[wholeDayEvent]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postHolidayDateCollection",
        "summary": "Creates a HolidayDate resource.",
        "responses": {
          "201": {
            "description": "HolidayDate resource created",
            "schema": { "$ref": "#/definitions/HolidayDate" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "holidayDate",
            "in": "body",
            "description": "The new HolidayDate resource",
            "schema": { "$ref": "#/definitions/HolidayDate" }
          }
        ]
      }
    },
    "/holiday_dates/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getHolidayDateItem",
        "summary": "Retrieves a HolidayDate resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "HolidayDate resource response",
            "schema": { "$ref": "#/definitions/HolidayDate-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putHolidayDateItem",
        "summary": "Replaces the HolidayDate resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "holidayDate",
            "in": "body",
            "description": "The updated HolidayDate resource",
            "schema": { "$ref": "#/definitions/HolidayDate" }
          }
        ],
        "responses": {
          "200": {
            "description": "HolidayDate resource updated",
            "schema": { "$ref": "#/definitions/HolidayDate" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteHolidayDateItem",
        "summary": "Removes the HolidayDate resource.",
        "responses": {
          "204": { "description": "HolidayDate resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/hunt_group_members": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getHuntGroupMemberCollection",
        "summary": "Retrieves the collection of HuntGroupMember resources.",
        "responses": {
          "200": {
            "description": "HuntGroupMember collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HuntGroupMember-detailedCollection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "exists[numberCountry]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[numberValue]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[priority]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[timeoutTime]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[user]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "huntGroup",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "huntGroup.allowCallForwards",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "huntGroup.description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "huntGroup.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "huntGroup.noAnswerExtension",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "huntGroup.noAnswerLocution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "huntGroup.noAnswerNumberCountry",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "huntGroup.noAnswerNumberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "huntGroup.noAnswerTargetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "huntGroup.noAnswerVoicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "huntGroup.preventMissedCalls",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "huntGroup.ringAllTimeout",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "huntGroup.strategy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "huntGroup[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry.code",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry.countryCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "numberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "numberValue[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "priority[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "priority[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeoutTime",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "timeoutTime[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "timeoutTime[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeoutTime[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeoutTime[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeoutTime[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeoutTime[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeoutTime[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.active",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "user.bossAssistant",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.bossAssistantWhiteList",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.callAcl",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.contact",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.doNotDisturb",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "user.email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.extension",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.externalIpCalls",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.gsQRCode",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "user.isBoss",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "user.language",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.lastname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.location",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.maxCalls",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.multiContact",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "user.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.outgoingDdi",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.outgoingDdiRule",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.pass",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.rejectCallMethod",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.terminal",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.timezone",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.transformationRuleSet",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.voicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "zone.ca",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "zone.en",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "zone.es",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "zone.it",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[numberValue]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[priority]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[routeType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[timeoutTime]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postHuntGroupMemberCollection",
        "summary": "Creates a HuntGroupMember resource.",
        "responses": {
          "201": {
            "description": "HuntGroupMember resource created",
            "schema": { "$ref": "#/definitions/HuntGroupMember" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "huntGroupMember",
            "in": "body",
            "description": "The new HuntGroupMember resource",
            "schema": { "$ref": "#/definitions/HuntGroupMember" }
          }
        ]
      }
    },
    "/hunt_group_members/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getHuntGroupMemberItem",
        "summary": "Retrieves a HuntGroupMember resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "HuntGroupMember resource response",
            "schema": { "$ref": "#/definitions/HuntGroupMember-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putHuntGroupMemberItem",
        "summary": "Replaces the HuntGroupMember resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "huntGroupMember",
            "in": "body",
            "description": "The updated HuntGroupMember resource",
            "schema": { "$ref": "#/definitions/HuntGroupMember" }
          }
        ],
        "responses": {
          "200": {
            "description": "HuntGroupMember resource updated",
            "schema": { "$ref": "#/definitions/HuntGroupMember" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteHuntGroupMemberItem",
        "summary": "Removes the HuntGroupMember resource.",
        "responses": {
          "204": { "description": "HuntGroupMember resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/hunt_groups": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getHuntGroupCollection",
        "summary": "Retrieves the collection of HuntGroup resources.",
        "responses": {
          "200": {
            "description": "HuntGroup collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/HuntGroup-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noAnswerExtension",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noAnswerExtension[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noAnswerExtension[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "noAnswerLocution",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noAnswerLocution[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noAnswerLocution[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "noAnswerNumberCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noAnswerNumberCountry[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noAnswerNumberCountry[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "noAnswerVoicemail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noAnswerVoicemail[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noAnswerVoicemail[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "strategy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "strategy[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "strategy[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "strategy[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "strategy[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "strategy[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[strategy]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postHuntGroupCollection",
        "summary": "Creates a HuntGroup resource.",
        "responses": {
          "201": {
            "description": "HuntGroup resource created",
            "schema": { "$ref": "#/definitions/HuntGroup" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "huntGroup",
            "in": "body",
            "description": "The new HuntGroup resource",
            "schema": { "$ref": "#/definitions/HuntGroup" }
          }
        ]
      }
    },
    "/hunt_groups/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getHuntGroupItem",
        "summary": "Retrieves a HuntGroup resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "HuntGroup resource response",
            "schema": { "$ref": "#/definitions/HuntGroup-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putHuntGroupItem",
        "summary": "Replaces the HuntGroup resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "huntGroup",
            "in": "body",
            "description": "The updated HuntGroup resource",
            "schema": { "$ref": "#/definitions/HuntGroup" }
          }
        ],
        "responses": {
          "200": {
            "description": "HuntGroup resource updated",
            "schema": { "$ref": "#/definitions/HuntGroup" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteHuntGroupItem",
        "summary": "Removes the HuntGroup resource.",
        "responses": {
          "204": { "description": "HuntGroup resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/hunt_groups/{id}/users_available": {
      "get": {
        "produces": ["application/json"],
        "tags": ["Provider"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Hunt group id"
          },
          {
            "name": "_includeId",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Ensure certain user id is included"
          },
          {
            "name": "_properties",
            "in": "query",
            "type": "array",
            "required": false,
            "items": { "type": "string" },
            "collectionFormat": "multi",
            "description": "Allows you to reduce the response to contain only the properties you need"
          }
        ],
        "operationId": "get_hunt_group_users_availableUserCollection",
        "summary": "Retrieves the collection of User resources.",
        "responses": {
          "200": {
            "description": "User collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/User" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        }
      }
    },
    "/invoices": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getInvoiceCollection",
        "summary": "Retrieves the collection of Invoice resources.",
        "responses": {
          "200": {
            "description": "Invoice collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Invoice-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[inDate]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[number]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[outDate]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[pdf.baseName]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[pdf.fileSize]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[pdf.mimeType]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[taxRate]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[totalWithTax]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inDate[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inDate[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inDate[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inDate[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "inDate[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inDate[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inDate[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "number",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "number[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "number[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "number[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "number[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "number[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "number[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "outDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outDate[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outDate[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outDate[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "outDate[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outDate[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outDate[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outDate[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pdf.baseName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pdf.baseName[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pdf.baseName[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pdf.baseName[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pdf.baseName[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pdf.baseName[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pdf.baseName[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pdf.fileSize",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pdf.fileSize[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pdf.fileSize[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pdf.fileSize[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pdf.fileSize[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pdf.fileSize[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pdf.fileSize[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pdf.fileSize[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pdf.mimeType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pdf.mimeType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pdf.mimeType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pdf.mimeType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pdf.mimeType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pdf.mimeType[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pdf.mimeType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "taxRate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "taxRate[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "taxRate[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "taxRate[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "taxRate[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "taxRate[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "taxRate[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "taxRate[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "totalWithTax",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "totalWithTax[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "totalWithTax[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "totalWithTax[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "totalWithTax[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "totalWithTax[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "totalWithTax[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "totalWithTax[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[inDate]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[number]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[outDate]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[pdf.baseName]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[pdf.fileSize]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[pdf.mimeType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[taxRate]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[totalWithTax]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ]
      }
    },
    "/ivr_entries": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getIvrEntryCollection",
        "summary": "Retrieves the collection of IvrEntry resources.",
        "responses": {
          "200": {
            "description": "IvrEntry collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/IvrEntry-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "conditionalRoute",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "conditionalRoute[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "conditionalRoute[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "displayName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "displayName[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "displayName[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "displayName[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "displayName[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "displayName[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "displayName[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entry[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entry[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entry[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entry[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entry[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[conditionalRoute]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[displayName]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[extension]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[numberCountry]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[numberValue]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[voicemail]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[welcomeLocution]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "extension",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extension[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extension[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          { "name": "ivr", "in": "query", "required": false, "type": "string" },
          {
            "name": "ivr[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "numberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberValue[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "routeType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemail[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemail[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "welcomeLocution",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "welcomeLocution[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "welcomeLocution[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[displayName]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[entry]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[numberValue]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[routeType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postIvrEntryCollection",
        "summary": "Creates a IvrEntry resource.",
        "responses": {
          "201": {
            "description": "IvrEntry resource created",
            "schema": { "$ref": "#/definitions/IvrEntry" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "ivrEntry",
            "in": "body",
            "description": "The new IvrEntry resource",
            "schema": { "$ref": "#/definitions/IvrEntry" }
          }
        ]
      }
    },
    "/ivr_entries/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getIvrEntryItem",
        "summary": "Retrieves a IvrEntry resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "IvrEntry resource response",
            "schema": { "$ref": "#/definitions/IvrEntry-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putIvrEntryItem",
        "summary": "Replaces the IvrEntry resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "ivrEntry",
            "in": "body",
            "description": "The updated IvrEntry resource",
            "schema": { "$ref": "#/definitions/IvrEntry" }
          }
        ],
        "responses": {
          "200": {
            "description": "IvrEntry resource updated",
            "schema": { "$ref": "#/definitions/IvrEntry" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteIvrEntryItem",
        "summary": "Removes the IvrEntry resource.",
        "responses": {
          "204": { "description": "IvrEntry resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/ivr_excluded_extensions": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getIvrExcludedExtensionCollection",
        "summary": "Retrieves the collection of IvrExcludedExtension resources.",
        "responses": {
          "200": {
            "description": "IvrExcludedExtension collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IvrExcludedExtension-detailedCollection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "extension",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extension.conditionalRoute",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "extension.conferenceRoom",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "extension.friendValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extension.huntGroup",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "extension.ivr",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "extension.number",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extension.numberCountry",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "extension.numberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extension.queue",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "extension.routeType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extension.user",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "extension.voicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "extension[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          { "name": "ivr", "in": "query", "required": false, "type": "string" },
          {
            "name": "ivr.allowExtensions",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "ivr.errorExtension",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "ivr.errorLocution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "ivr.errorNumberCountry",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "ivr.errorNumberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ivr.errorRouteType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ivr.errorVoicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "ivr.maxDigits",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "ivr.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ivr.noInputExtension",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "ivr.noInputLocution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "ivr.noInputNumberCountry",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "ivr.noInputNumberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ivr.noInputRouteType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ivr.noInputVoicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "ivr.successLocution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "ivr.timeout",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "ivr.welcomeLocution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "ivr[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postIvrExcludedExtensionCollection",
        "summary": "Creates a IvrExcludedExtension resource.",
        "responses": {
          "201": {
            "description": "IvrExcludedExtension resource created",
            "schema": { "$ref": "#/definitions/IvrExcludedExtension" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "ivrExcludedExtension",
            "in": "body",
            "description": "The new IvrExcludedExtension resource",
            "schema": { "$ref": "#/definitions/IvrExcludedExtension" }
          }
        ]
      }
    },
    "/ivr_excluded_extensions/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getIvrExcludedExtensionItem",
        "summary": "Retrieves a IvrExcludedExtension resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "IvrExcludedExtension resource response",
            "schema": { "$ref": "#/definitions/IvrExcludedExtension-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putIvrExcludedExtensionItem",
        "summary": "Replaces the IvrExcludedExtension resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "ivrExcludedExtension",
            "in": "body",
            "description": "The updated IvrExcludedExtension resource",
            "schema": { "$ref": "#/definitions/IvrExcludedExtension" }
          }
        ],
        "responses": {
          "200": {
            "description": "IvrExcludedExtension resource updated",
            "schema": { "$ref": "#/definitions/IvrExcludedExtension" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteIvrExcludedExtensionItem",
        "summary": "Removes the IvrExcludedExtension resource.",
        "responses": {
          "204": { "description": "IvrExcludedExtension resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/ivrs": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getIvrCollection",
        "summary": "Retrieves the collection of Ivr resources.",
        "responses": {
          "200": {
            "description": "Ivr collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Ivr-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "allowExtensions",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "errorExtension",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorExtension[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorExtension[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "errorLocution",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorLocution[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorLocution[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "errorNumberCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorNumberCountry[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorNumberCountry[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "errorNumberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorNumberValue[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorNumberValue[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorNumberValue[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorNumberValue[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorNumberValue[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "errorNumberValue[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorRouteType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorRouteType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorRouteType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorRouteType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorRouteType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorRouteType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorRouteType[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "errorVoicemail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorVoicemail[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorVoicemail[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[errorExtension]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[errorLocution]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[errorNumberCountry]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[errorNumberValue]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[errorRouteType]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[errorVoicemail]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[noInputExtension]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[noInputLocution]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[noInputNumberCountry]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[noInputNumberValue]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[noInputRouteType]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[noInputVoicemail]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[successLocution]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noInputExtension",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noInputExtension[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noInputExtension[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "noInputLocution",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noInputLocution[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noInputLocution[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "noInputNumberCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noInputNumberCountry[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noInputNumberCountry[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "noInputNumberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noInputNumberValue[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noInputNumberValue[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noInputNumberValue[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noInputNumberValue[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noInputNumberValue[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "noInputNumberValue[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noInputRouteType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noInputRouteType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noInputRouteType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noInputRouteType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noInputRouteType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noInputRouteType[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "noInputRouteType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noInputVoicemail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noInputVoicemail[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "noInputVoicemail[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "successLocution",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "successLocution[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "successLocution[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "timeout",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "timeout[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeout[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeout[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeout[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeout[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeout[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "welcomeLocution",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "welcomeLocution[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "welcomeLocution[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[allowExtensions]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[errorNumberValue]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[errorRouteType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[noInputNumberValue]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[noInputRouteType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[timeout]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postIvrCollection",
        "summary": "Creates a Ivr resource.",
        "responses": {
          "201": {
            "description": "Ivr resource created",
            "schema": { "$ref": "#/definitions/Ivr-withExcludedExtensions" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "ivr",
            "in": "body",
            "description": "The new Ivr resource",
            "schema": { "$ref": "#/definitions/Ivr" }
          }
        ]
      }
    },
    "/ivrs/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getIvrItem",
        "summary": "Retrieves a Ivr resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Ivr resource response",
            "schema": { "$ref": "#/definitions/Ivr-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putIvrItem",
        "summary": "Replaces the Ivr resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "ivr",
            "in": "body",
            "description": "The updated Ivr resource",
            "schema": { "$ref": "#/definitions/Ivr" }
          }
        ],
        "responses": {
          "200": {
            "description": "Ivr resource updated",
            "schema": { "$ref": "#/definitions/Ivr-withExcludedExtensions" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteIvrItem",
        "summary": "Removes the Ivr resource.",
        "responses": {
          "204": { "description": "Ivr resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/languages": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getLanguageCollection",
        "summary": "Retrieves the collection of Language resources.",
        "responses": {
          "200": {
            "description": "Language collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Language-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[iden]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.ca]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.en]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.es]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.it]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/languages/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getLanguageItem",
        "summary": "Retrieves a Language resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Language resource response",
            "schema": { "$ref": "#/definitions/Language-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/locations": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getLocationCollection",
        "summary": "Retrieves the collection of Location resources.",
        "responses": {
          "200": {
            "description": "Location collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Location-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "description[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[description]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postLocationCollection",
        "summary": "Creates a Location resource.",
        "responses": {
          "201": {
            "description": "Location resource created",
            "schema": { "$ref": "#/definitions/Location" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "location",
            "in": "body",
            "description": "The new Location resource",
            "schema": { "$ref": "#/definitions/Location" }
          }
        ]
      }
    },
    "/locations/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getLocationItem",
        "summary": "Retrieves a Location resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Location resource response",
            "schema": { "$ref": "#/definitions/Location-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putLocationItem",
        "summary": "Replaces the Location resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "location",
            "in": "body",
            "description": "The updated Location resource",
            "schema": { "$ref": "#/definitions/Location" }
          }
        ],
        "responses": {
          "200": {
            "description": "Location resource updated",
            "schema": { "$ref": "#/definitions/Location" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteLocationItem",
        "summary": "Removes the Location resource.",
        "responses": {
          "204": { "description": "Location resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/locutions": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getLocutionCollection",
        "summary": "Retrieves the collection of Locution resources.",
        "responses": {
          "200": {
            "description": "Locution collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Locution-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "exists[originalFile.baseName]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[originalFile.fileSize]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[originalFile.mimeType]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[status]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.baseName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.baseName[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.baseName[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.baseName[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.baseName[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.baseName[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.baseName[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "originalFile.fileSize",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "originalFile.fileSize[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "originalFile.fileSize[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.fileSize[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.fileSize[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.fileSize[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.fileSize[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.fileSize[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.mimeType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.mimeType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.mimeType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.mimeType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.mimeType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.mimeType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.mimeType[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "status[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[originalFile.baseName]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[originalFile.fileSize]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[originalFile.mimeType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[status]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": [
          "multipart/form-data",
          "application/json",
          "application/ld+json"
        ],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postLocutionCollection",
        "summary": "Creates a Locution resource.",
        "responses": {
          "201": {
            "description": "Locution resource created",
            "schema": { "$ref": "#/definitions/Locution" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "locution",
            "in": "formData",
            "description": "The new Locution resource",
            "type": "string"
          },
          {
            "name": "OriginalFile",
            "in": "formData",
            "type": "file",
            "required": false
          }
        ]
      }
    },
    "/locutions/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getLocutionItem",
        "summary": "Retrieves a Locution resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Locution resource response",
            "schema": { "$ref": "#/definitions/Locution-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": [
          "multipart/form-data",
          "application/json",
          "application/ld+json"
        ],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putLocutionItem",
        "summary": "Replaces the Locution resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "locution",
            "in": "formData",
            "description": "The updated Locution resource",
            "type": "string"
          },
          {
            "name": "OriginalFile",
            "in": "formData",
            "type": "file",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Locution resource updated",
            "schema": { "$ref": "#/definitions/Locution" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteLocutionItem",
        "summary": "Removes the Locution resource.",
        "responses": {
          "204": { "description": "Locution resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/locutions/{id}/encodedfile": {
      "get": {
        "produces": ["application/octet-stream"],
        "responses": {
          "200": {
            "description": "#/definitions/Locution_EncodedFile",
            "schema": { "type": "file" }
          },
          "404": { "description": "Resource not found" }
        },
        "tags": ["Provider"],
        "operationId": "/locution_encodedfileLocutionItem",
        "summary": "Retrieves a Locution resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ]
      }
    },
    "/locutions/{id}/originalfile": {
      "get": {
        "produces": ["application/octet-stream"],
        "responses": {
          "200": {
            "description": "#/definitions/Locution_OriginalFile",
            "schema": { "type": "file" }
          },
          "404": { "description": "Resource not found" }
        },
        "tags": ["Provider"],
        "operationId": "/locution_originalfileLocutionItem",
        "summary": "Retrieves a Locution resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ]
      }
    },
    "/match_list_patterns": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getMatchListPatternCollection",
        "summary": "Retrieves the collection of MatchListPattern resources.",
        "responses": {
          "200": {
            "description": "MatchListPattern collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/MatchListPattern-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[description]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[numberCountry]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[numbervalue]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[regexp]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "matchList",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "matchList[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberCountry[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "numbervalue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numbervalue[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numbervalue[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numbervalue[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numbervalue[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numbervalue[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "numbervalue[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "regexp",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "regexp[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "regexp[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "regexp[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "regexp[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "regexp[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "regexp[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[numbervalue]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[regexp]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[type]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postMatchListPatternCollection",
        "summary": "Creates a MatchListPattern resource.",
        "responses": {
          "201": {
            "description": "MatchListPattern resource created",
            "schema": { "$ref": "#/definitions/MatchListPattern" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "matchListPattern",
            "in": "body",
            "description": "The new MatchListPattern resource",
            "schema": { "$ref": "#/definitions/MatchListPattern" }
          }
        ]
      }
    },
    "/match_list_patterns/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getMatchListPatternItem",
        "summary": "Retrieves a MatchListPattern resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "MatchListPattern resource response",
            "schema": { "$ref": "#/definitions/MatchListPattern-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putMatchListPatternItem",
        "summary": "Replaces the MatchListPattern resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "matchListPattern",
            "in": "body",
            "description": "The updated MatchListPattern resource",
            "schema": { "$ref": "#/definitions/MatchListPattern" }
          }
        ],
        "responses": {
          "200": {
            "description": "MatchListPattern resource updated",
            "schema": { "$ref": "#/definitions/MatchListPattern" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteMatchListPatternItem",
        "summary": "Removes the MatchListPattern resource.",
        "responses": {
          "204": { "description": "MatchListPattern resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/match_lists": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getMatchListCollection",
        "summary": "Retrieves the collection of MatchList resources.",
        "responses": {
          "200": {
            "description": "MatchList collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/MatchList-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "generic",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postMatchListCollection",
        "summary": "Creates a MatchList resource.",
        "responses": {
          "201": {
            "description": "MatchList resource created",
            "schema": { "$ref": "#/definitions/MatchList" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "matchList",
            "in": "body",
            "description": "The new MatchList resource",
            "schema": { "$ref": "#/definitions/MatchList" }
          }
        ]
      }
    },
    "/match_lists/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getMatchListItem",
        "summary": "Retrieves a MatchList resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "MatchList resource response",
            "schema": { "$ref": "#/definitions/MatchList-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putMatchListItem",
        "summary": "Replaces the MatchList resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "matchList",
            "in": "body",
            "description": "The updated MatchList resource",
            "schema": { "$ref": "#/definitions/MatchList" }
          }
        ],
        "responses": {
          "200": {
            "description": "MatchList resource updated",
            "schema": { "$ref": "#/definitions/MatchList" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteMatchListItem",
        "summary": "Removes the MatchList resource.",
        "responses": {
          "204": { "description": "MatchList resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/music_on_holds": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getMusicOnHoldCollection",
        "summary": "Retrieves the collection of MusicOnHold resources.",
        "responses": {
          "200": {
            "description": "MusicOnHold collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/MusicOnHold-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "exists[originalFile.baseName]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[originalFile.fileSize]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[originalFile.mimeType]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[status]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.baseName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.baseName[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.baseName[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.baseName[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.baseName[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.baseName[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.baseName[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "originalFile.fileSize",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "originalFile.fileSize[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "originalFile.fileSize[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.fileSize[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.fileSize[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.fileSize[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.fileSize[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.fileSize[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.mimeType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.mimeType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.mimeType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.mimeType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.mimeType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.mimeType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalFile.mimeType[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "status[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[originalFile.baseName]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[originalFile.fileSize]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[originalFile.mimeType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[status]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": [
          "multipart/form-data",
          "application/json",
          "application/ld+json"
        ],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postMusicOnHoldCollection",
        "summary": "Creates a MusicOnHold resource.",
        "responses": {
          "201": {
            "description": "MusicOnHold resource created",
            "schema": { "$ref": "#/definitions/MusicOnHold" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "musicOnHold",
            "in": "formData",
            "description": "The new MusicOnHold resource",
            "type": "string"
          },
          {
            "name": "OriginalFile",
            "in": "formData",
            "type": "file",
            "required": false
          }
        ]
      }
    },
    "/music_on_holds/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getMusicOnHoldItem",
        "summary": "Retrieves a MusicOnHold resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "MusicOnHold resource response",
            "schema": { "$ref": "#/definitions/MusicOnHold-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": [
          "multipart/form-data",
          "application/json",
          "application/ld+json"
        ],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putMusicOnHoldItem",
        "summary": "Replaces the MusicOnHold resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "musicOnHold",
            "in": "formData",
            "description": "The updated MusicOnHold resource",
            "type": "string"
          },
          {
            "name": "OriginalFile",
            "in": "formData",
            "type": "file",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "MusicOnHold resource updated",
            "schema": { "$ref": "#/definitions/MusicOnHold" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteMusicOnHoldItem",
        "summary": "Removes the MusicOnHold resource.",
        "responses": {
          "204": { "description": "MusicOnHold resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/music_on_holds/{id}/encodedfile": {
      "get": {
        "produces": ["application/octet-stream"],
        "responses": {
          "200": {
            "description": "#/definitions/MusicOnHold_EncodedFile",
            "schema": { "type": "file" }
          },
          "404": { "description": "Resource not found" }
        },
        "tags": ["Provider"],
        "operationId": "/musiconhold_encodedfileMusicOnHoldItem",
        "summary": "Retrieves a MusicOnHold resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ]
      }
    },
    "/music_on_holds/{id}/originalfile": {
      "get": {
        "produces": ["application/octet-stream"],
        "responses": {
          "200": {
            "description": "#/definitions/MusicOnHold_OriginalFile",
            "schema": { "type": "file" }
          },
          "404": { "description": "Resource not found" }
        },
        "tags": ["Provider"],
        "operationId": "/musiconhold_originalfileMusicOnHoldItem",
        "summary": "Retrieves a MusicOnHold resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ]
      }
    },
    "/my/active_calls": {
      "get": {
        "produces": ["application/json"],
        "tags": ["My"],
        "parameters": [],
        "operationId": "get_my_active_callsActiveCallsItem",
        "summary": "Retrieves a ActiveCalls resource.",
        "responses": {
          "200": {
            "description": "ActiveCalls resource response",
            "schema": { "$ref": "#/definitions/ActiveCalls" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/my/profile": {
      "get": {
        "produces": ["application/json"],
        "tags": ["My"],
        "parameters": [],
        "operationId": "get_my_profileProfileItem",
        "summary": "Retrieves a Profile resource.",
        "responses": {
          "200": {
            "description": "Profile resource response",
            "schema": { "$ref": "#/definitions/Profile" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/outgoing_ddi_rules": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getOutgoingDdiRuleCollection",
        "summary": "Retrieves the collection of OutgoingDdiRule resources.",
        "responses": {
          "200": {
            "description": "OutgoingDdiRule collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OutgoingDdiRule-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "defaultAction",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultAction[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultAction[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultAction[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultAction[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultAction[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[forcedDdi]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "forcedDdi",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forcedDdi[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forcedDdi[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[defaultAction]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postOutgoingDdiRuleCollection",
        "summary": "Creates a OutgoingDdiRule resource.",
        "responses": {
          "201": {
            "description": "OutgoingDdiRule resource created",
            "schema": { "$ref": "#/definitions/OutgoingDdiRule" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "outgoingDdiRule",
            "in": "body",
            "description": "The new OutgoingDdiRule resource",
            "schema": { "$ref": "#/definitions/OutgoingDdiRule" }
          }
        ]
      }
    },
    "/outgoing_ddi_rules/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getOutgoingDdiRuleItem",
        "summary": "Retrieves a OutgoingDdiRule resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "OutgoingDdiRule resource response",
            "schema": { "$ref": "#/definitions/OutgoingDdiRule-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putOutgoingDdiRuleItem",
        "summary": "Replaces the OutgoingDdiRule resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "outgoingDdiRule",
            "in": "body",
            "description": "The updated OutgoingDdiRule resource",
            "schema": { "$ref": "#/definitions/OutgoingDdiRule" }
          }
        ],
        "responses": {
          "200": {
            "description": "OutgoingDdiRule resource updated",
            "schema": { "$ref": "#/definitions/OutgoingDdiRule" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteOutgoingDdiRuleItem",
        "summary": "Removes the OutgoingDdiRule resource.",
        "responses": {
          "204": { "description": "OutgoingDdiRule resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/outgoing_ddi_rules_patterns": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getOutgoingDdiRulesPatternCollection",
        "summary": "Retrieves the collection of OutgoingDdiRulesPattern resources.",
        "responses": {
          "200": {
            "description": "OutgoingDdiRulesPattern collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OutgoingDdiRulesPattern-detailedCollection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "action[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "action[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "action[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "action[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "action[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[forcedDdi]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[matchList]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[prefix]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "forcedDdi",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forcedDdi.conditionalRoute",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "forcedDdi.conferenceRoom",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "forcedDdi.country",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "forcedDdi.ddi",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forcedDdi.ddie164",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forcedDdi.description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forcedDdi.displayName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forcedDdi.externalCallFilter",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "forcedDdi.fax",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "forcedDdi.friendValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forcedDdi.huntGroup",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "forcedDdi.ivr",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "forcedDdi.language",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "forcedDdi.queue",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "forcedDdi.recordCalls",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forcedDdi.residentialDevice",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "forcedDdi.retailAccount",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "forcedDdi.routeType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forcedDdi.user",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "forcedDdi[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forcedDdi[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "matchList",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "matchList.generic",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "matchList.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "matchList[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "matchList[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "outgoingDdiRule",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdiRule.defaultAction",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdiRule.forcedDdi",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "outgoingDdiRule.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdiRule[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "prefix[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "prefix[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "prefix[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "prefix[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "prefix[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "prefix[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "priority[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[action]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[prefix]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[priority]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[type]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postOutgoingDdiRulesPatternCollection",
        "summary": "Creates a OutgoingDdiRulesPattern resource.",
        "responses": {
          "201": {
            "description": "OutgoingDdiRulesPattern resource created",
            "schema": { "$ref": "#/definitions/OutgoingDdiRulesPattern" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "outgoingDdiRulesPattern",
            "in": "body",
            "description": "The new OutgoingDdiRulesPattern resource",
            "schema": { "$ref": "#/definitions/OutgoingDdiRulesPattern" }
          }
        ]
      }
    },
    "/outgoing_ddi_rules_patterns/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getOutgoingDdiRulesPatternItem",
        "summary": "Retrieves a OutgoingDdiRulesPattern resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "OutgoingDdiRulesPattern resource response",
            "schema": {
              "$ref": "#/definitions/OutgoingDdiRulesPattern-detailed"
            }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putOutgoingDdiRulesPatternItem",
        "summary": "Replaces the OutgoingDdiRulesPattern resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "outgoingDdiRulesPattern",
            "in": "body",
            "description": "The updated OutgoingDdiRulesPattern resource",
            "schema": { "$ref": "#/definitions/OutgoingDdiRulesPattern" }
          }
        ],
        "responses": {
          "200": {
            "description": "OutgoingDdiRulesPattern resource updated",
            "schema": { "$ref": "#/definitions/OutgoingDdiRulesPattern" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteOutgoingDdiRulesPatternItem",
        "summary": "Removes the OutgoingDdiRulesPattern resource.",
        "responses": {
          "204": { "description": "OutgoingDdiRulesPattern resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/pick_up_groups": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getPickUpGroupCollection",
        "summary": "Retrieves the collection of PickUpGroup resources.",
        "responses": {
          "200": {
            "description": "PickUpGroup collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PickUpGroup-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postPickUpGroupCollection",
        "summary": "Creates a PickUpGroup resource.",
        "responses": {
          "201": {
            "description": "PickUpGroup resource created",
            "schema": { "$ref": "#/definitions/PickUpGroup-withUsers" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "pickUpGroup",
            "in": "body",
            "description": "The new PickUpGroup resource",
            "schema": { "$ref": "#/definitions/PickUpGroup" }
          }
        ]
      }
    },
    "/pick_up_groups/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getPickUpGroupItem",
        "summary": "Retrieves a PickUpGroup resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "PickUpGroup resource response",
            "schema": { "$ref": "#/definitions/PickUpGroup-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putPickUpGroupItem",
        "summary": "Replaces the PickUpGroup resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "pickUpGroup",
            "in": "body",
            "description": "The updated PickUpGroup resource",
            "schema": { "$ref": "#/definitions/PickUpGroup" }
          }
        ],
        "responses": {
          "200": {
            "description": "PickUpGroup resource updated",
            "schema": { "$ref": "#/definitions/PickUpGroup-withUsers" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deletePickUpGroupItem",
        "summary": "Removes the PickUpGroup resource.",
        "responses": {
          "204": { "description": "PickUpGroup resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/pick_up_rel_users": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getPickUpRelUserCollection",
        "summary": "Retrieves the collection of PickUpRelUser resources.",
        "responses": {
          "200": {
            "description": "PickUpRelUser collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PickUpRelUser-detailedCollection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pickUpGroup",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pickUpGroup.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pickUpGroup[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.active",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "user.bossAssistant",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.bossAssistantWhiteList",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.callAcl",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.contact",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.doNotDisturb",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "user.email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.extension",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.externalIpCalls",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.gsQRCode",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "user.isBoss",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "user.language",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.lastname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.location",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.maxCalls",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.multiContact",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "user.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.outgoingDdi",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.outgoingDdiRule",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.pass",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.rejectCallMethod",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.terminal",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.timezone",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.transformationRuleSet",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.voicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postPickUpRelUserCollection",
        "summary": "Creates a PickUpRelUser resource.",
        "responses": {
          "201": {
            "description": "PickUpRelUser resource created",
            "schema": { "$ref": "#/definitions/PickUpRelUser" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "pickUpRelUser",
            "in": "body",
            "description": "The new PickUpRelUser resource",
            "schema": { "$ref": "#/definitions/PickUpRelUser" }
          }
        ]
      }
    },
    "/pick_up_rel_users/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getPickUpRelUserItem",
        "summary": "Retrieves a PickUpRelUser resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "PickUpRelUser resource response",
            "schema": { "$ref": "#/definitions/PickUpRelUser-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putPickUpRelUserItem",
        "summary": "Replaces the PickUpRelUser resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "pickUpRelUser",
            "in": "body",
            "description": "The updated PickUpRelUser resource",
            "schema": { "$ref": "#/definitions/PickUpRelUser" }
          }
        ],
        "responses": {
          "200": {
            "description": "PickUpRelUser resource updated",
            "schema": { "$ref": "#/definitions/PickUpRelUser" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deletePickUpRelUserItem",
        "summary": "Removes the PickUpRelUser resource.",
        "responses": {
          "204": { "description": "PickUpRelUser resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/queue_members": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getQueueMemberCollection",
        "summary": "Retrieves the collection of QueueMember resources.",
        "responses": {
          "200": {
            "description": "QueueMember collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueueMember-detailedCollection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "exists[penalty]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "penalty",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "penalty[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "penalty[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "penalty[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "penalty[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "penalty[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "penalty[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "penalty[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queue.announceFrequency",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "queue.announcePosition",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queue.displayName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queue.fullExtension",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "queue.fullLocution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "queue.fullNumberCountry",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "queue.fullNumberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queue.fullTargetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queue.fullVoicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "queue.maxWaitTime",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "queue.maxlen",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "queue.memberCallRest",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "queue.memberCallTimeout",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "queue.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queue.periodicAnnounceFrequency",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "queue.periodicAnnounceLocution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "queue.preventMissedCalls",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "queue.strategy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queue.timeoutExtension",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "queue.timeoutLocution",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "queue.timeoutNumberCountry",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "queue.timeoutNumberValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queue.timeoutTargetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queue.timeoutVoicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "queue.weight",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "queue[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.active",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "user.bossAssistant",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.bossAssistantWhiteList",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.callAcl",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.contact",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.doNotDisturb",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "user.email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.extension",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.externalIpCalls",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.gsQRCode",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "user.isBoss",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "user.language",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.lastname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.location",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.maxCalls",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.multiContact",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "user.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.outgoingDdi",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.outgoingDdiRule",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.pass",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.rejectCallMethod",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.terminal",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.timezone",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.transformationRuleSet",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user.voicemail",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[penalty]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postQueueMemberCollection",
        "summary": "Creates a QueueMember resource.",
        "responses": {
          "201": {
            "description": "QueueMember resource created",
            "schema": { "$ref": "#/definitions/QueueMember" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "queueMember",
            "in": "body",
            "description": "The new QueueMember resource",
            "schema": { "$ref": "#/definitions/QueueMember" }
          }
        ]
      }
    },
    "/queue_members/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getQueueMemberItem",
        "summary": "Retrieves a QueueMember resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "QueueMember resource response",
            "schema": { "$ref": "#/definitions/QueueMember-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putQueueMemberItem",
        "summary": "Replaces the QueueMember resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "queueMember",
            "in": "body",
            "description": "The updated QueueMember resource",
            "schema": { "$ref": "#/definitions/QueueMember" }
          }
        ],
        "responses": {
          "200": {
            "description": "QueueMember resource updated",
            "schema": { "$ref": "#/definitions/QueueMember" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteQueueMemberItem",
        "summary": "Removes the QueueMember resource.",
        "responses": {
          "204": { "description": "QueueMember resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/queues": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getQueueCollection",
        "summary": "Retrieves the collection of Queue resources.",
        "responses": {
          "200": {
            "description": "Queue collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Queue-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "exists[maxWaitTime]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[maxlen]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[memberCallRest]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[memberCallTimeout]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[name]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[strategy]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[weight]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fullExtension",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fullExtension[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fullExtension[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fullLocution",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fullLocution[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fullLocution[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fullNumberCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fullNumberCountry[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fullNumberCountry[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fullVoicemail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fullVoicemail[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fullVoicemail[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxWaitTime",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "maxWaitTime[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "maxWaitTime[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxWaitTime[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxWaitTime[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxWaitTime[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxWaitTime[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxWaitTime[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxlen",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "maxlen[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "maxlen[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxlen[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxlen[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxlen[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxlen[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxlen[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "memberCallRest",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "memberCallRest[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "memberCallRest[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "memberCallRest[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "memberCallRest[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "memberCallRest[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "memberCallRest[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "memberCallRest[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "memberCallTimeout",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "memberCallTimeout[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "memberCallTimeout[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "memberCallTimeout[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "memberCallTimeout[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "memberCallTimeout[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "memberCallTimeout[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "memberCallTimeout[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "periodicAnnounceLocution",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "periodicAnnounceLocution[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "periodicAnnounceLocution[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "strategy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "strategy[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "strategy[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "strategy[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "strategy[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "strategy[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "strategy[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeoutExtension",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeoutExtension[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeoutExtension[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "timeoutLocution",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeoutLocution[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeoutLocution[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "timeoutNumberCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeoutNumberCountry[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeoutNumberCountry[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "timeoutVoicemail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeoutVoicemail[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeoutVoicemail[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "weight",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "weight[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "weight[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "weight[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "weight[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "weight[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "weight[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "weight[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[maxWaitTime]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[maxlen]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[memberCallRest]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[memberCallTimeout]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[strategy]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[weight]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postQueueCollection",
        "summary": "Creates a Queue resource.",
        "responses": {
          "201": {
            "description": "Queue resource created",
            "schema": { "$ref": "#/definitions/Queue" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "queue",
            "in": "body",
            "description": "The new Queue resource",
            "schema": { "$ref": "#/definitions/Queue" }
          }
        ]
      }
    },
    "/queues/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getQueueItem",
        "summary": "Retrieves a Queue resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Queue resource response",
            "schema": { "$ref": "#/definitions/Queue-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putQueueItem",
        "summary": "Replaces the Queue resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "queue",
            "in": "body",
            "description": "The updated Queue resource",
            "schema": { "$ref": "#/definitions/Queue" }
          }
        ],
        "responses": {
          "200": {
            "description": "Queue resource updated",
            "schema": { "$ref": "#/definitions/Queue" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteQueueItem",
        "summary": "Removes the Queue resource.",
        "responses": {
          "204": { "description": "Queue resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/rating_plan_groups": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getRatingPlanGroupCollection",
        "summary": "Retrieves the collection of RatingPlanGroup resources.",
        "responses": {
          "200": {
            "description": "RatingPlanGroup collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/RatingPlanGroup-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.ca]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.en]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.es]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.it]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/rating_plan_groups/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getRatingPlanGroupItem",
        "summary": "Retrieves a RatingPlanGroup resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "RatingPlanGroup resource response",
            "schema": { "$ref": "#/definitions/RatingPlanGroup-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/rating_plan_groups/{id}/prices": {
      "get": {
        "produces": ["text/csv"],
        "tags": ["Provider"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "Rating plan group Id"
          }
        ],
        "operationId": "get_my_rating_plan_pricesRatingPlanPricesCollection",
        "summary": "Retrieves the collection of RatingPlanPrices resources.",
        "responses": {
          "200": {
            "description": "RatingPlanPrices collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/RatingPlanPrices" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        }
      }
    },
    "/rating_profiles": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getRatingProfileCollection",
        "summary": "Retrieves the collection of RatingProfile resources.",
        "responses": {
          "200": {
            "description": "RatingProfile collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/RatingProfile-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "activationTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "activationTime[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "activationTime[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "activationTime[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "activationTime[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "activationTime[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "activationTime[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[routingTag]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ratingPlanGroup",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ratingPlanGroup[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routingTag",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routingTag[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routingTag[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[activationTime]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ]
      }
    },
    "/rating_profiles/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getRatingProfileItem",
        "summary": "Retrieves a RatingProfile resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ],
        "responses": {
          "200": {
            "description": "RatingProfile resource response",
            "schema": { "$ref": "#/definitions/RatingProfile-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/recordings": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getRecordingCollection",
        "summary": "Retrieves the collection of Recording resources.",
        "responses": {
          "200": {
            "description": "Recording collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Recording-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "calldate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calldate[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calldate[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calldate[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calldate[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calldate[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calldate[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "callee[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "caller[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callid[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callid[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callid[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callid[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "callid[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callid[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "duration[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[callee]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[caller]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[callid]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[recorder]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "recorder",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "recorder[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "recorder[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "recorder[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "recorder[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "recorder[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "recorder[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[calldate]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[callee]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[caller]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[callid]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[duration]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[recorder]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[type]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ]
      }
    },
    "/recordings/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getRecordingItem",
        "summary": "Retrieves a Recording resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ],
        "responses": {
          "200": {
            "description": "Recording resource response",
            "schema": { "$ref": "#/definitions/Recording-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteRecordingItem",
        "summary": "Removes the Recording resource.",
        "responses": {
          "204": { "description": "Recording resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/recordings/{id}/recordedfile": {
      "get": {
        "produces": ["application/octet-stream"],
        "responses": {
          "200": {
            "description": "#/definitions/Recording_RecordedFile",
            "schema": { "type": "file" }
          },
          "404": { "description": "Resource not found" }
        },
        "tags": ["Provider"],
        "operationId": "/recording_recordedfileRecordingItem",
        "summary": "Retrieves a Recording resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ]
      }
    },
    "/residential_devices": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getResidentialDeviceCollection",
        "summary": "Retrieves the collection of ResidentialDevice resources.",
        "responses": {
          "200": {
            "description": "ResidentialDevice collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ResidentialDevice-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "transformationRuleSet",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transformationRuleSet[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transformationRuleSet[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[directConnectivity]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/residential_devices/status": {
      "get": {
        "tags": ["Provider"],
        "operationId": "get_status_collectionResidentialDeviceCollection",
        "produces": [
          "application/json",
          "application/ld+json",
          "text/csv",
          "application/xml",
          "text/xml",
          "text/html",
          "application/octet-stream"
        ],
        "summary": "Retrieves the collection of ResidentialDevice resources.",
        "responses": {
          "200": {
            "description": "ResidentialDevice collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ResidentialDevice-status" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "directConnectivity",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "transformationRuleSet",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transformationRuleSet[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transformationRuleSet[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[directConnectivity]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/residential_devices/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getResidentialDeviceItem",
        "summary": "Retrieves a ResidentialDevice resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "ResidentialDevice resource response",
            "schema": { "$ref": "#/definitions/ResidentialDevice-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putResidentialDeviceItem",
        "summary": "Replaces the ResidentialDevice resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "residentialDevice",
            "in": "body",
            "description": "The updated ResidentialDevice resource",
            "schema": { "$ref": "#/definitions/ResidentialDevice" }
          }
        ],
        "responses": {
          "200": {
            "description": "ResidentialDevice resource updated",
            "schema": { "$ref": "#/definitions/ResidentialDevice" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      }
    },
    "/residential_devices/{id}/status": {
      "get": {
        "tags": ["Provider"],
        "operationId": "get_status_itemResidentialDeviceItem",
        "produces": [
          "application/json",
          "application/ld+json",
          "text/csv",
          "application/xml",
          "text/xml",
          "text/html",
          "application/octet-stream"
        ],
        "summary": "Retrieves a ResidentialDevice resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "ResidentialDevice resource response",
            "schema": { "$ref": "#/definitions/ResidentialDevice-status" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/retail_accounts": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getRetailAccountCollection",
        "summary": "Retrieves the collection of RetailAccount resources.",
        "responses": {
          "200": {
            "description": "RetailAccount collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/RetailAccount-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "transformationRuleSet",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transformationRuleSet[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transformationRuleSet[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[directConnectivity]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/retail_accounts/status": {
      "get": {
        "tags": ["Provider"],
        "operationId": "get_status_collectionRetailAccountCollection",
        "produces": [
          "application/json",
          "application/ld+json",
          "text/csv",
          "application/xml",
          "text/xml",
          "text/html",
          "application/octet-stream"
        ],
        "summary": "Retrieves the collection of RetailAccount resources.",
        "responses": {
          "200": {
            "description": "RetailAccount collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/RetailAccount-status" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "directConnectivity[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "transformationRuleSet",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transformationRuleSet[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transformationRuleSet[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[directConnectivity]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/retail_accounts/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getRetailAccountItem",
        "summary": "Retrieves a RetailAccount resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "RetailAccount resource response",
            "schema": { "$ref": "#/definitions/RetailAccount-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putRetailAccountItem",
        "summary": "Replaces the RetailAccount resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "retailAccount",
            "in": "body",
            "description": "The updated RetailAccount resource",
            "schema": { "$ref": "#/definitions/RetailAccount" }
          }
        ],
        "responses": {
          "200": {
            "description": "RetailAccount resource updated",
            "schema": { "$ref": "#/definitions/RetailAccount" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      }
    },
    "/retail_accounts/{id}/status": {
      "get": {
        "tags": ["Provider"],
        "operationId": "get_status_itemRetailAccountItem",
        "produces": [
          "application/json",
          "application/ld+json",
          "text/csv",
          "application/xml",
          "text/xml",
          "text/html",
          "application/octet-stream"
        ],
        "summary": "Retrieves a RetailAccount resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "RetailAccount resource response",
            "schema": { "$ref": "#/definitions/RetailAccount-status" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/route_locks": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getRouteLockCollection",
        "summary": "Retrieves the collection of RouteLock resources.",
        "responses": {
          "200": {
            "description": "RouteLock collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/RouteLock-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "closeExtension",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "open",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "openExtension",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "toggleExtension",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[open]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postRouteLockCollection",
        "summary": "Creates a RouteLock resource.",
        "responses": {
          "201": {
            "description": "RouteLock resource created",
            "schema": { "$ref": "#/definitions/RouteLock" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "routeLock",
            "in": "body",
            "description": "The new RouteLock resource",
            "schema": { "$ref": "#/definitions/RouteLock" }
          }
        ]
      }
    },
    "/route_locks/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getRouteLockItem",
        "summary": "Retrieves a RouteLock resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "RouteLock resource response",
            "schema": { "$ref": "#/definitions/RouteLock-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putRouteLockItem",
        "summary": "Replaces the RouteLock resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "routeLock",
            "in": "body",
            "description": "The updated RouteLock resource",
            "schema": { "$ref": "#/definitions/RouteLock" }
          }
        ],
        "responses": {
          "200": {
            "description": "RouteLock resource updated",
            "schema": { "$ref": "#/definitions/RouteLock" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteRouteLockItem",
        "summary": "Removes the RouteLock resource.",
        "responses": {
          "204": { "description": "RouteLock resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/routing_tags": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getRoutingTagCollection",
        "summary": "Retrieves the collection of RoutingTag resources.",
        "responses": {
          "200": {
            "description": "RoutingTag collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/RoutingTag-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          { "name": "tag", "in": "query", "required": false, "type": "string" },
          {
            "name": "tag[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[tag]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/routing_tags/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getRoutingTagItem",
        "summary": "Retrieves a RoutingTag resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "RoutingTag resource response",
            "schema": { "$ref": "#/definitions/RoutingTag-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/schedules": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getScheduleCollection",
        "summary": "Retrieves the collection of Schedule resources.",
        "responses": {
          "200": {
            "description": "Schedule collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Schedule-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "exists[friday]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[monday]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[saturday]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[sunday]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[thursday]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[tuesday]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[wednesday]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "friday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "friday[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "monday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "monday[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "saturday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "saturday[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sunday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sunday[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "thursday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "thursday[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "timeIn",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeIn[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeIn[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeIn[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeIn[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeIn[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeIn[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeout",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeout[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeout[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeout[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeout[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeout[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeout[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tuesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tuesday[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "wednesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "wednesday[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[friday]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[monday]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[saturday]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[sunday]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[thursday]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[timeIn]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[timeout]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[tuesday]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[wednesday]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postScheduleCollection",
        "summary": "Creates a Schedule resource.",
        "responses": {
          "201": {
            "description": "Schedule resource created",
            "schema": { "$ref": "#/definitions/Schedule" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "schedule",
            "in": "body",
            "description": "The new Schedule resource",
            "schema": { "$ref": "#/definitions/Schedule" }
          }
        ]
      }
    },
    "/schedules/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getScheduleItem",
        "summary": "Retrieves a Schedule resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Schedule resource response",
            "schema": { "$ref": "#/definitions/Schedule-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putScheduleItem",
        "summary": "Replaces the Schedule resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "schedule",
            "in": "body",
            "description": "The updated Schedule resource",
            "schema": { "$ref": "#/definitions/Schedule" }
          }
        ],
        "responses": {
          "200": {
            "description": "Schedule resource updated",
            "schema": { "$ref": "#/definitions/Schedule" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteScheduleItem",
        "summary": "Removes the Schedule resource.",
        "responses": {
          "204": { "description": "Schedule resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/services": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getServiceCollection",
        "summary": "Retrieves the collection of Service resources.",
        "responses": {
          "200": {
            "description": "Service collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Service-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "defaultCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultCode[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultCode[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultCode[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultCode[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultCode[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.ca",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.ca[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.ca[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.ca[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.ca[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.ca[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.en",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.en[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.en[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.en[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.en[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.en[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.es",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.es[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.es[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.es[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.es[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.es[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.it",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.it[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.it[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.it[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.it[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.it[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extraArgs",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[defaultCode]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description.ca]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description.en]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description.es]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description.it]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[extraArgs]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[iden]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.ca]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.en]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.es]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.it]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/services/unassigned": {
      "get": {
        "produces": ["application/json"],
        "tags": ["Provider"],
        "parameters": [
          {
            "name": "_includeId",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Ensure certain service id is included"
          }
        ],
        "operationId": "get_services_unassignedServiceCollection",
        "summary": "Retrieves the collection of Service resources.",
        "responses": {
          "200": {
            "description": "Service collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Service" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        }
      }
    },
    "/services/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getServiceItem",
        "summary": "Retrieves a Service resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Service resource response",
            "schema": { "$ref": "#/definitions/Service-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/terminal_models": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getTerminalModelCollection",
        "summary": "Retrieves the collection of TerminalModel resources.",
        "responses": {
          "200": {
            "description": "TerminalModel collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/TerminalModel-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "genericTemplate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "specificTemplate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[iden]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/terminal_models/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getTerminalModelItem",
        "summary": "Retrieves a TerminalModel resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "TerminalModel resource response",
            "schema": { "$ref": "#/definitions/TerminalModel-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/terminals": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getTerminalCollection",
        "summary": "Retrieves the collection of Terminal resources.",
        "responses": {
          "200": {
            "description": "Terminal collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Terminal-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "domain",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "domainName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[lastProvisionDate]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[mac]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[terminalModel]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastProvisionDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastProvisionDate[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastProvisionDate[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastProvisionDate[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "lastProvisionDate[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastProvisionDate[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastProvisionDate[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastProvisionDate[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          { "name": "mac", "in": "query", "required": false, "type": "string" },
          {
            "name": "mac[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mac[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mac[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mac[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mac[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mac[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "terminalModel",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "terminalModel[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "terminalModel[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[lastProvisionDate]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[mac]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postTerminalCollection",
        "summary": "Creates a Terminal resource.",
        "responses": {
          "201": {
            "description": "Terminal resource created",
            "schema": { "$ref": "#/definitions/Terminal" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "terminal",
            "in": "body",
            "description": "The new Terminal resource",
            "schema": { "$ref": "#/definitions/Terminal" }
          },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ]
      }
    },
    "/terminals/status": {
      "get": {
        "tags": ["Provider"],
        "operationId": "get_status_collectionTerminalCollection",
        "produces": [
          "application/json",
          "application/ld+json",
          "text/csv",
          "application/xml",
          "text/xml",
          "text/html",
          "application/octet-stream"
        ],
        "summary": "Retrieves the collection of Terminal resources.",
        "responses": {
          "200": {
            "description": "Terminal collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Terminal-status" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "domainName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "terminalModel",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "terminalModel[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "terminalModel[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/terminals/unassigned": {
      "get": {
        "produces": ["application/json"],
        "tags": ["Provider"],
        "parameters": [
          {
            "name": "_includeId",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Ensure certain terminal id is included"
          },
          {
            "name": "_properties",
            "in": "query",
            "type": "array",
            "required": false,
            "items": { "type": "string" },
            "collectionFormat": "multi",
            "description": "Allows you to reduce the response to contain only the properties you need"
          },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ],
        "operationId": "get_terminals_unassignedTerminalCollection",
        "summary": "Retrieves the collection of Terminal resources.",
        "responses": {
          "200": {
            "description": "Terminal collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Terminal" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        }
      }
    },
    "/terminals/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getTerminalItem",
        "summary": "Retrieves a Terminal resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ],
        "responses": {
          "200": {
            "description": "Terminal resource response",
            "schema": { "$ref": "#/definitions/Terminal-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putTerminalItem",
        "summary": "Replaces the Terminal resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "terminal",
            "in": "body",
            "description": "The updated Terminal resource",
            "schema": { "$ref": "#/definitions/Terminal" }
          },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ],
        "responses": {
          "200": {
            "description": "Terminal resource updated",
            "schema": { "$ref": "#/definitions/Terminal" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteTerminalItem",
        "summary": "Removes the Terminal resource.",
        "responses": {
          "204": { "description": "Terminal resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/terminals/{id}/status": {
      "get": {
        "tags": ["Provider"],
        "operationId": "get_status_itemTerminalItem",
        "produces": [
          "application/json",
          "application/ld+json",
          "text/csv",
          "application/xml",
          "text/xml",
          "text/html",
          "application/octet-stream"
        ],
        "summary": "Retrieves a Terminal resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Terminal resource response",
            "schema": { "$ref": "#/definitions/Terminal-status" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/timezones": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getTimezoneCollection",
        "summary": "Retrieves the collection of Timezone resources.",
        "responses": {
          "200": {
            "description": "Timezone collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Timezone-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "country[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "country[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          { "name": "tz", "in": "query", "required": false, "type": "string" },
          {
            "name": "tz[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tz[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tz[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tz[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tz[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[tz]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "name": "_pagination",
            "in": "query",
            "required": false,
            "description": "Enable or disable pagination",
            "type": "boolean"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/timezones/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getTimezoneItem",
        "summary": "Retrieves a Timezone resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Timezone resource response",
            "schema": { "$ref": "#/definitions/Timezone-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/token/exchange": {
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": ["application/json"],
        "tags": ["Auth"],
        "parameters": [
          {
            "name": "token",
            "in": "formData",
            "type": "string",
            "required": true,
            "description": "Brand admin token"
          },
          {
            "name": "username",
            "in": "formData",
            "type": "string",
            "required": false,
            "description": "Target client admin user name"
          },
          {
            "name": "clientId",
            "in": "formData",
            "type": "integer",
            "required": false,
            "description": "Target client ID"
          }
        ],
        "operationId": "post_auth_token_exchangeTokenCollection",
        "summary": "Creates a Token resource.",
        "responses": {
          "201": {
            "description": "Token resource created",
            "schema": { "$ref": "#/definitions/Token" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      }
    },
    "/transformation_rule_sets": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getTransformationRuleSetCollection",
        "summary": "Retrieves the collection of TransformationRuleSet resources.",
        "responses": {
          "200": {
            "description": "TransformationRuleSet collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransformationRuleSet-collection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "areaCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "areaCode[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "areaCode[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "areaCode[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "areaCode[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "areaCode[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "areaCode[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "country[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "country[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "description[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[areaCode]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[description]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[internationalCode]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[nationalLen]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[trunkPrefix]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "internationalCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "internationalCode[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "internationalCode[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "internationalCode[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "internationalCode[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "internationalCode[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "internationalCode[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nationalLen",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "nationalLen[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "nationalLen[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nationalLen[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nationalLen[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nationalLen[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nationalLen[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nationalLen[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "trunkPrefix",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "trunkPrefix[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "trunkPrefix[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "trunkPrefix[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "trunkPrefix[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "trunkPrefix[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "trunkPrefix[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[areaCode]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[internationalCode]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.ca]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.en]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.es]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.it]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[nationalLen]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[trunkPrefix]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/transformation_rule_sets/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getTransformationRuleSetItem",
        "summary": "Retrieves a TransformationRuleSet resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "TransformationRuleSet resource response",
            "schema": { "$ref": "#/definitions/TransformationRuleSet-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/users": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getUserCollection",
        "summary": "Retrieves the collection of User resources.",
        "responses": {
          "200": {
            "description": "User collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/User-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "bossAssistant",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bossAssistantWhiteList",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bossAssistantWhiteList[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bossAssistantWhiteList[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "bossAssistant[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bossAssistant[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "callAcl",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callAcl[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callAcl[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[extension]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[outgoingDdi]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[terminal]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "extension",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extension[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extension[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "lastname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdiRule",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdiRule[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdiRule[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "outgoingDdi[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "outgoingDdi[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "terminal",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "terminal[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "terminal[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "timezone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timezone[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timezone[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "transformationRuleSet",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transformationRuleSet[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transformationRuleSet[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[lastname]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postUserCollection",
        "summary": "Creates a User resource.",
        "responses": {
          "201": {
            "description": "User resource created",
            "schema": { "$ref": "#/definitions/User" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "The new User resource",
            "schema": { "$ref": "#/definitions/User" }
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getUserItem",
        "summary": "Retrieves a User resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "User resource response",
            "schema": { "$ref": "#/definitions/User-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putUserItem",
        "summary": "Replaces the User resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "user",
            "in": "body",
            "description": "The updated User resource",
            "schema": { "$ref": "#/definitions/User" }
          }
        ],
        "responses": {
          "200": {
            "description": "User resource updated",
            "schema": { "$ref": "#/definitions/User" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteUserItem",
        "summary": "Removes the User resource.",
        "responses": {
          "204": { "description": "User resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/users_cdrs": {
      "get": {
        "produces": ["application/json", "application/ld+json", "text/csv"],
        "tags": ["Kam"],
        "operationId": "getUsersCdrCollection",
        "summary": "Retrieves the collection of UsersCdr resources.",
        "responses": {
          "200": {
            "description": "UsersCdr collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/UsersCdr-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "callee",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "callee[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "direction[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "duration[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[callee]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[caller]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[direction]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[friend]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[user]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "friend",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friend[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "friend[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[callee]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[caller]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[direction]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[duration]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[endTime]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[startTime]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "name": "_pagination",
            "in": "query",
            "required": false,
            "description": "Enable or disable pagination",
            "type": "boolean"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ]
      }
    },
    "/users_cdrs/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Kam"],
        "operationId": "getUsersCdrItem",
        "summary": "Retrieves a UsersCdr resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ],
        "responses": {
          "200": {
            "description": "UsersCdr resource response",
            "schema": { "$ref": "#/definitions/UsersCdr-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/voicemail_messages": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getVoicemailMessageCollection",
        "summary": "Retrieves the collection of VoicemailMessage resources.",
        "responses": {
          "200": {
            "description": "VoicemailMessage collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/VoicemailMessage-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "calldate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calldate[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calldate[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calldate[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calldate[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calldate[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "calldate[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "caller[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "duration[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "duration[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[caller]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[duration]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "folder",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "folder[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "folder[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "folder[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "folder[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "folder[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemail[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemail[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[calldate]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[caller]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[duration]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[folder]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ]
      }
    },
    "/voicemail_messages/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getVoicemailMessageItem",
        "summary": "Retrieves a VoicemailMessage resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ],
        "responses": {
          "200": {
            "description": "VoicemailMessage resource response",
            "schema": { "$ref": "#/definitions/VoicemailMessage-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteVoicemailMessageItem",
        "summary": "Removes the VoicemailMessage resource.",
        "responses": {
          "204": { "description": "VoicemailMessage resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/voicemail_messages/{id}/metadatafile": {
      "get": {
        "produces": ["application/octet-stream"],
        "responses": {
          "200": {
            "description": "#/definitions/VoicemailMessage_MetadataFile",
            "schema": { "type": "file" }
          },
          "404": { "description": "Resource not found" }
        },
        "tags": ["Provider"],
        "operationId": "/voicemailmessage_metadatafileVoicemailMessageItem",
        "summary": "Retrieves a VoicemailMessage resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ]
      }
    },
    "/voicemail_messages/{id}/recordingfile": {
      "get": {
        "produces": ["application/octet-stream"],
        "responses": {
          "200": {
            "description": "#/definitions/VoicemailMessage_RecordingFile",
            "schema": { "type": "file" }
          },
          "404": { "description": "Resource not found" }
        },
        "tags": ["Provider"],
        "operationId": "/voicemailmessage_recordingfileVoicemailMessageItem",
        "summary": "Retrieves a VoicemailMessage resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ]
      }
    },
    "/voicemails": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getVoicemailCollection",
        "summary": "Retrieves the collection of Voicemail resources.",
        "responses": {
          "200": {
            "description": "Voicemail collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Voicemail-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "company",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "company[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "email[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "enabled",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[email]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "locution",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "locution[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "locution[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[email]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[enabled]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postVoicemailCollection",
        "summary": "Creates a Voicemail resource.",
        "responses": {
          "201": {
            "description": "Voicemail resource created",
            "schema": { "$ref": "#/definitions/Voicemail" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "voicemail",
            "in": "body",
            "description": "The new Voicemail resource",
            "schema": { "$ref": "#/definitions/Voicemail" }
          }
        ]
      }
    },
    "/voicemails/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getVoicemailItem",
        "summary": "Retrieves a Voicemail resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Voicemail resource response",
            "schema": { "$ref": "#/definitions/Voicemail-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putVoicemailItem",
        "summary": "Replaces the Voicemail resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "voicemail",
            "in": "body",
            "description": "The updated Voicemail resource",
            "schema": { "$ref": "#/definitions/Voicemail" }
          }
        ],
        "responses": {
          "200": {
            "description": "Voicemail resource updated",
            "schema": { "$ref": "#/definitions/Voicemail" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteVoicemailItem",
        "summary": "Removes the Voicemail resource.",
        "responses": {
          "204": { "description": "Voicemail resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    }
  },
  "security": [{ "bearer": [] }],
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "in": "header",
      "description": "Value for the Authorization header",
      "name": "Authorization"
    }
  },
  "definitions": {
    "ActiveCalls": {
      "type": "object",
      "properties": {
        "inbound": { "description": "", "type": "integer" },
        "outbound": { "description": "", "type": "integer" },
        "total": { "description": "", "type": "integer" }
      }
    },
    "BillableCall-collection": {
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "direction": {
          "default": "outbound",
          "enum": ["inbound", "outbound"],
          "description": "",
          "example": "outbound",
          "type": "string"
        },
        "duration": {
          "default": 0,
          "format": "float",
          "description": "",
          "example": "0",
          "type": "number"
        },
        "caller": { "maxLength": 128, "description": "", "type": "string" },
        "callee": { "maxLength": 128, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "price": { "format": "float", "description": "", "type": "number" },
        "callid": { "maxLength": 255, "description": "", "type": "string" },
        "endpointType": {
          "enum": [
            "RetailAccount",
            "ResidentialDevice",
            "User",
            "Friend",
            "Fax"
          ],
          "maxLength": 55,
          "description": "",
          "type": "string"
        },
        "endpointId": { "minimum": 0, "description": "", "type": "integer" },
        "endpointName": {
          "maxLength": 65,
          "description": "",
          "type": "string"
        },
        "ddi": { "description": "", "type": "integer" }
      },
      "required": ["direction", "duration"]
    },
    "BillableCall-detailed": {
      "type": "object",
      "properties": {
        "callid": { "maxLength": 255, "description": "", "type": "string" },
        "startTime": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "duration": {
          "default": 0,
          "format": "float",
          "description": "",
          "example": "0",
          "type": "number"
        },
        "caller": { "maxLength": 128, "description": "", "type": "string" },
        "callee": { "maxLength": 128, "description": "", "type": "string" },
        "price": { "format": "float", "description": "", "type": "number" },
        "destinationName": {
          "maxLength": 100,
          "description": "",
          "type": "string"
        },
        "ratingPlanName": {
          "maxLength": 55,
          "description": "",
          "type": "string"
        },
        "endpointType": {
          "enum": [
            "RetailAccount",
            "ResidentialDevice",
            "User",
            "Friend",
            "Fax"
          ],
          "maxLength": 55,
          "description": "",
          "type": "string"
        },
        "endpointId": { "minimum": 0, "description": "", "type": "integer" },
        "endpointName": {
          "maxLength": 65,
          "description": "",
          "type": "string"
        },
        "direction": {
          "default": "outbound",
          "enum": ["inbound", "outbound"],
          "description": "",
          "example": "outbound",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "ddi": { "$ref": "#/definitions/Ddi" }
      },
      "required": ["duration", "direction"]
    },
    "Calendar": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "Calendar-collection": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 50, "description": "", "type": "string" }
      }
    },
    "Calendar-detailed": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "CalendarPeriod": {
      "type": "object",
      "required": ["startDate", "endDate", "calendar"],
      "properties": {
        "startDate": { "format": "date", "description": "", "type": "string" },
        "endDate": { "format": "date", "description": "", "type": "string" },
        "routeType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "calendar": { "description": "", "type": "integer" },
        "locution": { "description": "", "type": "integer" },
        "extension": { "description": "", "type": "integer" },
        "voicemail": { "description": "", "type": "integer" },
        "numberCountry": { "description": "", "type": "integer" },
        "scheduleIds": {
          "description": "Schedule ids",
          "type": "array",
          "items": { "type": "integer" }
        }
      }
    },
    "CalendarPeriod-collection": {
      "type": "object",
      "required": ["calendar", "startDate", "endDate"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "calendar": { "description": "", "type": "integer" },
        "startDate": { "format": "date", "description": "", "type": "string" },
        "endDate": { "format": "date", "description": "", "type": "string" },
        "routeType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "locution": { "description": "", "type": "integer" },
        "numberCountry": { "description": "", "type": "integer" },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "extension": { "description": "", "type": "integer" },
        "voicemail": { "description": "", "type": "integer" },
        "scheduleIds": {
          "description": "Schedule ids",
          "type": "array",
          "items": { "type": "integer" }
        }
      }
    },
    "CalendarPeriod-detailed": {
      "type": "object",
      "required": ["startDate", "endDate", "calendar"],
      "properties": {
        "startDate": { "format": "date", "description": "", "type": "string" },
        "endDate": { "format": "date", "description": "", "type": "string" },
        "routeType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "calendar": { "$ref": "#/definitions/Calendar" },
        "locution": { "$ref": "#/definitions/Locution" },
        "extension": { "$ref": "#/definitions/Extension" },
        "voicemail": { "$ref": "#/definitions/Voicemail" },
        "numberCountry": { "$ref": "#/definitions/Country" },
        "scheduleIds": {
          "description": "Schedule ids",
          "type": "array",
          "items": { "type": "integer" }
        }
      }
    },
    "CalendarPeriodsRelSchedule": {
      "type": "object",
      "required": ["calendarPeriod", "schedule"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "calendarPeriod": { "description": "", "type": "integer" },
        "schedule": { "description": "", "type": "integer" }
      }
    },
    "CalendarPeriodsRelSchedule-detailed": {
      "type": "object",
      "required": ["calendarPeriod", "schedule"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "calendarPeriod": { "$ref": "#/definitions/CalendarPeriod" },
        "schedule": { "$ref": "#/definitions/Schedule" }
      }
    },
    "CalendarPeriodsRelSchedule-detailedCollection": {
      "type": "object",
      "required": ["calendarPeriod", "schedule"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "calendarPeriod": { "$ref": "#/definitions/CalendarPeriod" },
        "schedule": { "$ref": "#/definitions/Schedule" }
      }
    },
    "CallAcl": {
      "type": "object",
      "required": ["name", "defaultPolicy"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "defaultPolicy": {
          "enum": ["allow", "deny"],
          "maxLength": 10,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "CallAcl-collection": {
      "type": "object",
      "required": ["name", "defaultPolicy"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "defaultPolicy": {
          "enum": ["allow", "deny"],
          "maxLength": 10,
          "description": "",
          "type": "string"
        }
      }
    },
    "CallAcl-detailed": {
      "type": "object",
      "required": ["name", "defaultPolicy"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "defaultPolicy": {
          "enum": ["allow", "deny"],
          "maxLength": 10,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "CallAclRelMatchList": {
      "type": "object",
      "required": ["priority", "policy", "callAcl", "matchList"],
      "properties": {
        "priority": { "description": "", "type": "integer" },
        "policy": {
          "enum": ["allow", "deny"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "callAcl": { "description": "", "type": "integer" },
        "matchList": { "description": "", "type": "integer" }
      }
    },
    "CallAclRelMatchList-detailed": {
      "type": "object",
      "required": ["priority", "policy", "callAcl", "matchList"],
      "properties": {
        "priority": { "description": "", "type": "integer" },
        "policy": {
          "enum": ["allow", "deny"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "callAcl": { "$ref": "#/definitions/CallAcl" },
        "matchList": { "$ref": "#/definitions/MatchList" }
      }
    },
    "CallAclRelMatchList-detailedCollection": {
      "type": "object",
      "required": ["priority", "policy", "callAcl", "matchList"],
      "properties": {
        "priority": { "description": "", "type": "integer" },
        "policy": {
          "enum": ["allow", "deny"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "callAcl": { "$ref": "#/definitions/CallAcl" },
        "matchList": { "$ref": "#/definitions/MatchList" }
      }
    },
    "CallCsvReport-collection": {
      "type": "object",
      "required": ["inDate", "outDate", "createdOn", "sentTo"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "inDate": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "outDate": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "csv": { "$ref": "#/definitions/CallCsvReport_Csv" },
        "createdOn": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "sentTo": {
          "default": "",
          "maxLength": 250,
          "description": "",
          "example": "",
          "type": "string"
        },
        "callCsvScheduler": { "description": "", "type": "integer" }
      }
    },
    "CallCsvReport-detailed": {
      "type": "object",
      "required": ["sentTo", "inDate", "outDate", "createdOn"],
      "properties": {
        "sentTo": {
          "default": "",
          "maxLength": 250,
          "description": "",
          "example": "",
          "type": "string"
        },
        "inDate": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "outDate": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "createdOn": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "csv": { "$ref": "#/definitions/CallCsvReport_Csv" },
        "callCsvScheduler": { "$ref": "#/definitions/CallCsvScheduler" }
      }
    },
    "CallCsvReport_Csv": {
      "type": "object",
      "properties": {
        "fileSize": { "minimum": 0, "description": "", "type": "integer" },
        "mimeType": { "maxLength": 80, "description": "", "type": "string" },
        "baseName": { "maxLength": 255, "description": "", "type": "string" }
      }
    },
    "CallCsvScheduler": {
      "type": "object",
      "required": ["name", "unit", "frequency", "email"],
      "properties": {
        "name": { "maxLength": 40, "description": "", "type": "string" },
        "unit": {
          "default": "month",
          "enum": ["day", "week", "month"],
          "maxLength": 30,
          "description": "",
          "example": "month",
          "type": "string"
        },
        "frequency": { "minimum": 0, "description": "", "type": "integer" },
        "callDirection": {
          "default": "outbound",
          "enum": ["inbound", "outbound"],
          "description": "",
          "example": "outbound",
          "type": "string"
        },
        "email": { "maxLength": 140, "description": "", "type": "string" },
        "lastExecution": {
          "readOnly": true,
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "lastExecutionError": {
          "readOnly": true,
          "maxLength": 300,
          "description": "",
          "type": "string"
        },
        "nextExecution": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "callCsvNotificationTemplate": { "description": "", "type": "integer" },
        "ddi": { "description": "", "type": "integer" },
        "retailAccount": { "description": "", "type": "integer" },
        "residentialDevice": { "description": "", "type": "integer" },
        "user": { "description": "", "type": "integer" },
        "fax": { "description": "", "type": "integer" },
        "friend": { "description": "", "type": "integer" }
      }
    },
    "CallCsvScheduler-collection": {
      "type": "object",
      "required": ["name", "frequency", "unit", "email"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 40, "description": "", "type": "string" },
        "frequency": { "minimum": 0, "description": "", "type": "integer" },
        "unit": {
          "default": "month",
          "enum": ["day", "week", "month"],
          "maxLength": 30,
          "description": "",
          "example": "month",
          "type": "string"
        },
        "callDirection": {
          "default": "outbound",
          "enum": ["inbound", "outbound"],
          "description": "",
          "example": "outbound",
          "type": "string"
        },
        "email": { "maxLength": 140, "description": "", "type": "string" },
        "lastExecution": {
          "readOnly": true,
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "lastExecutionError": {
          "readOnly": true,
          "maxLength": 300,
          "description": "",
          "type": "string"
        },
        "nextExecution": {
          "format": "date-time",
          "description": "",
          "type": "string"
        }
      }
    },
    "CallCsvScheduler-detailed": {
      "type": "object",
      "required": ["name", "unit", "frequency", "email"],
      "properties": {
        "name": { "maxLength": 40, "description": "", "type": "string" },
        "unit": {
          "default": "month",
          "enum": ["day", "week", "month"],
          "maxLength": 30,
          "description": "",
          "example": "month",
          "type": "string"
        },
        "frequency": { "minimum": 0, "description": "", "type": "integer" },
        "callDirection": {
          "default": "outbound",
          "enum": ["inbound", "outbound"],
          "description": "",
          "example": "outbound",
          "type": "string"
        },
        "email": { "maxLength": 140, "description": "", "type": "string" },
        "lastExecution": {
          "readOnly": true,
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "lastExecutionError": {
          "readOnly": true,
          "maxLength": 300,
          "description": "",
          "type": "string"
        },
        "nextExecution": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "callCsvNotificationTemplate": {
          "$ref": "#/definitions/NotificationTemplate"
        },
        "ddi": { "$ref": "#/definitions/Ddi" },
        "retailAccount": { "$ref": "#/definitions/RetailAccount" },
        "residentialDevice": { "$ref": "#/definitions/ResidentialDevice" },
        "user": { "$ref": "#/definitions/User" },
        "fax": { "$ref": "#/definitions/Fax" },
        "friend": { "$ref": "#/definitions/Friend" }
      }
    },
    "CallForwardSetting": {
      "type": "object",
      "required": [
        "callTypeFilter",
        "callForwardType",
        "noAnswerTimeout",
        "enabled"
      ],
      "properties": {
        "callTypeFilter": {
          "enum": ["internal", "external", "both"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "callForwardType": {
          "enum": ["inconditional", "noAnswer", "busy", "userNotRegistered"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "targetType": {
          "enum": ["number", "extension", "voicemail", "retail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "noAnswerTimeout": {
          "default": 10,
          "description": "",
          "example": "10",
          "type": "integer"
        },
        "enabled": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "user": { "description": "", "type": "integer" },
        "friend": { "description": "", "type": "integer" },
        "extension": { "description": "", "type": "integer" },
        "voicemail": { "description": "", "type": "integer" },
        "numberCountry": { "description": "", "type": "integer" },
        "residentialDevice": { "description": "", "type": "integer" },
        "retailAccount": { "description": "", "type": "integer" },
        "cfwToRetailAccount": { "description": "", "type": "integer" },
        "ddi": { "description": "", "type": "integer" }
      }
    },
    "CallForwardSetting-collection": {
      "type": "object",
      "required": ["callTypeFilter", "callForwardType", "enabled"],
      "properties": {
        "callTypeFilter": {
          "enum": ["internal", "external", "both"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "callForwardType": {
          "enum": ["inconditional", "noAnswer", "busy", "userNotRegistered"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "targetType": {
          "enum": ["number", "extension", "voicemail", "retail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "enabled": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "numberCountry": { "description": "", "type": "integer" },
        "user": { "description": "", "type": "integer" },
        "voicemail": { "description": "", "type": "integer" },
        "extension": { "description": "", "type": "integer" },
        "residentialDevice": { "description": "", "type": "integer" },
        "retailAccount": { "description": "", "type": "integer" },
        "cfwToRetailAccount": { "description": "", "type": "integer" },
        "ddi": { "description": "", "type": "integer" }
      }
    },
    "CallForwardSetting-detailed": {
      "type": "object",
      "required": [
        "callTypeFilter",
        "callForwardType",
        "noAnswerTimeout",
        "enabled"
      ],
      "properties": {
        "callTypeFilter": {
          "enum": ["internal", "external", "both"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "callForwardType": {
          "enum": ["inconditional", "noAnswer", "busy", "userNotRegistered"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "targetType": {
          "enum": ["number", "extension", "voicemail", "retail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "noAnswerTimeout": {
          "default": 10,
          "description": "",
          "example": "10",
          "type": "integer"
        },
        "enabled": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "user": { "$ref": "#/definitions/User" },
        "friend": { "$ref": "#/definitions/Friend" },
        "extension": { "$ref": "#/definitions/Extension" },
        "voicemail": { "$ref": "#/definitions/Voicemail" },
        "numberCountry": { "$ref": "#/definitions/Country" },
        "residentialDevice": { "$ref": "#/definitions/ResidentialDevice" },
        "retailAccount": { "$ref": "#/definitions/RetailAccount" },
        "cfwToRetailAccount": { "$ref": "#/definitions/RetailAccount" },
        "ddi": { "$ref": "#/definitions/Ddi" }
      }
    },
    "Company": {
      "type": "object",
      "required": ["type", "country"],
      "properties": {
        "type": {
          "default": "vpbx",
          "enum": ["vpbx", "retail", "wholesale", "residential"],
          "maxLength": 25,
          "description": "",
          "example": "vpbx",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "maxLength": 80,
          "description": "",
          "type": "string"
        },
        "domainUsers": {
          "readOnly": true,
          "maxLength": 190,
          "description": "",
          "type": "string"
        },
        "onDemandRecordCode": {
          "readOnly": true,
          "maxLength": 3,
          "description": "",
          "type": "string"
        },
        "balance": {
          "readOnly": true,
          "default": 0,
          "format": "float",
          "description": "",
          "example": "0.0000",
          "type": "number"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "invoicing": { "$ref": "#/definitions/Invoicing" },
        "language": { "description": "", "type": "integer" },
        "defaultTimezone": { "description": "", "type": "integer" },
        "country": { "description": "", "type": "integer" },
        "transformationRuleSet": { "description": "", "type": "integer" },
        "outgoingDdi": { "description": "", "type": "integer" },
        "outgoingDdiRule": { "description": "", "type": "integer" }
      }
    },
    "Company-collection": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": {
          "readOnly": true,
          "maxLength": 80,
          "description": "",
          "type": "string"
        },
        "type": {
          "default": "vpbx",
          "enum": ["vpbx", "retail", "wholesale", "residential"],
          "maxLength": 25,
          "description": "",
          "example": "vpbx",
          "type": "string"
        },
        "invoicing": { "$ref": "#/definitions/Invoicing" },
        "domainName": {
          "readOnly": true,
          "description": "Registration domain",
          "type": "string"
        }
      }
    },
    "Company-detailed": {
      "type": "object",
      "required": ["type", "country"],
      "properties": {
        "type": {
          "default": "vpbx",
          "enum": ["vpbx", "retail", "wholesale", "residential"],
          "maxLength": 25,
          "description": "",
          "example": "vpbx",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "maxLength": 80,
          "description": "",
          "type": "string"
        },
        "domainUsers": {
          "readOnly": true,
          "maxLength": 190,
          "description": "",
          "type": "string"
        },
        "onDemandRecordCode": {
          "readOnly": true,
          "maxLength": 3,
          "description": "",
          "type": "string"
        },
        "balance": {
          "readOnly": true,
          "default": 0,
          "format": "float",
          "description": "",
          "example": "0.0000",
          "type": "number"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "invoicing": { "$ref": "#/definitions/Invoicing" },
        "language": { "$ref": "#/definitions/Language" },
        "defaultTimezone": { "$ref": "#/definitions/Timezone" },
        "country": { "$ref": "#/definitions/Country" },
        "transformationRuleSet": {
          "$ref": "#/definitions/TransformationRuleSet"
        },
        "outgoingDdi": { "$ref": "#/definitions/Ddi" },
        "outgoingDdiRule": { "$ref": "#/definitions/OutgoingDdiRule" },
        "domainName": {
          "readOnly": true,
          "description": "Registration domain",
          "type": "string"
        }
      }
    },
    "CompanyService": {
      "type": "object",
      "required": ["code", "service"],
      "properties": {
        "code": { "maxLength": 3, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "service": { "description": "", "type": "integer" }
      }
    },
    "CompanyService-collection": {
      "type": "object",
      "required": ["code", "service"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "code": { "maxLength": 3, "description": "", "type": "string" },
        "service": { "description": "", "type": "integer" }
      }
    },
    "CompanyService-detailed": {
      "type": "object",
      "required": ["code", "service"],
      "properties": {
        "code": { "maxLength": 3, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "service": { "$ref": "#/definitions/Service" }
      }
    },
    "ConditionalRoute": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "routetype": {
          "enum": [
            "user",
            "number",
            "ivr",
            "huntGroup",
            "voicemail",
            "friend",
            "queue",
            "conferenceRoom",
            "extension"
          ],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numbervalue": { "maxLength": 25, "description": "", "type": "string" },
        "friendvalue": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "ivr": { "description": "", "type": "integer" },
        "huntGroup": { "description": "", "type": "integer" },
        "voicemail": { "description": "", "type": "integer" },
        "user": { "description": "", "type": "integer" },
        "queue": { "description": "", "type": "integer" },
        "locution": { "description": "", "type": "integer" },
        "conferenceRoom": { "description": "", "type": "integer" },
        "extension": { "description": "", "type": "integer" },
        "numberCountry": { "description": "", "type": "integer" }
      }
    },
    "ConditionalRoute-collection": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "locution": { "description": "", "type": "integer" },
        "routetype": {
          "enum": [
            "user",
            "number",
            "ivr",
            "huntGroup",
            "voicemail",
            "friend",
            "queue",
            "conferenceRoom",
            "extension"
          ],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numbervalue": { "maxLength": 25, "description": "", "type": "string" },
        "friendvalue": { "maxLength": 25, "description": "", "type": "string" },
        "ivr": { "description": "", "type": "integer" },
        "huntGroup": { "description": "", "type": "integer" },
        "voicemail": { "description": "", "type": "integer" },
        "user": { "description": "", "type": "integer" },
        "queue": { "description": "", "type": "integer" },
        "conferenceRoom": { "description": "", "type": "integer" },
        "extension": { "description": "", "type": "integer" },
        "numberCountry": { "description": "", "type": "integer" }
      }
    },
    "ConditionalRoute-detailed": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "routetype": {
          "enum": [
            "user",
            "number",
            "ivr",
            "huntGroup",
            "voicemail",
            "friend",
            "queue",
            "conferenceRoom",
            "extension"
          ],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numbervalue": { "maxLength": 25, "description": "", "type": "string" },
        "friendvalue": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "ivr": { "$ref": "#/definitions/Ivr" },
        "huntGroup": { "$ref": "#/definitions/HuntGroup" },
        "voicemail": { "$ref": "#/definitions/Voicemail" },
        "user": { "$ref": "#/definitions/User" },
        "queue": { "$ref": "#/definitions/Queue" },
        "locution": { "$ref": "#/definitions/Locution" },
        "conferenceRoom": { "$ref": "#/definitions/ConferenceRoom" },
        "extension": { "$ref": "#/definitions/Extension" },
        "numberCountry": { "$ref": "#/definitions/Country" }
      }
    },
    "ConditionalRoutesCondition": {
      "type": "object",
      "required": ["priority", "conditionalRoute"],
      "properties": {
        "priority": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "routeType": {
          "enum": [
            "user",
            "number",
            "ivr",
            "huntGroup",
            "voicemail",
            "friend",
            "queue",
            "conferenceRoom",
            "extension"
          ],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "friendValue": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "conditionalRoute": { "description": "", "type": "integer" },
        "ivr": { "description": "", "type": "integer" },
        "huntGroup": { "description": "", "type": "integer" },
        "voicemail": { "description": "", "type": "integer" },
        "user": { "description": "", "type": "integer" },
        "queue": { "description": "", "type": "integer" },
        "locution": { "description": "", "type": "integer" },
        "conferenceRoom": { "description": "", "type": "integer" },
        "extension": { "description": "", "type": "integer" },
        "numberCountry": { "description": "", "type": "integer" }
      }
    },
    "ConditionalRoutesCondition-collection": {
      "type": "object",
      "required": ["priority"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "priority": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "routeType": {
          "enum": [
            "user",
            "number",
            "ivr",
            "huntGroup",
            "voicemail",
            "friend",
            "queue",
            "conferenceRoom",
            "extension"
          ],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "locution": { "description": "", "type": "integer" },
        "numberCountry": { "description": "", "type": "integer" },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "ivr": { "description": "", "type": "integer" },
        "user": { "description": "", "type": "integer" },
        "huntGroup": { "description": "", "type": "integer" },
        "voicemail": { "description": "", "type": "integer" },
        "friendValue": { "maxLength": 25, "description": "", "type": "string" },
        "queue": { "description": "", "type": "integer" },
        "conferenceRoom": { "description": "", "type": "integer" },
        "extension": { "description": "", "type": "integer" }
      }
    },
    "ConditionalRoutesCondition-detailed": {
      "type": "object",
      "required": ["priority", "conditionalRoute"],
      "properties": {
        "priority": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "routeType": {
          "enum": [
            "user",
            "number",
            "ivr",
            "huntGroup",
            "voicemail",
            "friend",
            "queue",
            "conferenceRoom",
            "extension"
          ],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "friendValue": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "conditionalRoute": { "$ref": "#/definitions/ConditionalRoute" },
        "ivr": { "$ref": "#/definitions/Ivr" },
        "huntGroup": { "$ref": "#/definitions/HuntGroup" },
        "voicemail": { "$ref": "#/definitions/Voicemail" },
        "user": { "$ref": "#/definitions/User" },
        "queue": { "$ref": "#/definitions/Queue" },
        "locution": { "$ref": "#/definitions/Locution" },
        "conferenceRoom": { "$ref": "#/definitions/ConferenceRoom" },
        "extension": { "$ref": "#/definitions/Extension" },
        "numberCountry": { "$ref": "#/definitions/Country" },
        "matchListIds": {
          "description": "Matchlist ids",
          "type": "array",
          "items": { "type": "integer" }
        },
        "scheduleIds": {
          "description": "Schedule ids",
          "type": "array",
          "items": { "type": "integer" }
        },
        "calendarIds": {
          "description": "Calendar ids",
          "type": "array",
          "items": { "type": "integer" }
        },
        "routeLockIds": {
          "description": "Route lock ids",
          "type": "array",
          "items": { "type": "integer" }
        }
      }
    },
    "ConditionalRoutesCondition-withInverseRelationships": {
      "type": "object",
      "required": ["priority", "conditionalRoute"],
      "properties": {
        "priority": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "routeType": {
          "enum": [
            "user",
            "number",
            "ivr",
            "huntGroup",
            "voicemail",
            "friend",
            "queue",
            "conferenceRoom",
            "extension"
          ],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "friendValue": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "conditionalRoute": { "$ref": "#/definitions/ConditionalRoute" },
        "ivr": { "$ref": "#/definitions/Ivr" },
        "huntGroup": { "$ref": "#/definitions/HuntGroup" },
        "voicemail": { "$ref": "#/definitions/Voicemail" },
        "user": { "$ref": "#/definitions/User" },
        "queue": { "$ref": "#/definitions/Queue" },
        "locution": { "$ref": "#/definitions/Locution" },
        "conferenceRoom": { "$ref": "#/definitions/ConferenceRoom" },
        "extension": { "$ref": "#/definitions/Extension" },
        "numberCountry": { "$ref": "#/definitions/Country" },
        "matchListIds": {
          "description": "Matchlist ids",
          "type": "array",
          "items": { "type": "integer" }
        },
        "scheduleIds": {
          "description": "Schedule ids",
          "type": "array",
          "items": { "type": "integer" }
        },
        "calendarIds": {
          "description": "Calendar ids",
          "type": "array",
          "items": { "type": "integer" }
        },
        "routeLockIds": {
          "description": "Route lock ids",
          "type": "array",
          "items": { "type": "integer" }
        }
      }
    },
    "ConditionalRoutesConditionsRelCalendar": {
      "type": "object",
      "required": ["condition", "calendar"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "condition": { "description": "", "type": "integer" },
        "calendar": { "description": "", "type": "integer" }
      }
    },
    "ConditionalRoutesConditionsRelCalendar-detailed": {
      "type": "object",
      "required": ["condition", "calendar"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "condition": { "$ref": "#/definitions/ConditionalRoutesCondition" },
        "calendar": { "$ref": "#/definitions/Calendar" }
      }
    },
    "ConditionalRoutesConditionsRelCalendar-detailedCollection": {
      "type": "object",
      "required": ["condition", "calendar"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "condition": { "$ref": "#/definitions/ConditionalRoutesCondition" },
        "calendar": { "$ref": "#/definitions/Calendar" }
      }
    },
    "ConditionalRoutesConditionsRelMatchlist": {
      "type": "object",
      "required": ["condition", "matchlist"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "condition": { "description": "", "type": "integer" },
        "matchlist": { "description": "", "type": "integer" }
      }
    },
    "ConditionalRoutesConditionsRelMatchlist-detailed": {
      "type": "object",
      "required": ["condition", "matchlist"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "condition": { "$ref": "#/definitions/ConditionalRoutesCondition" },
        "matchlist": { "$ref": "#/definitions/MatchList" }
      }
    },
    "ConditionalRoutesConditionsRelMatchlist-detailedCollection": {
      "type": "object",
      "required": ["condition", "matchlist"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "condition": { "$ref": "#/definitions/ConditionalRoutesCondition" },
        "matchlist": { "$ref": "#/definitions/MatchList" }
      }
    },
    "ConditionalRoutesConditionsRelRouteLock": {
      "type": "object",
      "required": ["condition", "routeLock"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "condition": { "description": "", "type": "integer" },
        "routeLock": { "description": "", "type": "integer" }
      }
    },
    "ConditionalRoutesConditionsRelRouteLock-detailed": {
      "type": "object",
      "required": ["condition", "routeLock"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "condition": { "$ref": "#/definitions/ConditionalRoutesCondition" },
        "routeLock": { "$ref": "#/definitions/RouteLock" }
      }
    },
    "ConditionalRoutesConditionsRelRouteLock-detailedCollection": {
      "type": "object",
      "required": ["condition", "routeLock"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "condition": { "$ref": "#/definitions/ConditionalRoutesCondition" },
        "routeLock": { "$ref": "#/definitions/RouteLock" }
      }
    },
    "ConditionalRoutesConditionsRelSchedule": {
      "type": "object",
      "required": ["condition", "schedule"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "condition": { "description": "", "type": "integer" },
        "schedule": { "description": "", "type": "integer" }
      }
    },
    "ConditionalRoutesConditionsRelSchedule-detailed": {
      "type": "object",
      "required": ["condition", "schedule"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "condition": { "$ref": "#/definitions/ConditionalRoutesCondition" },
        "schedule": { "$ref": "#/definitions/Schedule" }
      }
    },
    "ConditionalRoutesConditionsRelSchedule-detailedCollection": {
      "type": "object",
      "required": ["condition", "schedule"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "condition": { "$ref": "#/definitions/ConditionalRoutesCondition" },
        "schedule": { "$ref": "#/definitions/Schedule" }
      }
    },
    "ConferenceRoom": {
      "type": "object",
      "required": ["name", "pinProtected", "maxMembers"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "pinProtected": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "pinCode": { "maxLength": 6, "description": "", "type": "string" },
        "maxMembers": {
          "default": 0,
          "minimum": 0,
          "description": "",
          "example": "0",
          "type": "integer"
        },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "ConferenceRoom-collection": {
      "type": "object",
      "required": ["name", "maxMembers", "pinProtected"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "maxMembers": {
          "default": 0,
          "minimum": 0,
          "description": "",
          "example": "0",
          "type": "integer"
        },
        "pinProtected": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "pinCode": { "maxLength": 6, "description": "", "type": "string" }
      }
    },
    "ConferenceRoom-detailed": {
      "type": "object",
      "required": ["name", "pinProtected", "maxMembers"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "pinProtected": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "pinCode": { "maxLength": 6, "description": "", "type": "string" },
        "maxMembers": {
          "default": 0,
          "minimum": 0,
          "description": "",
          "example": "0",
          "type": "integer"
        },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "Contact": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "lastname": { "maxLength": 100, "description": "", "type": "string" },
        "email": { "maxLength": 100, "description": "", "type": "string" },
        "workPhone": { "maxLength": 20, "description": "", "type": "string" },
        "workPhoneE164": {
          "readOnly": true,
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "mobilePhone": { "maxLength": 20, "description": "", "type": "string" },
        "mobilePhoneE164": {
          "readOnly": true,
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "otherPhone": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "user": { "readOnly": true, "description": "", "type": "integer" },
        "workPhoneCountry": { "description": "", "type": "integer" },
        "mobilePhoneCountry": { "description": "", "type": "integer" }
      }
    },
    "Contact-collection": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "lastname": { "maxLength": 100, "description": "", "type": "string" },
        "email": { "maxLength": 100, "description": "", "type": "string" },
        "workPhoneE164": {
          "readOnly": true,
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "mobilePhoneE164": {
          "readOnly": true,
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "otherPhone": { "maxLength": 25, "description": "", "type": "string" },
        "user": { "readOnly": true, "description": "", "type": "integer" }
      }
    },
    "Contact-detailed": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "lastname": { "maxLength": 100, "description": "", "type": "string" },
        "email": { "maxLength": 100, "description": "", "type": "string" },
        "workPhone": { "maxLength": 20, "description": "", "type": "string" },
        "workPhoneE164": {
          "readOnly": true,
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "mobilePhone": { "maxLength": 20, "description": "", "type": "string" },
        "mobilePhoneE164": {
          "readOnly": true,
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "otherPhone": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "user": { "readOnly": true, "$ref": "#/definitions/User" },
        "workPhoneCountry": { "$ref": "#/definitions/Country" },
        "mobilePhoneCountry": { "$ref": "#/definitions/Country" }
      }
    },
    "Country": {
      "type": "object",
      "required": ["code"],
      "properties": {
        "code": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "countryCode": { "maxLength": 10, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/Country_Name" },
        "zone": { "$ref": "#/definitions/Country_Zone" }
      }
    },
    "Country-collection": {
      "type": "object",
      "required": ["code"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "code": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "countryCode": { "maxLength": 10, "description": "", "type": "string" },
        "name": { "$ref": "#/definitions/Country_Name" }
      }
    },
    "Country-detailed": {
      "type": "object",
      "required": ["code"],
      "properties": {
        "code": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "countryCode": { "maxLength": 10, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/Country_Name" },
        "zone": { "$ref": "#/definitions/Country_Zone" }
      }
    },
    "Country_Name": {
      "type": "object",
      "required": ["en", "es", "ca", "it"],
      "properties": {
        "en": { "maxLength": 100, "description": "", "type": "string" },
        "es": { "maxLength": 100, "description": "", "type": "string" },
        "ca": { "maxLength": 100, "description": "", "type": "string" },
        "it": { "maxLength": 100, "description": "", "type": "string" }
      }
    },
    "Country_Zone": {
      "type": "object",
      "required": ["en", "es", "ca", "it"],
      "properties": {
        "en": {
          "default": "",
          "maxLength": 55,
          "description": "",
          "example": "",
          "type": "string"
        },
        "es": {
          "default": "",
          "maxLength": 55,
          "description": "",
          "example": "",
          "type": "string"
        },
        "ca": {
          "default": "",
          "maxLength": 55,
          "description": "",
          "example": "",
          "type": "string"
        },
        "it": {
          "default": "",
          "maxLength": 55,
          "description": "",
          "example": "",
          "type": "string"
        }
      }
    },
    "Ddi": {
      "type": "object",
      "properties": {
        "ddi": {
          "readOnly": true,
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "ddie164": {
          "readOnly": true,
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "description": {
          "maxLength": 100,
          "description": "",
          "type": "string"
        },
        "recordCalls": {
          "default": "none",
          "enum": ["none", "all", "inbound", "outbound"],
          "maxLength": 25,
          "description": "",
          "example": "none",
          "type": "string"
        },
        "displayName": { "maxLength": 50, "description": "", "type": "string" },
        "routeType": {
          "enum": [
            "user",
            "ivr",
            "huntGroup",
            "fax",
            "conferenceRoom",
            "friend",
            "queue",
            "conditional",
            "residential",
            "retail"
          ],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "friendValue": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "conferenceRoom": { "description": "", "type": "integer" },
        "language": { "description": "", "type": "integer" },
        "queue": { "description": "", "type": "integer" },
        "externalCallFilter": { "description": "", "type": "integer" },
        "user": { "description": "", "type": "integer" },
        "ivr": { "description": "", "type": "integer" },
        "huntGroup": { "description": "", "type": "integer" },
        "fax": { "description": "", "type": "integer" },
        "country": { "readOnly": true, "description": "", "type": "integer" },
        "residentialDevice": { "description": "", "type": "integer" },
        "conditionalRoute": { "description": "", "type": "integer" },
        "retailAccount": { "description": "", "type": "integer" }
      },
      "required": ["recordCalls"]
    },
    "Ddi-collection": {
      "type": "object",
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "country": { "readOnly": true, "description": "", "type": "integer" },
        "ddi": {
          "readOnly": true,
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "ddie164": {
          "readOnly": true,
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "description": {
          "maxLength": 100,
          "description": "",
          "type": "string"
        },
        "externalCallFilter": { "description": "", "type": "integer" },
        "routeType": {
          "enum": [
            "user",
            "ivr",
            "huntGroup",
            "fax",
            "conferenceRoom",
            "friend",
            "queue",
            "conditional",
            "residential",
            "retail"
          ],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "friendValue": { "maxLength": 25, "description": "", "type": "string" },
        "conferenceRoom": { "description": "", "type": "integer" },
        "language": { "description": "", "type": "integer" },
        "queue": { "description": "", "type": "integer" },
        "user": { "description": "", "type": "integer" },
        "ivr": { "description": "", "type": "integer" },
        "huntGroup": { "description": "", "type": "integer" },
        "fax": { "description": "", "type": "integer" },
        "residentialDevice": { "description": "", "type": "integer" },
        "conditionalRoute": { "description": "", "type": "integer" },
        "retailAccount": { "description": "", "type": "integer" }
      }
    },
    "Ddi-detailed": {
      "type": "object",
      "properties": {
        "ddi": {
          "readOnly": true,
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "ddie164": {
          "readOnly": true,
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "description": {
          "maxLength": 100,
          "description": "",
          "type": "string"
        },
        "recordCalls": {
          "default": "none",
          "enum": ["none", "all", "inbound", "outbound"],
          "maxLength": 25,
          "description": "",
          "example": "none",
          "type": "string"
        },
        "displayName": { "maxLength": 50, "description": "", "type": "string" },
        "routeType": {
          "enum": [
            "user",
            "ivr",
            "huntGroup",
            "fax",
            "conferenceRoom",
            "friend",
            "queue",
            "conditional",
            "residential",
            "retail"
          ],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "friendValue": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "conferenceRoom": { "$ref": "#/definitions/ConferenceRoom" },
        "language": { "$ref": "#/definitions/Language" },
        "queue": { "$ref": "#/definitions/Queue" },
        "externalCallFilter": { "$ref": "#/definitions/ExternalCallFilter" },
        "user": { "$ref": "#/definitions/User" },
        "ivr": { "$ref": "#/definitions/Ivr" },
        "huntGroup": { "$ref": "#/definitions/HuntGroup" },
        "fax": { "$ref": "#/definitions/Fax" },
        "country": { "readOnly": true, "$ref": "#/definitions/Country" },
        "residentialDevice": { "$ref": "#/definitions/ResidentialDevice" },
        "conditionalRoute": { "$ref": "#/definitions/ConditionalRoute" },
        "retailAccount": { "$ref": "#/definitions/RetailAccount" }
      },
      "required": ["recordCalls"]
    },
    "Extension": {
      "type": "object",
      "required": ["number"],
      "properties": {
        "number": { "maxLength": 10, "description": "", "type": "string" },
        "routeType": {
          "enum": [
            "user",
            "number",
            "ivr",
            "huntGroup",
            "conferenceRoom",
            "friend",
            "queue",
            "conditional",
            "voicemail"
          ],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "friendValue": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "ivr": { "description": "", "type": "integer" },
        "huntGroup": { "description": "", "type": "integer" },
        "conferenceRoom": { "description": "", "type": "integer" },
        "user": { "description": "", "type": "integer" },
        "queue": { "description": "", "type": "integer" },
        "conditionalRoute": { "description": "", "type": "integer" },
        "numberCountry": { "description": "", "type": "integer" },
        "voicemail": { "description": "", "type": "integer" }
      }
    },
    "Extension-collection": {
      "type": "object",
      "required": ["number"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "number": { "maxLength": 10, "description": "", "type": "string" },
        "routeType": {
          "enum": [
            "user",
            "number",
            "ivr",
            "huntGroup",
            "conferenceRoom",
            "friend",
            "queue",
            "conditional",
            "voicemail"
          ],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "friendValue": { "maxLength": 25, "description": "", "type": "string" },
        "ivr": { "description": "", "type": "integer" },
        "huntGroup": { "description": "", "type": "integer" },
        "conferenceRoom": { "description": "", "type": "integer" },
        "user": { "description": "", "type": "integer" },
        "queue": { "description": "", "type": "integer" },
        "conditionalRoute": { "description": "", "type": "integer" },
        "voicemail": { "description": "", "type": "integer" },
        "numberCountry": { "description": "", "type": "integer" }
      }
    },
    "Extension-detailed": {
      "type": "object",
      "required": ["number"],
      "properties": {
        "number": { "maxLength": 10, "description": "", "type": "string" },
        "routeType": {
          "enum": [
            "user",
            "number",
            "ivr",
            "huntGroup",
            "conferenceRoom",
            "friend",
            "queue",
            "conditional",
            "voicemail"
          ],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "friendValue": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "ivr": { "$ref": "#/definitions/Ivr" },
        "huntGroup": { "$ref": "#/definitions/HuntGroup" },
        "conferenceRoom": { "$ref": "#/definitions/ConferenceRoom" },
        "user": { "$ref": "#/definitions/User" },
        "queue": { "$ref": "#/definitions/Queue" },
        "conditionalRoute": { "$ref": "#/definitions/ConditionalRoute" },
        "numberCountry": { "$ref": "#/definitions/Country" },
        "voicemail": { "$ref": "#/definitions/Voicemail" }
      }
    },
    "ExternalCallFilter": {
      "type": "object",
      "required": ["name", "holidayEnabled", "outOfScheduleEnabled"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "holidayEnabled": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "holidayTargetType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "holidayNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "outOfScheduleEnabled": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "outOfScheduleTargetType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "outOfScheduleNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "welcomeLocution": { "description": "", "type": "integer" },
        "holidayLocution": { "description": "", "type": "integer" },
        "outOfScheduleLocution": { "description": "", "type": "integer" },
        "holidayExtension": { "description": "", "type": "integer" },
        "outOfScheduleExtension": { "description": "", "type": "integer" },
        "holidayVoicemail": { "description": "", "type": "integer" },
        "outOfScheduleVoicemail": { "description": "", "type": "integer" },
        "holidayNumberCountry": { "description": "", "type": "integer" },
        "outOfScheduleNumberCountry": { "description": "", "type": "integer" }
      }
    },
    "ExternalCallFilter-collection": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "holidayTargetType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "holidayNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "holidayLocution": { "description": "", "type": "integer" },
        "holidayExtension": { "description": "", "type": "integer" },
        "holidayVoicemail": { "description": "", "type": "integer" },
        "holidayNumberCountry": { "description": "", "type": "integer" },
        "outOfScheduleTargetType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "outOfScheduleNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "outOfScheduleLocution": { "description": "", "type": "integer" },
        "outOfScheduleExtension": { "description": "", "type": "integer" },
        "outOfScheduleVoicemail": { "description": "", "type": "integer" },
        "outOfScheduleNumberCountry": { "description": "", "type": "integer" }
      }
    },
    "ExternalCallFilter-detailed": {
      "type": "object",
      "required": ["name", "holidayEnabled", "outOfScheduleEnabled"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "holidayEnabled": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "holidayTargetType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "holidayNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "outOfScheduleEnabled": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "outOfScheduleTargetType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "outOfScheduleNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "welcomeLocution": { "$ref": "#/definitions/Locution" },
        "holidayLocution": { "$ref": "#/definitions/Locution" },
        "outOfScheduleLocution": { "$ref": "#/definitions/Locution" },
        "holidayExtension": { "$ref": "#/definitions/Extension" },
        "outOfScheduleExtension": { "$ref": "#/definitions/Extension" },
        "holidayVoicemail": { "$ref": "#/definitions/Voicemail" },
        "outOfScheduleVoicemail": { "$ref": "#/definitions/Voicemail" },
        "holidayNumberCountry": { "$ref": "#/definitions/Country" },
        "outOfScheduleNumberCountry": { "$ref": "#/definitions/Country" },
        "scheduleIds": {
          "description": "Schedule ids",
          "type": "array",
          "items": { "type": "integer" }
        },
        "calendarIds": {
          "description": "Calendar ids",
          "type": "array",
          "items": { "type": "integer" }
        },
        "whiteListIds": {
          "description": "Whitelisted matchlists",
          "type": "array",
          "items": { "type": "integer" }
        },
        "blackListIds": {
          "description": "Blacklisted matchlists",
          "type": "array",
          "items": { "type": "integer" }
        }
      }
    },
    "ExternalCallFilter-withInverseRelationships": {
      "type": "object",
      "required": ["name", "holidayEnabled", "outOfScheduleEnabled"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "holidayEnabled": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "holidayTargetType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "holidayNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "outOfScheduleEnabled": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "outOfScheduleTargetType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "outOfScheduleNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "welcomeLocution": { "$ref": "#/definitions/Locution" },
        "holidayLocution": { "$ref": "#/definitions/Locution" },
        "outOfScheduleLocution": { "$ref": "#/definitions/Locution" },
        "holidayExtension": { "$ref": "#/definitions/Extension" },
        "outOfScheduleExtension": { "$ref": "#/definitions/Extension" },
        "holidayVoicemail": { "$ref": "#/definitions/Voicemail" },
        "outOfScheduleVoicemail": { "$ref": "#/definitions/Voicemail" },
        "holidayNumberCountry": { "$ref": "#/definitions/Country" },
        "outOfScheduleNumberCountry": { "$ref": "#/definitions/Country" },
        "scheduleIds": {
          "description": "Schedule ids",
          "type": "array",
          "items": { "type": "integer" }
        },
        "calendarIds": {
          "description": "Calendar ids",
          "type": "array",
          "items": { "type": "integer" }
        },
        "whiteListIds": {
          "description": "Whitelisted matchlists",
          "type": "array",
          "items": { "type": "integer" }
        },
        "blackListIds": {
          "description": "Blacklisted matchlists",
          "type": "array",
          "items": { "type": "integer" }
        }
      }
    },
    "ExternalCallFilterBlackList": {
      "type": "object",
      "required": ["filter", "matchlist"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "filter": { "description": "", "type": "integer" },
        "matchlist": { "description": "", "type": "integer" }
      }
    },
    "ExternalCallFilterBlackList-detailed": {
      "type": "object",
      "required": ["filter", "matchlist"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "filter": { "$ref": "#/definitions/ExternalCallFilter" },
        "matchlist": { "$ref": "#/definitions/MatchList" }
      }
    },
    "ExternalCallFilterBlackList-detailedCollection": {
      "type": "object",
      "required": ["filter", "matchlist"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "filter": { "$ref": "#/definitions/ExternalCallFilter" },
        "matchlist": { "$ref": "#/definitions/MatchList" }
      }
    },
    "ExternalCallFilterRelCalendar": {
      "type": "object",
      "required": ["filter", "calendar"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "filter": { "description": "", "type": "integer" },
        "calendar": { "description": "", "type": "integer" }
      }
    },
    "ExternalCallFilterRelCalendar-detailed": {
      "type": "object",
      "required": ["filter", "calendar"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "filter": { "$ref": "#/definitions/ExternalCallFilter" },
        "calendar": { "$ref": "#/definitions/Calendar" }
      }
    },
    "ExternalCallFilterRelCalendar-detailedCollection": {
      "type": "object",
      "required": ["filter", "calendar"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "filter": { "$ref": "#/definitions/ExternalCallFilter" },
        "calendar": { "$ref": "#/definitions/Calendar" }
      }
    },
    "ExternalCallFilterRelSchedule": {
      "type": "object",
      "required": ["filter", "schedule"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "filter": { "description": "", "type": "integer" },
        "schedule": { "description": "", "type": "integer" }
      }
    },
    "ExternalCallFilterRelSchedule-detailed": {
      "type": "object",
      "required": ["filter", "schedule"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "filter": { "$ref": "#/definitions/ExternalCallFilter" },
        "schedule": { "$ref": "#/definitions/Schedule" }
      }
    },
    "ExternalCallFilterRelSchedule-detailedCollection": {
      "type": "object",
      "required": ["filter", "schedule"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "filter": { "$ref": "#/definitions/ExternalCallFilter" },
        "schedule": { "$ref": "#/definitions/Schedule" }
      }
    },
    "ExternalCallFilterWhiteList": {
      "type": "object",
      "required": ["filter", "matchlist"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "filter": { "description": "", "type": "integer" },
        "matchlist": { "description": "", "type": "integer" }
      }
    },
    "ExternalCallFilterWhiteList-detailed": {
      "type": "object",
      "required": ["filter", "matchlist"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "filter": { "$ref": "#/definitions/ExternalCallFilter" },
        "matchlist": { "$ref": "#/definitions/MatchList" }
      }
    },
    "ExternalCallFilterWhiteList-detailedCollection": {
      "type": "object",
      "required": ["filter", "matchlist"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "filter": { "$ref": "#/definitions/ExternalCallFilter" },
        "matchlist": { "$ref": "#/definitions/MatchList" }
      }
    },
    "Fax": {
      "type": "object",
      "required": ["name", "sendByEmail"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "email": { "maxLength": 255, "description": "", "type": "string" },
        "sendByEmail": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "outgoingDdi": { "description": "", "type": "integer" }
      }
    },
    "Fax-collection": {
      "type": "object",
      "required": ["name", "sendByEmail"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "email": { "maxLength": 255, "description": "", "type": "string" },
        "sendByEmail": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "outgoingDdi": { "description": "", "type": "integer" }
      }
    },
    "Fax-detailed": {
      "type": "object",
      "required": ["name", "sendByEmail"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "email": { "maxLength": 255, "description": "", "type": "string" },
        "sendByEmail": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "outgoingDdi": { "$ref": "#/definitions/Ddi" }
      }
    },
    "FaxesInOut": {
      "type": "object",
      "properties": {
        "calldate": {
          "readOnly": true,
          "default": "CURRENT_TIMESTAMP",
          "format": "date-time",
          "description": "",
          "example": "CURRENT_TIMESTAMP",
          "type": "string"
        },
        "src": {
          "readOnly": true,
          "maxLength": 128,
          "description": "",
          "type": "string"
        },
        "dst": { "maxLength": 128, "description": "", "type": "string" },
        "type": {
          "default": "Out",
          "enum": ["In", "Out"],
          "maxLength": 20,
          "description": "",
          "example": "Out",
          "type": "string"
        },
        "pages": { "maxLength": 64, "description": "", "type": "string" },
        "status": {
          "readOnly": true,
          "enum": ["error", "pending", "inprogress", "completed"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "file": { "$ref": "#/definitions/FaxesInOut_File" },
        "fax": { "description": "", "type": "integer" },
        "dstCountry": { "description": "", "type": "integer" }
      },
      "required": ["fax"]
    },
    "FaxesInOut-collection": {
      "type": "object",
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "calldate": {
          "readOnly": true,
          "default": "CURRENT_TIMESTAMP",
          "format": "date-time",
          "description": "",
          "example": "CURRENT_TIMESTAMP",
          "type": "string"
        },
        "src": {
          "readOnly": true,
          "maxLength": 128,
          "description": "",
          "type": "string"
        },
        "dst": { "maxLength": 128, "description": "", "type": "string" },
        "type": {
          "default": "Out",
          "enum": ["In", "Out"],
          "maxLength": 20,
          "description": "",
          "example": "Out",
          "type": "string"
        },
        "status": {
          "readOnly": true,
          "enum": ["error", "pending", "inprogress", "completed"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        }
      }
    },
    "FaxesInOut-detailed": {
      "type": "object",
      "properties": {
        "calldate": {
          "readOnly": true,
          "default": "CURRENT_TIMESTAMP",
          "format": "date-time",
          "description": "",
          "example": "CURRENT_TIMESTAMP",
          "type": "string"
        },
        "src": {
          "readOnly": true,
          "maxLength": 128,
          "description": "",
          "type": "string"
        },
        "dst": { "maxLength": 128, "description": "", "type": "string" },
        "type": {
          "default": "Out",
          "enum": ["In", "Out"],
          "maxLength": 20,
          "description": "",
          "example": "Out",
          "type": "string"
        },
        "pages": { "maxLength": 64, "description": "", "type": "string" },
        "status": {
          "readOnly": true,
          "enum": ["error", "pending", "inprogress", "completed"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "file": { "$ref": "#/definitions/FaxesInOut_File" },
        "fax": { "$ref": "#/definitions/Fax" },
        "dstCountry": { "$ref": "#/definitions/Country" }
      },
      "required": ["fax"]
    },
    "FaxesInOut_File": {
      "type": "object",
      "properties": {
        "fileSize": { "minimum": 0, "description": "", "type": "integer" },
        "mimeType": { "maxLength": 80, "description": "", "type": "string" },
        "baseName": { "maxLength": 255, "description": "", "type": "string" }
      }
    },
    "Feature": {
      "type": "object",
      "required": ["iden"],
      "properties": {
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "id": { "readOnly": true, "description": "", "type": "integer" }
      }
    },
    "FeaturesRelCompany-detailed": {
      "type": "object",
      "required": ["feature"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "feature": { "$ref": "#/definitions/Feature" }
      }
    },
    "FeaturesRelCompany-detailedCollection": {
      "type": "object",
      "required": ["feature"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "feature": { "$ref": "#/definitions/Feature" }
      }
    },
    "Friend": {
      "type": "object",
      "required": [
        "name",
        "description",
        "priority",
        "allow",
        "directConnectivity",
        "ddiIn",
        "t38Passthrough",
        "alwaysApplyTransformations",
        "rtpEncryption",
        "multiContact"
      ],
      "properties": {
        "name": { "maxLength": 65, "description": "", "type": "string" },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "transport": {
          "enum": ["udp", "tcp", "tls"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "ip": { "maxLength": 50, "description": "", "type": "string" },
        "port": { "minimum": 0, "description": "", "type": "integer" },
        "password": { "maxLength": 64, "description": "", "type": "string" },
        "priority": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "allow": {
          "default": "alaw",
          "maxLength": 200,
          "description": "",
          "example": "alaw",
          "type": "string"
        },
        "fromUser": { "maxLength": 190, "description": "", "type": "string" },
        "fromDomain": { "maxLength": 190, "description": "", "type": "string" },
        "directConnectivity": {
          "default": "yes",
          "enum": ["yes", "no", "intervpbx"],
          "maxLength": 20,
          "description": "",
          "example": "yes",
          "type": "string"
        },
        "ddiIn": {
          "default": "yes",
          "enum": ["yes", "no"],
          "description": "",
          "example": "yes",
          "type": "string"
        },
        "t38Passthrough": {
          "default": "no",
          "enum": ["yes", "no"],
          "description": "",
          "example": "no",
          "type": "string"
        },
        "alwaysApplyTransformations": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "rtpEncryption": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "multiContact": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "transformationRuleSet": { "description": "", "type": "integer" },
        "callAcl": { "description": "", "type": "integer" },
        "outgoingDdi": { "description": "", "type": "integer" },
        "language": { "description": "", "type": "integer" }
      }
    },
    "Friend-collection": {
      "type": "object",
      "required": ["name", "description", "priority", "directConnectivity"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 65, "description": "", "type": "string" },
        "domain": { "description": "", "type": "integer" },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "priority": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "directConnectivity": {
          "default": "yes",
          "enum": ["yes", "no", "intervpbx"],
          "maxLength": 20,
          "description": "",
          "example": "yes",
          "type": "string"
        }
      }
    },
    "Friend-detailed": {
      "type": "object",
      "required": [
        "name",
        "description",
        "priority",
        "allow",
        "directConnectivity",
        "ddiIn",
        "t38Passthrough",
        "alwaysApplyTransformations",
        "rtpEncryption",
        "multiContact"
      ],
      "properties": {
        "name": { "maxLength": 65, "description": "", "type": "string" },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "transport": {
          "enum": ["udp", "tcp", "tls"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "ip": { "maxLength": 50, "description": "", "type": "string" },
        "port": { "minimum": 0, "description": "", "type": "integer" },
        "password": { "maxLength": 64, "description": "", "type": "string" },
        "priority": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "allow": {
          "default": "alaw",
          "maxLength": 200,
          "description": "",
          "example": "alaw",
          "type": "string"
        },
        "fromUser": { "maxLength": 190, "description": "", "type": "string" },
        "fromDomain": { "maxLength": 190, "description": "", "type": "string" },
        "directConnectivity": {
          "default": "yes",
          "enum": ["yes", "no", "intervpbx"],
          "maxLength": 20,
          "description": "",
          "example": "yes",
          "type": "string"
        },
        "ddiIn": {
          "default": "yes",
          "enum": ["yes", "no"],
          "description": "",
          "example": "yes",
          "type": "string"
        },
        "t38Passthrough": {
          "default": "no",
          "enum": ["yes", "no"],
          "description": "",
          "example": "no",
          "type": "string"
        },
        "alwaysApplyTransformations": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "rtpEncryption": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "multiContact": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "transformationRuleSet": {
          "$ref": "#/definitions/TransformationRuleSet"
        },
        "callAcl": { "$ref": "#/definitions/CallAcl" },
        "outgoingDdi": { "$ref": "#/definitions/Ddi" },
        "language": { "$ref": "#/definitions/Language" }
      }
    },
    "Friend-status": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 65, "description": "", "type": "string" },
        "domainName": {
          "description": "Registration domain",
          "type": "string"
        },
        "status": {
          "description": "Registration status",
          "type": "array",
          "items": { "$ref": "#/definitions/RegistrationStatus" }
        }
      }
    },
    "FriendsPattern": {
      "type": "object",
      "required": ["name", "regExp", "friend"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "regExp": { "maxLength": 255, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "friend": { "description": "", "type": "integer" }
      }
    },
    "FriendsPattern-collection": {
      "type": "object",
      "required": ["name", "regExp"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "regExp": { "maxLength": 255, "description": "", "type": "string" }
      }
    },
    "FriendsPattern-detailed": {
      "type": "object",
      "required": ["name", "regExp", "friend"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "regExp": { "maxLength": 255, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "friend": { "$ref": "#/definitions/Friend" }
      }
    },
    "HolidayDate": {
      "type": "object",
      "required": ["name", "eventDate", "wholeDayEvent", "calendar"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "eventDate": { "format": "date", "description": "", "type": "string" },
        "wholeDayEvent": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "timeIn": { "format": "time", "description": "", "type": "string" },
        "timeOut": { "format": "time", "description": "", "type": "string" },
        "routeType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "calendar": { "description": "", "type": "integer" },
        "locution": { "description": "", "type": "integer" },
        "extension": { "description": "", "type": "integer" },
        "voicemail": { "description": "", "type": "integer" },
        "numberCountry": { "description": "", "type": "integer" }
      }
    },
    "HolidayDate-collection": {
      "type": "object",
      "required": ["name", "eventDate", "wholeDayEvent", "calendar"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "eventDate": { "format": "date", "description": "", "type": "string" },
        "locution": { "description": "", "type": "integer" },
        "wholeDayEvent": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "timeIn": { "format": "time", "description": "", "type": "string" },
        "timeOut": { "format": "time", "description": "", "type": "string" },
        "routeType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numberCountry": { "description": "", "type": "integer" },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "calendar": { "description": "", "type": "integer" },
        "extension": { "description": "", "type": "integer" },
        "voicemail": { "description": "", "type": "integer" }
      }
    },
    "HolidayDate-detailed": {
      "type": "object",
      "required": ["name", "eventDate", "wholeDayEvent", "calendar"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "eventDate": { "format": "date", "description": "", "type": "string" },
        "wholeDayEvent": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "timeIn": { "format": "time", "description": "", "type": "string" },
        "timeOut": { "format": "time", "description": "", "type": "string" },
        "routeType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "calendar": { "$ref": "#/definitions/Calendar" },
        "locution": { "$ref": "#/definitions/Locution" },
        "extension": { "$ref": "#/definitions/Extension" },
        "voicemail": { "$ref": "#/definitions/Voicemail" },
        "numberCountry": { "$ref": "#/definitions/Country" }
      }
    },
    "HuntGroup": {
      "type": "object",
      "required": [
        "name",
        "description",
        "strategy",
        "preventMissedCalls",
        "allowCallForwards"
      ],
      "properties": {
        "name": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "strategy": {
          "enum": ["ringAll", "linear", "roundRobin", "random"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "ringAllTimeout": { "description": "", "type": "integer" },
        "noAnswerTargetType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "noAnswerNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "preventMissedCalls": {
          "default": 1,
          "minimum": 0,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "allowCallForwards": {
          "default": 0,
          "minimum": 0,
          "description": "",
          "example": "0",
          "type": "integer"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "noAnswerLocution": { "description": "", "type": "integer" },
        "noAnswerExtension": { "description": "", "type": "integer" },
        "noAnswerVoicemail": { "description": "", "type": "integer" },
        "noAnswerNumberCountry": { "description": "", "type": "integer" }
      }
    },
    "HuntGroup-collection": {
      "type": "object",
      "required": ["name", "description", "strategy"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "strategy": {
          "enum": ["ringAll", "linear", "roundRobin", "random"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        }
      }
    },
    "HuntGroup-detailed": {
      "type": "object",
      "required": [
        "name",
        "description",
        "strategy",
        "preventMissedCalls",
        "allowCallForwards"
      ],
      "properties": {
        "name": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "strategy": {
          "enum": ["ringAll", "linear", "roundRobin", "random"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "ringAllTimeout": { "description": "", "type": "integer" },
        "noAnswerTargetType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "noAnswerNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "preventMissedCalls": {
          "default": 1,
          "minimum": 0,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "allowCallForwards": {
          "default": 0,
          "minimum": 0,
          "description": "",
          "example": "0",
          "type": "integer"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "noAnswerLocution": { "$ref": "#/definitions/Locution" },
        "noAnswerExtension": { "$ref": "#/definitions/Extension" },
        "noAnswerVoicemail": { "$ref": "#/definitions/Voicemail" },
        "noAnswerNumberCountry": { "$ref": "#/definitions/Country" }
      }
    },
    "HuntGroupMember": {
      "type": "object",
      "properties": {
        "timeoutTime": { "description": "", "type": "integer" },
        "priority": { "description": "", "type": "integer" },
        "routeType": {
          "enum": ["number", "user"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "huntGroup": { "description": "", "type": "integer" },
        "user": { "description": "", "type": "integer" },
        "numberCountry": { "description": "", "type": "integer" }
      },
      "required": ["routeType", "huntGroup", "user"]
    },
    "HuntGroupMember-detailed": {
      "type": "object",
      "properties": {
        "timeoutTime": { "description": "", "type": "integer" },
        "priority": { "description": "", "type": "integer" },
        "routeType": {
          "enum": ["number", "user"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "huntGroup": { "$ref": "#/definitions/HuntGroup" },
        "user": { "$ref": "#/definitions/User" },
        "numberCountry": { "$ref": "#/definitions/Country" }
      },
      "required": ["routeType", "huntGroup", "user"]
    },
    "HuntGroupMember-detailedCollection": {
      "type": "object",
      "properties": {
        "timeoutTime": { "description": "", "type": "integer" },
        "priority": { "description": "", "type": "integer" },
        "routeType": {
          "enum": ["number", "user"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "huntGroup": { "$ref": "#/definitions/HuntGroup" },
        "user": { "$ref": "#/definitions/User" },
        "numberCountry": { "$ref": "#/definitions/Country" }
      },
      "required": ["routeType", "huntGroup", "user"]
    },
    "Invoice-collection": {
      "type": "object",
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "number": { "maxLength": 30, "description": "", "type": "string" },
        "inDate": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "outDate": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "taxRate": { "format": "float", "description": "", "type": "number" },
        "totalWithTax": {
          "format": "float",
          "description": "",
          "type": "number"
        },
        "pdf": { "$ref": "#/definitions/Invoice_Pdf" },
        "currency": { "description": "Invoice currency", "type": "string" }
      }
    },
    "Invoicing": {
      "type": "object",
      "required": [
        "nif",
        "postalAddress",
        "postalCode",
        "town",
        "province",
        "countryName"
      ],
      "properties": {
        "nif": {
          "default": "",
          "maxLength": 25,
          "description": "",
          "example": "",
          "type": "string"
        },
        "postalAddress": {
          "default": "",
          "maxLength": 255,
          "description": "",
          "example": "",
          "type": "string"
        },
        "postalCode": {
          "default": "",
          "maxLength": 10,
          "description": "",
          "example": "",
          "type": "string"
        },
        "town": {
          "default": "",
          "maxLength": 255,
          "description": "",
          "example": "",
          "type": "string"
        },
        "province": {
          "default": "",
          "maxLength": 255,
          "description": "",
          "example": "",
          "type": "string"
        },
        "countryName": {
          "default": "",
          "maxLength": 255,
          "description": "",
          "example": "",
          "type": "string"
        }
      }
    },
    "Ivr": {
      "type": "object",
      "required": ["name", "timeout", "maxDigits", "allowExtensions"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "timeout": { "minimum": 0, "description": "", "type": "integer" },
        "maxDigits": { "minimum": 0, "description": "", "type": "integer" },
        "allowExtensions": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "noInputRouteType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "noInputNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "errorRouteType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "errorNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "welcomeLocution": { "description": "", "type": "integer" },
        "noInputLocution": { "description": "", "type": "integer" },
        "errorLocution": { "description": "", "type": "integer" },
        "successLocution": { "description": "", "type": "integer" },
        "noInputExtension": { "description": "", "type": "integer" },
        "errorExtension": { "description": "", "type": "integer" },
        "noInputVoicemail": { "description": "", "type": "integer" },
        "errorVoicemail": { "description": "", "type": "integer" },
        "noInputNumberCountry": { "description": "", "type": "integer" },
        "errorNumberCountry": { "description": "", "type": "integer" }
      }
    },
    "Ivr-collection": {
      "type": "object",
      "required": ["name", "timeout", "allowExtensions"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "timeout": { "minimum": 0, "description": "", "type": "integer" },
        "allowExtensions": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "noInputRouteType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "noInputNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "errorRouteType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "errorNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "noInputLocution": { "description": "", "type": "integer" },
        "errorLocution": { "description": "", "type": "integer" },
        "successLocution": { "description": "", "type": "integer" },
        "noInputExtension": { "description": "", "type": "integer" },
        "errorExtension": { "description": "", "type": "integer" },
        "noInputVoicemail": { "description": "", "type": "integer" },
        "errorVoicemail": { "description": "", "type": "integer" },
        "noInputNumberCountry": { "description": "", "type": "integer" },
        "errorNumberCountry": { "description": "", "type": "integer" }
      }
    },
    "Ivr-detailed": {
      "type": "object",
      "required": ["name", "timeout", "maxDigits", "allowExtensions"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "timeout": { "minimum": 0, "description": "", "type": "integer" },
        "maxDigits": { "minimum": 0, "description": "", "type": "integer" },
        "allowExtensions": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "noInputRouteType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "noInputNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "errorRouteType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "errorNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "welcomeLocution": { "$ref": "#/definitions/Locution" },
        "noInputLocution": { "$ref": "#/definitions/Locution" },
        "errorLocution": { "$ref": "#/definitions/Locution" },
        "successLocution": { "$ref": "#/definitions/Locution" },
        "noInputExtension": { "$ref": "#/definitions/Extension" },
        "errorExtension": { "$ref": "#/definitions/Extension" },
        "noInputVoicemail": { "$ref": "#/definitions/Voicemail" },
        "errorVoicemail": { "$ref": "#/definitions/Voicemail" },
        "noInputNumberCountry": { "$ref": "#/definitions/Country" },
        "errorNumberCountry": { "$ref": "#/definitions/Country" },
        "excludedExtensionIds": {
          "description": "Excluded extensions",
          "type": "array",
          "items": { "type": "integer" }
        }
      }
    },
    "Ivr-withExcludedExtensions": {
      "type": "object",
      "required": ["name", "timeout", "maxDigits", "allowExtensions"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "timeout": { "minimum": 0, "description": "", "type": "integer" },
        "maxDigits": { "minimum": 0, "description": "", "type": "integer" },
        "allowExtensions": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "noInputRouteType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "noInputNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "errorRouteType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "errorNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "welcomeLocution": { "$ref": "#/definitions/Locution" },
        "noInputLocution": { "$ref": "#/definitions/Locution" },
        "errorLocution": { "$ref": "#/definitions/Locution" },
        "successLocution": { "$ref": "#/definitions/Locution" },
        "noInputExtension": { "$ref": "#/definitions/Extension" },
        "errorExtension": { "$ref": "#/definitions/Extension" },
        "noInputVoicemail": { "$ref": "#/definitions/Voicemail" },
        "errorVoicemail": { "$ref": "#/definitions/Voicemail" },
        "noInputNumberCountry": { "$ref": "#/definitions/Country" },
        "errorNumberCountry": { "$ref": "#/definitions/Country" },
        "excludedExtensionIds": {
          "description": "Excluded extensions",
          "type": "array",
          "items": { "type": "integer" }
        }
      }
    },
    "IvrEntry": {
      "type": "object",
      "required": ["entry", "routeType", "ivr"],
      "properties": {
        "entry": { "maxLength": 40, "description": "", "type": "string" },
        "displayName": { "maxLength": 50, "description": "", "type": "string" },
        "routeType": {
          "enum": ["number", "extension", "voicemail", "conditional"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "ivr": { "description": "", "type": "integer" },
        "welcomeLocution": { "description": "", "type": "integer" },
        "extension": { "description": "", "type": "integer" },
        "voicemail": { "description": "", "type": "integer" },
        "conditionalRoute": { "description": "", "type": "integer" },
        "numberCountry": { "description": "", "type": "integer" }
      }
    },
    "IvrEntry-collection": {
      "type": "object",
      "required": ["ivr", "entry", "routeType"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "ivr": { "description": "", "type": "integer" },
        "entry": { "maxLength": 40, "description": "", "type": "string" },
        "displayName": { "maxLength": 50, "description": "", "type": "string" },
        "welcomeLocution": { "description": "", "type": "integer" },
        "routeType": {
          "enum": ["number", "extension", "voicemail", "conditional"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numberCountry": { "description": "", "type": "integer" },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "extension": { "description": "", "type": "integer" },
        "voicemail": { "description": "", "type": "integer" },
        "conditionalRoute": { "description": "", "type": "integer" }
      }
    },
    "IvrEntry-detailed": {
      "type": "object",
      "required": ["entry", "routeType", "ivr"],
      "properties": {
        "entry": { "maxLength": 40, "description": "", "type": "string" },
        "displayName": { "maxLength": 50, "description": "", "type": "string" },
        "routeType": {
          "enum": ["number", "extension", "voicemail", "conditional"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "numberValue": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "ivr": { "$ref": "#/definitions/Ivr" },
        "welcomeLocution": { "$ref": "#/definitions/Locution" },
        "extension": { "$ref": "#/definitions/Extension" },
        "voicemail": { "$ref": "#/definitions/Voicemail" },
        "conditionalRoute": { "$ref": "#/definitions/ConditionalRoute" },
        "numberCountry": { "$ref": "#/definitions/Country" }
      }
    },
    "IvrExcludedExtension": {
      "type": "object",
      "required": ["ivr", "extension"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "ivr": { "description": "", "type": "integer" },
        "extension": { "description": "", "type": "integer" }
      }
    },
    "IvrExcludedExtension-detailed": {
      "type": "object",
      "required": ["ivr", "extension"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "ivr": { "$ref": "#/definitions/Ivr" },
        "extension": { "$ref": "#/definitions/Extension" }
      }
    },
    "IvrExcludedExtension-detailedCollection": {
      "type": "object",
      "required": ["ivr", "extension"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "ivr": { "$ref": "#/definitions/Ivr" },
        "extension": { "$ref": "#/definitions/Extension" }
      }
    },
    "Language": {
      "type": "object",
      "required": ["iden"],
      "properties": {
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/Language_Name" }
      }
    },
    "Language-collection": {
      "type": "object",
      "required": ["iden"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "name": { "$ref": "#/definitions/Language_Name" }
      }
    },
    "Language-detailed": {
      "type": "object",
      "required": ["iden"],
      "properties": {
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/Language_Name" }
      }
    },
    "Language_Name": {
      "type": "object",
      "required": ["en", "es", "ca", "it"],
      "properties": {
        "en": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "es": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "ca": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "it": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        }
      }
    },
    "Location": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "description": {
          "maxLength": 500,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "Location-collection": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "description": { "maxLength": 500, "description": "", "type": "string" }
      }
    },
    "Location-detailed": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "description": {
          "maxLength": 500,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "Locution": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "status": {
          "enum": ["pending", "encoding", "ready", "error"],
          "maxLength": 20,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "encodedFile": { "$ref": "#/definitions/Locution_EncodedFile" },
        "originalFile": { "$ref": "#/definitions/Locution_OriginalFile" }
      }
    },
    "Locution-collection": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "status": {
          "enum": ["pending", "encoding", "ready", "error"],
          "maxLength": 20,
          "description": "",
          "type": "string"
        },
        "originalFile": { "$ref": "#/definitions/Locution_OriginalFile" }
      }
    },
    "Locution-detailed": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "status": {
          "enum": ["pending", "encoding", "ready", "error"],
          "maxLength": 20,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "encodedFile": { "$ref": "#/definitions/Locution_EncodedFile" },
        "originalFile": { "$ref": "#/definitions/Locution_OriginalFile" }
      }
    },
    "Locution_EncodedFile": {
      "type": "object",
      "properties": {
        "fileSize": { "minimum": 0, "description": "", "type": "integer" },
        "mimeType": { "maxLength": 80, "description": "", "type": "string" },
        "baseName": { "maxLength": 255, "description": "", "type": "string" }
      }
    },
    "Locution_OriginalFile": {
      "type": "object",
      "properties": {
        "fileSize": { "minimum": 0, "description": "", "type": "integer" },
        "mimeType": { "maxLength": 80, "description": "", "type": "string" },
        "baseName": { "maxLength": 255, "description": "", "type": "string" }
      }
    },
    "MatchList": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "generic": {
          "readOnly": true,
          "description": "Generic Match List",
          "type": "boolean"
        }
      }
    },
    "MatchList-collection": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "generic": {
          "readOnly": true,
          "description": "Generic Match List",
          "type": "boolean"
        }
      }
    },
    "MatchList-detailed": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "generic": {
          "readOnly": true,
          "description": "Generic Match List",
          "type": "boolean"
        }
      }
    },
    "MatchListPattern": {
      "type": "object",
      "properties": {
        "description": { "maxLength": 55, "description": "", "type": "string" },
        "type": {
          "enum": ["number", "regexp"],
          "maxLength": 10,
          "description": "",
          "type": "string"
        },
        "regexp": { "maxLength": 255, "description": "", "type": "string" },
        "numbervalue": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "matchList": { "description": "", "type": "integer" },
        "numberCountry": { "description": "", "type": "integer" }
      },
      "required": ["type", "matchList"]
    },
    "MatchListPattern-collection": {
      "type": "object",
      "required": ["type", "matchList"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "description": { "maxLength": 55, "description": "", "type": "string" },
        "type": {
          "enum": ["number", "regexp"],
          "maxLength": 10,
          "description": "",
          "type": "string"
        },
        "regexp": { "maxLength": 255, "description": "", "type": "string" },
        "numbervalue": { "maxLength": 25, "description": "", "type": "string" },
        "numberCountry": { "description": "", "type": "integer" },
        "matchList": { "description": "", "type": "integer" }
      }
    },
    "MatchListPattern-detailed": {
      "type": "object",
      "properties": {
        "description": { "maxLength": 55, "description": "", "type": "string" },
        "type": {
          "enum": ["number", "regexp"],
          "maxLength": 10,
          "description": "",
          "type": "string"
        },
        "regexp": { "maxLength": 255, "description": "", "type": "string" },
        "numbervalue": { "maxLength": 25, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "matchList": { "$ref": "#/definitions/MatchList" },
        "numberCountry": { "$ref": "#/definitions/Country" }
      },
      "required": ["type", "matchList"]
    },
    "MetadataFile": {
      "type": "object",
      "properties": {
        "fileSize": { "minimum": 0, "description": "", "type": "integer" },
        "mimeType": { "maxLength": 80, "description": "", "type": "string" },
        "baseName": { "maxLength": 255, "description": "", "type": "string" }
      }
    },
    "MusicOnHold": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "status": {
          "enum": ["pending", "encoding", "ready", "error"],
          "maxLength": 20,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "originalFile": { "$ref": "#/definitions/MusicOnHold_OriginalFile" },
        "encodedFile": { "$ref": "#/definitions/MusicOnHold_EncodedFile" }
      }
    },
    "MusicOnHold-collection": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "status": {
          "enum": ["pending", "encoding", "ready", "error"],
          "maxLength": 20,
          "description": "",
          "type": "string"
        },
        "originalFile": { "$ref": "#/definitions/MusicOnHold_OriginalFile" }
      }
    },
    "MusicOnHold-detailed": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "status": {
          "enum": ["pending", "encoding", "ready", "error"],
          "maxLength": 20,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "originalFile": { "$ref": "#/definitions/MusicOnHold_OriginalFile" },
        "encodedFile": { "$ref": "#/definitions/MusicOnHold_EncodedFile" }
      }
    },
    "MusicOnHold_EncodedFile": {
      "type": "object",
      "properties": {
        "fileSize": { "minimum": 0, "description": "", "type": "integer" },
        "mimeType": { "maxLength": 80, "description": "", "type": "string" },
        "baseName": { "maxLength": 255, "description": "", "type": "string" }
      }
    },
    "MusicOnHold_OriginalFile": {
      "type": "object",
      "properties": {
        "fileSize": { "minimum": 0, "description": "", "type": "integer" },
        "mimeType": { "maxLength": 80, "description": "", "type": "string" },
        "baseName": { "maxLength": 255, "description": "", "type": "string" }
      }
    },
    "NotificationTemplate": {
      "type": "object",
      "required": ["name", "type"],
      "properties": {
        "name": { "maxLength": 55, "description": "", "type": "string" },
        "type": {
          "enum": [
            "voicemail",
            "fax",
            "limit",
            "lowbalance",
            "invoice",
            "callCsv",
            "maxDailyUsage"
          ],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "OutgoingDdiRule": {
      "type": "object",
      "required": ["name", "defaultAction"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "defaultAction": {
          "enum": ["keep", "force"],
          "maxLength": 10,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "forcedDdi": { "description": "", "type": "integer" }
      }
    },
    "OutgoingDdiRule-collection": {
      "type": "object",
      "required": ["name", "defaultAction"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "defaultAction": {
          "enum": ["keep", "force"],
          "maxLength": 10,
          "description": "",
          "type": "string"
        },
        "forcedDdi": { "description": "", "type": "integer" }
      }
    },
    "OutgoingDdiRule-detailed": {
      "type": "object",
      "required": ["name", "defaultAction"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "defaultAction": {
          "enum": ["keep", "force"],
          "maxLength": 10,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "forcedDdi": { "$ref": "#/definitions/Ddi" }
      }
    },
    "OutgoingDdiRulesPattern": {
      "type": "object",
      "required": ["type", "action", "priority", "outgoingDdiRule"],
      "properties": {
        "type": {
          "enum": ["prefix", "destination"],
          "maxLength": 20,
          "description": "",
          "type": "string"
        },
        "prefix": { "maxLength": 10, "description": "", "type": "string" },
        "action": {
          "enum": ["keep", "force"],
          "maxLength": 10,
          "description": "",
          "type": "string"
        },
        "priority": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "outgoingDdiRule": { "description": "", "type": "integer" },
        "matchList": { "description": "", "type": "integer" },
        "forcedDdi": { "description": "", "type": "integer" }
      }
    },
    "OutgoingDdiRulesPattern-detailed": {
      "type": "object",
      "required": ["type", "action", "priority", "outgoingDdiRule"],
      "properties": {
        "type": {
          "enum": ["prefix", "destination"],
          "maxLength": 20,
          "description": "",
          "type": "string"
        },
        "prefix": { "maxLength": 10, "description": "", "type": "string" },
        "action": {
          "enum": ["keep", "force"],
          "maxLength": 10,
          "description": "",
          "type": "string"
        },
        "priority": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "outgoingDdiRule": { "$ref": "#/definitions/OutgoingDdiRule" },
        "matchList": { "$ref": "#/definitions/MatchList" },
        "forcedDdi": { "$ref": "#/definitions/Ddi" }
      }
    },
    "OutgoingDdiRulesPattern-detailedCollection": {
      "type": "object",
      "required": ["type", "action", "priority", "outgoingDdiRule"],
      "properties": {
        "type": {
          "enum": ["prefix", "destination"],
          "maxLength": 20,
          "description": "",
          "type": "string"
        },
        "prefix": { "maxLength": 10, "description": "", "type": "string" },
        "action": {
          "enum": ["keep", "force"],
          "maxLength": 10,
          "description": "",
          "type": "string"
        },
        "priority": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "outgoingDdiRule": { "$ref": "#/definitions/OutgoingDdiRule" },
        "matchList": { "$ref": "#/definitions/MatchList" },
        "forcedDdi": { "$ref": "#/definitions/Ddi" }
      }
    },
    "PickUpGroup": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "PickUpGroup-collection": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "userIds": {
          "description": "User ids",
          "type": "array",
          "items": { "type": "integer" }
        }
      }
    },
    "PickUpGroup-detailed": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "userIds": {
          "description": "User ids",
          "type": "array",
          "items": { "type": "integer" }
        }
      }
    },
    "PickUpGroup-withUsers": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "userIds": {
          "description": "User ids",
          "type": "array",
          "items": { "type": "integer" }
        }
      }
    },
    "PickUpRelUser": {
      "type": "object",
      "required": ["pickUpGroup", "user"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "pickUpGroup": { "description": "", "type": "integer" },
        "user": { "description": "", "type": "integer" }
      }
    },
    "PickUpRelUser-detailed": {
      "type": "object",
      "required": ["pickUpGroup", "user"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "pickUpGroup": { "$ref": "#/definitions/PickUpGroup" },
        "user": { "$ref": "#/definitions/User" }
      }
    },
    "PickUpRelUser-detailedCollection": {
      "type": "object",
      "required": ["pickUpGroup", "user"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "pickUpGroup": { "$ref": "#/definitions/PickUpGroup" },
        "user": { "$ref": "#/definitions/User" }
      }
    },
    "Profile": {
      "type": "object",
      "properties": {
        "restricted": { "description": "", "type": "boolean" },
        "vpbx": { "description": "", "type": "boolean" },
        "residential": { "description": "", "type": "boolean" },
        "retail": { "description": "", "type": "boolean" },
        "wholesale": { "description": "", "type": "boolean" },
        "billingInfo": { "description": "", "type": "boolean" },
        "acls": {
          "description": "",
          "type": "array",
          "items": { "$ref": "#/definitions/ProfileAcl" }
        },
        "features": {
          "description": "",
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ProfileAcl": {
      "type": "object",
      "properties": {
        "iden": { "description": "", "type": "string" },
        "create": { "description": "", "type": "boolean" },
        "read": { "description": "", "type": "boolean" },
        "update": { "description": "", "type": "boolean" },
        "delete": { "description": "", "type": "boolean" }
      }
    },
    "Queue": {
      "type": "object",
      "properties": {
        "name": { "maxLength": 128, "description": "", "type": "string" },
        "displayName": { "maxLength": 50, "description": "", "type": "string" },
        "maxWaitTime": { "description": "", "type": "integer" },
        "timeoutTargetType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "timeoutNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "maxlen": { "description": "", "type": "integer" },
        "fullTargetType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "fullNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "periodicAnnounceFrequency": { "description": "", "type": "integer" },
        "announcePosition": {
          "default": "no",
          "enum": ["yes", "no"],
          "maxLength": 10,
          "description": "",
          "example": "no",
          "type": "string"
        },
        "announceFrequency": { "description": "", "type": "integer" },
        "memberCallRest": { "description": "", "type": "integer" },
        "memberCallTimeout": { "description": "", "type": "integer" },
        "strategy": {
          "enum": [
            "ringall",
            "leastrecent",
            "fewestcalls",
            "random",
            "rrmemory",
            "linear",
            "wrandom",
            "rrordered"
          ],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "weight": { "description": "", "type": "integer" },
        "preventMissedCalls": {
          "default": 1,
          "minimum": 0,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "periodicAnnounceLocution": { "description": "", "type": "integer" },
        "timeoutLocution": { "description": "", "type": "integer" },
        "timeoutExtension": { "description": "", "type": "integer" },
        "timeoutVoicemail": { "description": "", "type": "integer" },
        "fullLocution": { "description": "", "type": "integer" },
        "fullExtension": { "description": "", "type": "integer" },
        "fullVoicemail": { "description": "", "type": "integer" },
        "timeoutNumberCountry": { "description": "", "type": "integer" },
        "fullNumberCountry": { "description": "", "type": "integer" }
      },
      "required": ["preventMissedCalls"]
    },
    "Queue-collection": {
      "type": "object",
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 128, "description": "", "type": "string" },
        "weight": { "description": "", "type": "integer" },
        "strategy": {
          "enum": [
            "ringall",
            "leastrecent",
            "fewestcalls",
            "random",
            "rrmemory",
            "linear",
            "wrandom",
            "rrordered"
          ],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "memberCallTimeout": { "description": "", "type": "integer" },
        "memberCallRest": { "description": "", "type": "integer" },
        "maxWaitTime": { "description": "", "type": "integer" },
        "maxlen": { "description": "", "type": "integer" }
      }
    },
    "Queue-detailed": {
      "type": "object",
      "properties": {
        "name": { "maxLength": 128, "description": "", "type": "string" },
        "displayName": { "maxLength": 50, "description": "", "type": "string" },
        "maxWaitTime": { "description": "", "type": "integer" },
        "timeoutTargetType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "timeoutNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "maxlen": { "description": "", "type": "integer" },
        "fullTargetType": {
          "enum": ["number", "extension", "voicemail"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "fullNumberValue": {
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "periodicAnnounceFrequency": { "description": "", "type": "integer" },
        "announcePosition": {
          "default": "no",
          "enum": ["yes", "no"],
          "maxLength": 10,
          "description": "",
          "example": "no",
          "type": "string"
        },
        "announceFrequency": { "description": "", "type": "integer" },
        "memberCallRest": { "description": "", "type": "integer" },
        "memberCallTimeout": { "description": "", "type": "integer" },
        "strategy": {
          "enum": [
            "ringall",
            "leastrecent",
            "fewestcalls",
            "random",
            "rrmemory",
            "linear",
            "wrandom",
            "rrordered"
          ],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "weight": { "description": "", "type": "integer" },
        "preventMissedCalls": {
          "default": 1,
          "minimum": 0,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "periodicAnnounceLocution": { "$ref": "#/definitions/Locution" },
        "timeoutLocution": { "$ref": "#/definitions/Locution" },
        "timeoutExtension": { "$ref": "#/definitions/Extension" },
        "timeoutVoicemail": { "$ref": "#/definitions/Voicemail" },
        "fullLocution": { "$ref": "#/definitions/Locution" },
        "fullExtension": { "$ref": "#/definitions/Extension" },
        "fullVoicemail": { "$ref": "#/definitions/Voicemail" },
        "timeoutNumberCountry": { "$ref": "#/definitions/Country" },
        "fullNumberCountry": { "$ref": "#/definitions/Country" }
      },
      "required": ["preventMissedCalls"]
    },
    "QueueMember": {
      "type": "object",
      "properties": {
        "penalty": { "description": "", "type": "integer" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "queue": { "description": "", "type": "integer" },
        "user": { "description": "", "type": "integer" }
      },
      "required": ["queue", "user"]
    },
    "QueueMember-detailed": {
      "type": "object",
      "properties": {
        "penalty": { "description": "", "type": "integer" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "queue": { "$ref": "#/definitions/Queue" },
        "user": { "$ref": "#/definitions/User" }
      },
      "required": ["queue", "user"]
    },
    "QueueMember-detailedCollection": {
      "type": "object",
      "properties": {
        "penalty": { "description": "", "type": "integer" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "queue": { "$ref": "#/definitions/Queue" },
        "user": { "$ref": "#/definitions/User" }
      },
      "required": ["queue", "user"]
    },
    "RatingPlanGroup": {
      "type": "object",
      "properties": {
        "id": { "readOnly": true, "description": "", "type": "integer" },
        "name": { "$ref": "#/definitions/RatingPlanGroup_Name" },
        "description": { "$ref": "#/definitions/RatingPlanGroup_Description" }
      }
    },
    "RatingPlanGroup-collection": {
      "type": "object",
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/RatingPlanGroup_Name" }
      }
    },
    "RatingPlanGroup-detailed": {
      "type": "object",
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/RatingPlanGroup_Name" },
        "description": { "$ref": "#/definitions/RatingPlanGroup_Description" }
      }
    },
    "RatingPlanGroup_Description": {
      "type": "object",
      "required": ["en", "es", "ca", "it"],
      "properties": {
        "en": { "maxLength": 255, "description": "", "type": "string" },
        "es": { "maxLength": 255, "description": "", "type": "string" },
        "ca": { "maxLength": 255, "description": "", "type": "string" },
        "it": { "maxLength": 255, "description": "", "type": "string" }
      }
    },
    "RatingPlanGroup_Name": {
      "type": "object",
      "required": ["en", "es", "ca", "it"],
      "properties": {
        "en": { "maxLength": 55, "description": "", "type": "string" },
        "es": { "maxLength": 55, "description": "", "type": "string" },
        "ca": { "maxLength": 55, "description": "", "type": "string" },
        "it": { "maxLength": 55, "description": "", "type": "string" }
      }
    },
    "RatingPlanPrices": {
      "type": "object",
      "properties": {
        "ratingPlan": { "description": "", "type": "string" },
        "name": { "description": "", "type": "string" },
        "prefix": { "description": "", "type": "string" },
        "connectFee": { "description": "", "type": "number" },
        "cost": { "description": "", "type": "number" },
        "rateIncrement": { "description": "", "type": "string" },
        "groupIntervalStart": { "description": "", "type": "string" },
        "timeIn": { "description": "", "type": "string" },
        "days": { "description": "", "type": "string" }
      }
    },
    "RatingProfile-collection": {
      "type": "object",
      "required": ["activationTime", "ratingPlanGroup"],
      "properties": {
        "activationTime": {
          "default": "CURRENT_TIMESTAMP",
          "format": "date-time",
          "description": "",
          "example": "CURRENT_TIMESTAMP",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "ratingPlanGroup": { "description": "", "type": "integer" },
        "routingTag": { "description": "", "type": "integer" }
      }
    },
    "RatingProfile-detailed": {
      "type": "object",
      "required": ["activationTime", "ratingPlanGroup"],
      "properties": {
        "activationTime": {
          "default": "CURRENT_TIMESTAMP",
          "format": "date-time",
          "description": "",
          "example": "CURRENT_TIMESTAMP",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "ratingPlanGroup": { "$ref": "#/definitions/RatingPlanGroup" },
        "routingTag": { "$ref": "#/definitions/RoutingTag" }
      }
    },
    "Recording-collection": {
      "type": "object",
      "properties": {
        "callid": { "maxLength": 255, "description": "", "type": "string" },
        "calldate": {
          "default": "CURRENT_TIMESTAMP",
          "format": "date-time",
          "description": "",
          "example": "CURRENT_TIMESTAMP",
          "type": "string"
        },
        "type": {
          "default": "ddi",
          "enum": ["ondemand", "ddi"],
          "maxLength": 25,
          "description": "",
          "example": "ddi",
          "type": "string"
        },
        "duration": {
          "default": 0,
          "format": "float",
          "description": "",
          "example": "0",
          "type": "number"
        },
        "caller": { "maxLength": 128, "description": "", "type": "string" },
        "callee": { "maxLength": 128, "description": "", "type": "string" },
        "recorder": { "maxLength": 128, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true }
      },
      "required": ["calldate", "type", "duration"]
    },
    "Recording-detailed": {
      "type": "object",
      "properties": {
        "callid": { "maxLength": 255, "description": "", "type": "string" },
        "calldate": {
          "default": "CURRENT_TIMESTAMP",
          "format": "date-time",
          "description": "",
          "example": "CURRENT_TIMESTAMP",
          "type": "string"
        },
        "type": {
          "default": "ddi",
          "enum": ["ondemand", "ddi"],
          "maxLength": 25,
          "description": "",
          "example": "ddi",
          "type": "string"
        },
        "duration": {
          "default": 0,
          "format": "float",
          "description": "",
          "example": "0",
          "type": "number"
        },
        "caller": { "maxLength": 128, "description": "", "type": "string" },
        "callee": { "maxLength": 128, "description": "", "type": "string" },
        "recorder": { "maxLength": 128, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "recordedFile": { "$ref": "#/definitions/Recording_RecordedFile" }
      },
      "required": ["calldate", "type", "duration"]
    },
    "Recording_RecordedFile": {
      "type": "object",
      "properties": {
        "fileSize": { "minimum": 0, "description": "", "type": "integer" },
        "mimeType": { "maxLength": 80, "description": "", "type": "string" },
        "baseName": { "maxLength": 255, "description": "", "type": "string" }
      }
    },
    "RegistrationStatus": {
      "type": "object",
      "properties": {
        "contact": { "description": "", "type": "string" },
        "publicContact": { "description": "", "type": "boolean" },
        "received": { "description": "", "type": "string" },
        "publicReceived": { "description": "", "type": "boolean" },
        "expires": { "description": "", "type": "string" },
        "userAgent": { "description": "", "type": "string" }
      }
    },
    "ResidentialDevice": {
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "maxLength": 65,
          "description": "",
          "type": "string"
        },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "transport": {
          "enum": ["udp", "tcp", "tls"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "ip": { "maxLength": 50, "description": "", "type": "string" },
        "port": { "minimum": 0, "description": "", "type": "integer" },
        "password": { "maxLength": 64, "description": "", "type": "string" },
        "allow": {
          "default": "alaw",
          "maxLength": 200,
          "description": "",
          "example": "alaw",
          "type": "string"
        },
        "fromDomain": { "maxLength": 190, "description": "", "type": "string" },
        "directConnectivity": {
          "default": "yes",
          "enum": ["yes", "no"],
          "description": "",
          "example": "yes",
          "type": "string"
        },
        "ddiIn": {
          "default": "yes",
          "enum": ["yes", "no"],
          "description": "",
          "example": "yes",
          "type": "string"
        },
        "maxCalls": {
          "default": 1,
          "minimum": 0,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "t38Passthrough": {
          "default": "no",
          "enum": ["yes", "no"],
          "description": "",
          "example": "no",
          "type": "string"
        },
        "rtpEncryption": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "multiContact": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "transformationRuleSet": { "description": "", "type": "integer" },
        "outgoingDdi": { "description": "", "type": "integer" },
        "language": { "description": "", "type": "integer" }
      },
      "required": [
        "description",
        "allow",
        "directConnectivity",
        "ddiIn",
        "maxCalls",
        "t38Passthrough",
        "rtpEncryption",
        "multiContact"
      ]
    },
    "ResidentialDevice-collection": {
      "type": "object",
      "required": ["description", "directConnectivity"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": {
          "readOnly": true,
          "maxLength": 65,
          "description": "",
          "type": "string"
        },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "domainName": {
          "description": "Registration domain",
          "type": "string"
        },
        "directConnectivity": {
          "default": "yes",
          "enum": ["yes", "no"],
          "description": "",
          "example": "yes",
          "type": "string"
        },
        "status": {
          "description": "Registration status",
          "type": "array",
          "items": { "$ref": "#/definitions/RegistrationStatus" }
        }
      }
    },
    "ResidentialDevice-detailed": {
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "maxLength": 65,
          "description": "",
          "type": "string"
        },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "transport": {
          "enum": ["udp", "tcp", "tls"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "ip": { "maxLength": 50, "description": "", "type": "string" },
        "port": { "minimum": 0, "description": "", "type": "integer" },
        "password": { "maxLength": 64, "description": "", "type": "string" },
        "allow": {
          "default": "alaw",
          "maxLength": 200,
          "description": "",
          "example": "alaw",
          "type": "string"
        },
        "fromDomain": { "maxLength": 190, "description": "", "type": "string" },
        "directConnectivity": {
          "default": "yes",
          "enum": ["yes", "no"],
          "description": "",
          "example": "yes",
          "type": "string"
        },
        "ddiIn": {
          "default": "yes",
          "enum": ["yes", "no"],
          "description": "",
          "example": "yes",
          "type": "string"
        },
        "maxCalls": {
          "default": 1,
          "minimum": 0,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "t38Passthrough": {
          "default": "no",
          "enum": ["yes", "no"],
          "description": "",
          "example": "no",
          "type": "string"
        },
        "rtpEncryption": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "multiContact": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "transformationRuleSet": {
          "$ref": "#/definitions/TransformationRuleSet"
        },
        "outgoingDdi": { "$ref": "#/definitions/Ddi" },
        "language": { "$ref": "#/definitions/Language" }
      },
      "required": [
        "description",
        "allow",
        "directConnectivity",
        "ddiIn",
        "maxCalls",
        "t38Passthrough",
        "rtpEncryption",
        "multiContact"
      ]
    },
    "ResidentialDevice-status": {
      "type": "object",
      "required": ["directConnectivity"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": {
          "readOnly": true,
          "maxLength": 65,
          "description": "",
          "type": "string"
        },
        "domainName": {
          "description": "Registration domain",
          "type": "string"
        },
        "directConnectivity": {
          "default": "yes",
          "enum": ["yes", "no"],
          "description": "",
          "example": "yes",
          "type": "string"
        },
        "status": {
          "description": "Registration status",
          "type": "array",
          "items": { "$ref": "#/definitions/RegistrationStatus" }
        }
      }
    },
    "RetailAccount": {
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "maxLength": 65,
          "description": "",
          "type": "string"
        },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "transport": {
          "enum": ["udp", "tcp", "tls"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "ip": { "maxLength": 50, "description": "", "type": "string" },
        "port": { "minimum": 0, "description": "", "type": "integer" },
        "password": { "maxLength": 64, "description": "", "type": "string" },
        "directConnectivity": {
          "default": "yes",
          "enum": ["yes", "no"],
          "description": "",
          "example": "yes",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "transformationRuleSet": { "description": "", "type": "integer" },
        "outgoingDdi": { "description": "", "type": "integer" }
      },
      "required": ["description", "directConnectivity"]
    },
    "RetailAccount-collection": {
      "type": "object",
      "required": ["directConnectivity", "description"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": {
          "readOnly": true,
          "maxLength": 65,
          "description": "",
          "type": "string"
        },
        "domainName": {
          "description": "Registration domain",
          "type": "string"
        },
        "directConnectivity": {
          "default": "yes",
          "enum": ["yes", "no"],
          "description": "",
          "example": "yes",
          "type": "string"
        },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "status": {
          "description": "Registration status",
          "type": "array",
          "items": { "$ref": "#/definitions/RegistrationStatus" }
        }
      }
    },
    "RetailAccount-detailed": {
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "maxLength": 65,
          "description": "",
          "type": "string"
        },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "transport": {
          "enum": ["udp", "tcp", "tls"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "ip": { "maxLength": 50, "description": "", "type": "string" },
        "port": { "minimum": 0, "description": "", "type": "integer" },
        "password": { "maxLength": 64, "description": "", "type": "string" },
        "directConnectivity": {
          "default": "yes",
          "enum": ["yes", "no"],
          "description": "",
          "example": "yes",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "transformationRuleSet": {
          "$ref": "#/definitions/TransformationRuleSet"
        },
        "outgoingDdi": { "$ref": "#/definitions/Ddi" },
        "status": {
          "description": "Registration status",
          "type": "array",
          "items": { "$ref": "#/definitions/RegistrationStatus" }
        }
      },
      "required": ["description", "directConnectivity"]
    },
    "RetailAccount-status": {
      "type": "object",
      "required": ["directConnectivity", "description"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": {
          "readOnly": true,
          "maxLength": 65,
          "description": "",
          "type": "string"
        },
        "domainName": {
          "description": "Registration domain",
          "type": "string"
        },
        "directConnectivity": {
          "default": "yes",
          "enum": ["yes", "no"],
          "description": "",
          "example": "yes",
          "type": "string"
        },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "status": {
          "description": "Registration status",
          "type": "array",
          "items": { "$ref": "#/definitions/RegistrationStatus" }
        }
      }
    },
    "RouteLock": {
      "type": "object",
      "required": ["name", "description", "open"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "description": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "open": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "closeExtension": {
          "readOnly": true,
          "description": "Close extension",
          "type": "string"
        },
        "openExtension": {
          "readOnly": true,
          "description": "Open extension",
          "type": "string"
        },
        "toggleExtension": {
          "readOnly": true,
          "description": "Toggle extension",
          "type": "string"
        }
      }
    },
    "RouteLock-collection": {
      "type": "object",
      "required": ["name", "description", "open"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "description": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "open": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "closeExtension": {
          "readOnly": true,
          "description": "Close extension",
          "type": "string"
        },
        "openExtension": {
          "readOnly": true,
          "description": "Open extension",
          "type": "string"
        },
        "toggleExtension": {
          "readOnly": true,
          "description": "Toggle extension",
          "type": "string"
        }
      }
    },
    "RouteLock-detailed": {
      "type": "object",
      "required": ["name", "description", "open"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "description": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "open": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "closeExtension": {
          "readOnly": true,
          "description": "Close extension",
          "type": "string"
        },
        "openExtension": {
          "readOnly": true,
          "description": "Open extension",
          "type": "string"
        },
        "toggleExtension": {
          "readOnly": true,
          "description": "Toggle extension",
          "type": "string"
        }
      }
    },
    "RoutingTag": {
      "type": "object",
      "required": ["name", "tag"],
      "properties": {
        "name": { "maxLength": 80, "description": "", "type": "string" },
        "tag": { "maxLength": 15, "description": "", "type": "string" },
        "id": { "readOnly": true, "description": "", "type": "integer" }
      }
    },
    "RoutingTag-collection": {
      "type": "object",
      "required": ["name", "tag"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 80, "description": "", "type": "string" },
        "tag": { "maxLength": 15, "description": "", "type": "string" }
      }
    },
    "RoutingTag-detailed": {
      "type": "object",
      "required": ["name", "tag"],
      "properties": {
        "name": { "maxLength": 80, "description": "", "type": "string" },
        "tag": { "maxLength": 15, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "Schedule": {
      "type": "object",
      "required": ["name", "timeIn", "timeout"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "timeIn": { "format": "time", "description": "", "type": "string" },
        "timeout": { "format": "time", "description": "", "type": "string" },
        "monday": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "tuesday": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "wednesday": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "thursday": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "friday": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "saturday": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "sunday": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "Schedule-collection": {
      "type": "object",
      "required": ["name", "timeIn", "timeout"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "timeIn": { "format": "time", "description": "", "type": "string" },
        "timeout": { "format": "time", "description": "", "type": "string" },
        "monday": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "tuesday": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "wednesday": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "thursday": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "friday": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "saturday": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "sunday": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "Schedule-detailed": {
      "type": "object",
      "required": ["name", "timeIn", "timeout"],
      "properties": {
        "name": { "maxLength": 50, "description": "", "type": "string" },
        "timeIn": { "format": "time", "description": "", "type": "string" },
        "timeout": { "format": "time", "description": "", "type": "string" },
        "monday": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "tuesday": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "wednesday": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "thursday": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "friday": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "saturday": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "sunday": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "Service": {
      "type": "object",
      "required": ["iden", "defaultCode", "extraArgs"],
      "properties": {
        "iden": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        },
        "defaultCode": { "maxLength": 3, "description": "", "type": "string" },
        "extraArgs": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/Service_Name" },
        "description": { "$ref": "#/definitions/Service_Description" }
      }
    },
    "Service-collection": {
      "type": "object",
      "required": ["iden", "defaultCode", "extraArgs"],
      "properties": {
        "iden": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        },
        "defaultCode": { "maxLength": 3, "description": "", "type": "string" },
        "extraArgs": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "name": { "$ref": "#/definitions/Service_Name" },
        "description": { "$ref": "#/definitions/Service_Description" },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "Service-detailed": {
      "type": "object",
      "required": ["iden", "defaultCode", "extraArgs"],
      "properties": {
        "iden": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        },
        "defaultCode": { "maxLength": 3, "description": "", "type": "string" },
        "extraArgs": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/Service_Name" },
        "description": { "$ref": "#/definitions/Service_Description" }
      }
    },
    "Service_Description": {
      "type": "object",
      "required": ["en", "es", "ca", "it"],
      "properties": {
        "en": {
          "default": "",
          "maxLength": 255,
          "description": "",
          "example": "",
          "type": "string"
        },
        "es": {
          "default": "",
          "maxLength": 255,
          "description": "",
          "example": "",
          "type": "string"
        },
        "ca": {
          "default": "",
          "maxLength": 255,
          "description": "",
          "example": "",
          "type": "string"
        },
        "it": {
          "default": "",
          "maxLength": 255,
          "description": "",
          "example": "",
          "type": "string"
        }
      }
    },
    "Service_Name": {
      "type": "object",
      "required": ["en", "es", "ca", "it"],
      "properties": {
        "en": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        },
        "es": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        },
        "ca": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        },
        "it": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        }
      }
    },
    "Terminal": {
      "type": "object",
      "required": [
        "name",
        "disallow",
        "allowAudio",
        "directMediaMethod",
        "password",
        "t38Passthrough",
        "rtpEncryption"
      ],
      "properties": {
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "disallow": {
          "default": "all",
          "maxLength": 200,
          "description": "",
          "example": "all",
          "type": "string"
        },
        "allowAudio": {
          "default": "alaw",
          "maxLength": 200,
          "description": "",
          "example": "alaw",
          "type": "string"
        },
        "allowVideo": { "maxLength": 200, "description": "", "type": "string" },
        "directMediaMethod": {
          "default": "update",
          "enum": ["update", "invite", "reinvite"],
          "maxLength": 25,
          "description": "",
          "example": "update",
          "type": "string"
        },
        "password": {
          "default": "",
          "maxLength": 25,
          "description": "",
          "example": "",
          "type": "string"
        },
        "mac": { "maxLength": 12, "description": "", "type": "string" },
        "lastProvisionDate": {
          "readOnly": true,
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "t38Passthrough": {
          "default": "no",
          "enum": ["yes", "no"],
          "description": "",
          "example": "no",
          "type": "string"
        },
        "rtpEncryption": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "terminalModel": { "description": "", "type": "integer" }
      }
    },
    "Terminal-collection": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "mac": { "maxLength": 12, "description": "", "type": "string" },
        "lastProvisionDate": {
          "readOnly": true,
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "domain": { "description": "", "type": "integer" },
        "terminalModel": { "description": "", "type": "integer" },
        "domainName": {
          "description": "Registration domain",
          "type": "string"
        },
        "status": {
          "description": "Registration status",
          "type": "array",
          "items": { "$ref": "#/definitions/RegistrationStatus" }
        }
      }
    },
    "Terminal-detailed": {
      "type": "object",
      "required": [
        "name",
        "disallow",
        "allowAudio",
        "directMediaMethod",
        "password",
        "t38Passthrough",
        "rtpEncryption"
      ],
      "properties": {
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "disallow": {
          "default": "all",
          "maxLength": 200,
          "description": "",
          "example": "all",
          "type": "string"
        },
        "allowAudio": {
          "default": "alaw",
          "maxLength": 200,
          "description": "",
          "example": "alaw",
          "type": "string"
        },
        "allowVideo": { "maxLength": 200, "description": "", "type": "string" },
        "directMediaMethod": {
          "default": "update",
          "enum": ["update", "invite", "reinvite"],
          "maxLength": 25,
          "description": "",
          "example": "update",
          "type": "string"
        },
        "password": {
          "default": "",
          "maxLength": 25,
          "description": "",
          "example": "",
          "type": "string"
        },
        "mac": { "maxLength": 12, "description": "", "type": "string" },
        "lastProvisionDate": {
          "readOnly": true,
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "t38Passthrough": {
          "default": "no",
          "enum": ["yes", "no"],
          "description": "",
          "example": "no",
          "type": "string"
        },
        "rtpEncryption": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "terminalModel": { "$ref": "#/definitions/TerminalModel" },
        "status": {
          "description": "Registration status",
          "type": "array",
          "items": { "$ref": "#/definitions/RegistrationStatus" }
        }
      }
    },
    "Terminal-status": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "domainName": {
          "description": "Registration domain",
          "type": "string"
        },
        "status": {
          "description": "Registration status",
          "type": "array",
          "items": { "$ref": "#/definitions/RegistrationStatus" }
        }
      }
    },
    "TerminalModel": {
      "type": "object",
      "required": ["iden", "name", "description"],
      "properties": {
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "name": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "TerminalModel-collection": {
      "type": "object",
      "required": ["iden", "name", "description"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "name": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "genericTemplate": {
          "maxLength": 65535,
          "description": "",
          "type": "string"
        },
        "specificTemplate": {
          "maxLength": 65535,
          "description": "",
          "type": "string"
        }
      }
    },
    "TerminalModel-detailed": {
      "type": "object",
      "required": ["iden", "name", "description"],
      "properties": {
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "name": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "Timezone": {
      "type": "object",
      "required": ["tz"],
      "properties": {
        "tz": { "maxLength": 255, "description": "", "type": "string" },
        "comment": {
          "default": "",
          "maxLength": 150,
          "description": "",
          "example": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "label": { "$ref": "#/definitions/Timezone_Label" },
        "country": { "description": "", "type": "integer" }
      }
    },
    "Timezone-collection": {
      "type": "object",
      "required": ["tz"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "tz": { "maxLength": 255, "description": "", "type": "string" }
      }
    },
    "Timezone-detailed": {
      "type": "object",
      "required": ["tz"],
      "properties": {
        "tz": { "maxLength": 255, "description": "", "type": "string" },
        "comment": {
          "default": "",
          "maxLength": 150,
          "description": "",
          "example": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "label": { "$ref": "#/definitions/Timezone_Label" },
        "country": { "$ref": "#/definitions/Country" }
      }
    },
    "Timezone_Label": {
      "type": "object",
      "required": ["en", "es", "ca", "it"],
      "properties": {
        "en": {
          "default": "",
          "maxLength": 20,
          "description": "",
          "example": "",
          "type": "string"
        },
        "es": {
          "default": "",
          "maxLength": 20,
          "description": "",
          "example": "",
          "type": "string"
        },
        "ca": {
          "default": "",
          "maxLength": 20,
          "description": "",
          "example": "",
          "type": "string"
        },
        "it": {
          "default": "",
          "maxLength": 20,
          "description": "",
          "example": "",
          "type": "string"
        }
      }
    },
    "Token": {
      "type": "object",
      "properties": { "token": { "description": "", "type": "string" } }
    },
    "TransformationRuleSet": {
      "type": "object",
      "properties": {
        "description": {
          "maxLength": 250,
          "description": "",
          "type": "string"
        },
        "internationalCode": {
          "default": "00",
          "maxLength": 10,
          "description": "",
          "example": "00",
          "type": "string"
        },
        "trunkPrefix": {
          "default": "",
          "maxLength": 5,
          "description": "",
          "example": "",
          "type": "string"
        },
        "areaCode": {
          "default": "",
          "maxLength": 5,
          "description": "",
          "example": "",
          "type": "string"
        },
        "nationalLen": {
          "default": 9,
          "minimum": 0,
          "description": "",
          "example": "9",
          "type": "integer"
        },
        "generateRules": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/TransformationRuleSet_Name" },
        "country": { "description": "", "type": "integer" }
      }
    },
    "TransformationRuleSet-collection": {
      "type": "object",
      "properties": {
        "description": {
          "maxLength": 250,
          "description": "",
          "type": "string"
        },
        "internationalCode": {
          "default": "00",
          "maxLength": 10,
          "description": "",
          "example": "00",
          "type": "string"
        },
        "trunkPrefix": {
          "default": "",
          "maxLength": 5,
          "description": "",
          "example": "",
          "type": "string"
        },
        "areaCode": {
          "default": "",
          "maxLength": 5,
          "description": "",
          "example": "",
          "type": "string"
        },
        "nationalLen": {
          "default": 9,
          "minimum": 0,
          "description": "",
          "example": "9",
          "type": "integer"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/TransformationRuleSet_Name" }
      }
    },
    "TransformationRuleSet-detailed": {
      "type": "object",
      "properties": {
        "description": {
          "maxLength": 250,
          "description": "",
          "type": "string"
        },
        "internationalCode": {
          "default": "00",
          "maxLength": 10,
          "description": "",
          "example": "00",
          "type": "string"
        },
        "trunkPrefix": {
          "default": "",
          "maxLength": 5,
          "description": "",
          "example": "",
          "type": "string"
        },
        "areaCode": {
          "default": "",
          "maxLength": 5,
          "description": "",
          "example": "",
          "type": "string"
        },
        "nationalLen": {
          "default": 9,
          "minimum": 0,
          "description": "",
          "example": "9",
          "type": "integer"
        },
        "generateRules": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/TransformationRuleSet_Name" },
        "country": { "$ref": "#/definitions/Country" }
      }
    },
    "TransformationRuleSet_Name": {
      "type": "object",
      "required": ["en", "es", "ca", "it"],
      "properties": {
        "en": { "maxLength": 100, "description": "", "type": "string" },
        "es": { "maxLength": 100, "description": "", "type": "string" },
        "ca": { "maxLength": 100, "description": "", "type": "string" },
        "it": { "maxLength": 100, "description": "", "type": "string" }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "name",
        "lastname",
        "doNotDisturb",
        "isBoss",
        "active",
        "maxCalls",
        "externalIpCalls",
        "rejectCallMethod",
        "multiContact",
        "gsQRCode",
        "voicemail",
        "contact"
      ],
      "properties": {
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "lastname": { "maxLength": 100, "description": "", "type": "string" },
        "email": { "maxLength": 100, "description": "", "type": "string" },
        "pass": { "maxLength": 80, "description": "", "type": "string" },
        "doNotDisturb": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "isBoss": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "active": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "maxCalls": {
          "default": 0,
          "minimum": 0,
          "description": "",
          "example": "0",
          "type": "integer"
        },
        "externalIpCalls": {
          "default": "0",
          "enum": ["0", "1", "2", "3"],
          "maxLength": 1,
          "description": "",
          "example": "0",
          "type": "string"
        },
        "rejectCallMethod": {
          "default": "rfc",
          "enum": ["rfc", "486", "600"],
          "maxLength": 3,
          "description": "",
          "example": "rfc",
          "type": "string"
        },
        "multiContact": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "gsQRCode": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "callAcl": { "description": "", "type": "integer" },
        "bossAssistant": { "description": "", "type": "integer" },
        "bossAssistantWhiteList": { "description": "", "type": "integer" },
        "transformationRuleSet": { "description": "", "type": "integer" },
        "language": { "description": "", "type": "integer" },
        "terminal": { "description": "", "type": "integer" },
        "extension": { "description": "", "type": "integer" },
        "timezone": { "description": "", "type": "integer" },
        "outgoingDdi": { "description": "", "type": "integer" },
        "outgoingDdiRule": { "description": "", "type": "integer" },
        "location": { "description": "", "type": "integer" },
        "voicemail": { "description": "", "type": "integer" },
        "contact": { "description": "", "type": "integer" }
      }
    },
    "User-collection": {
      "type": "object",
      "required": ["name", "lastname"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "lastname": { "maxLength": 100, "description": "", "type": "string" },
        "terminal": { "description": "", "type": "integer" },
        "extension": { "description": "", "type": "integer" },
        "outgoingDdi": { "description": "", "type": "integer" },
        "status": {
          "description": "Registration status",
          "type": "array",
          "items": { "$ref": "#/definitions/RegistrationStatus" }
        }
      }
    },
    "User-detailed": {
      "type": "object",
      "required": [
        "name",
        "lastname",
        "doNotDisturb",
        "isBoss",
        "active",
        "maxCalls",
        "externalIpCalls",
        "rejectCallMethod",
        "multiContact",
        "gsQRCode",
        "voicemail",
        "contact"
      ],
      "properties": {
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "lastname": { "maxLength": 100, "description": "", "type": "string" },
        "email": { "maxLength": 100, "description": "", "type": "string" },
        "pass": { "maxLength": 80, "description": "", "type": "string" },
        "doNotDisturb": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "isBoss": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "active": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "maxCalls": {
          "default": 0,
          "minimum": 0,
          "description": "",
          "example": "0",
          "type": "integer"
        },
        "externalIpCalls": {
          "default": "0",
          "enum": ["0", "1", "2", "3"],
          "maxLength": 1,
          "description": "",
          "example": "0",
          "type": "string"
        },
        "rejectCallMethod": {
          "default": "rfc",
          "enum": ["rfc", "486", "600"],
          "maxLength": 3,
          "description": "",
          "example": "rfc",
          "type": "string"
        },
        "multiContact": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "gsQRCode": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "callAcl": { "$ref": "#/definitions/CallAcl" },
        "bossAssistant": { "$ref": "#/definitions/User" },
        "bossAssistantWhiteList": { "$ref": "#/definitions/MatchList" },
        "transformationRuleSet": {
          "$ref": "#/definitions/TransformationRuleSet"
        },
        "language": { "$ref": "#/definitions/Language" },
        "terminal": { "$ref": "#/definitions/Terminal" },
        "extension": { "$ref": "#/definitions/Extension" },
        "timezone": { "$ref": "#/definitions/Timezone" },
        "outgoingDdi": { "$ref": "#/definitions/Ddi" },
        "outgoingDdiRule": { "$ref": "#/definitions/OutgoingDdiRule" },
        "location": { "$ref": "#/definitions/Location" },
        "voicemail": { "$ref": "#/definitions/Voicemail" },
        "contact": { "$ref": "#/definitions/Contact" },
        "pickupGroupIds": {
          "description": "Pickup group ids",
          "type": "array",
          "items": { "type": "integer" }
        }
      }
    },
    "UsersCdr-collection": {
      "type": "object",
      "required": ["startTime", "endTime", "duration"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "startTime": {
          "default": "2000-01-01 00:00:00",
          "format": "date-time",
          "description": "",
          "example": "2000-01-01 00:00:00",
          "type": "string"
        },
        "endTime": {
          "default": "2000-01-01 00:00:00",
          "format": "date-time",
          "description": "",
          "example": "2000-01-01 00:00:00",
          "type": "string"
        },
        "duration": {
          "default": 0,
          "format": "float",
          "description": "",
          "example": "0",
          "type": "number"
        },
        "direction": { "description": "", "type": "string" },
        "caller": { "maxLength": 128, "description": "", "type": "string" },
        "callee": { "maxLength": 128, "description": "", "type": "string" },
        "user": { "description": "", "type": "integer" },
        "friend": { "description": "", "type": "integer" }
      }
    },
    "UsersCdr-detailed": {
      "type": "object",
      "required": ["startTime", "endTime", "duration"],
      "properties": {
        "startTime": {
          "default": "2000-01-01 00:00:00",
          "format": "date-time",
          "description": "",
          "example": "2000-01-01 00:00:00",
          "type": "string"
        },
        "endTime": {
          "default": "2000-01-01 00:00:00",
          "format": "date-time",
          "description": "",
          "example": "2000-01-01 00:00:00",
          "type": "string"
        },
        "duration": {
          "default": 0,
          "format": "float",
          "description": "",
          "example": "0",
          "type": "number"
        },
        "direction": { "description": "", "type": "string" },
        "caller": { "maxLength": 128, "description": "", "type": "string" },
        "callee": { "maxLength": 128, "description": "", "type": "string" },
        "diversion": { "maxLength": 64, "description": "", "type": "string" },
        "referee": { "maxLength": 128, "description": "", "type": "string" },
        "referrer": { "maxLength": 128, "description": "", "type": "string" },
        "callid": { "maxLength": 255, "description": "", "type": "string" },
        "callidHash": { "maxLength": 128, "description": "", "type": "string" },
        "xcallid": { "maxLength": 255, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "user": { "$ref": "#/definitions/User" },
        "friend": { "$ref": "#/definitions/Friend" }
      }
    },
    "Voicemail": {
      "type": "object",
      "required": ["enabled", "name", "sendMail", "attachSound", "company"],
      "properties": {
        "enabled": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "name": { "maxLength": 200, "description": "", "type": "string" },
        "email": { "maxLength": 200, "description": "", "type": "string" },
        "sendMail": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "attachSound": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "user": { "readOnly": true, "description": "", "type": "integer" },
        "residentialDevice": {
          "readOnly": true,
          "description": "",
          "type": "integer"
        },
        "company": { "description": "", "type": "integer" },
        "locution": { "description": "", "type": "integer" }
      }
    },
    "Voicemail-collection": {
      "type": "object",
      "required": ["enabled", "name"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "enabled": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "name": { "maxLength": 200, "description": "", "type": "string" },
        "email": { "maxLength": 200, "description": "", "type": "string" },
        "user": { "readOnly": true, "description": "", "type": "integer" }
      }
    },
    "Voicemail-detailed": {
      "type": "object",
      "required": ["enabled", "name", "sendMail", "attachSound", "company"],
      "properties": {
        "enabled": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "name": { "maxLength": 200, "description": "", "type": "string" },
        "email": { "maxLength": 200, "description": "", "type": "string" },
        "sendMail": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "attachSound": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "user": { "readOnly": true, "$ref": "#/definitions/User" },
        "residentialDevice": {
          "readOnly": true,
          "$ref": "#/definitions/ResidentialDevice"
        },
        "company": { "$ref": "#/definitions/Company" },
        "locution": { "$ref": "#/definitions/Locution" }
      }
    },
    "VoicemailMessage-collection": {
      "type": "object",
      "required": ["folder", "calldate"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "folder": { "maxLength": 64, "description": "", "type": "string" },
        "calldate": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "caller": { "maxLength": 128, "description": "", "type": "string" },
        "duration": { "description": "", "type": "integer" }
      }
    },
    "VoicemailMessage-detailed": {
      "type": "object",
      "required": ["calldate", "folder", "voicemail"],
      "properties": {
        "calldate": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "folder": { "maxLength": 64, "description": "", "type": "string" },
        "caller": { "maxLength": 128, "description": "", "type": "string" },
        "duration": { "description": "", "type": "integer" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "recordingFile": {
          "$ref": "#/definitions/VoicemailMessage_RecordingFile"
        },
        "metadataFile": { "$ref": "#/definitions/MetadataFile" },
        "voicemail": { "$ref": "#/definitions/Voicemail" }
      }
    },
    "VoicemailMessage_RecordingFile": {
      "type": "object",
      "properties": {
        "fileSize": { "minimum": 0, "description": "", "type": "integer" },
        "mimeType": { "maxLength": 80, "description": "", "type": "string" },
        "baseName": { "maxLength": 255, "description": "", "type": "string" }
      }
    },
    "Invoice_Pdf": {
      "type": "object",
      "properties": {
        "fileSize": { "minimum": 0, "description": "", "type": "integer" },
        "mimeType": { "maxLength": 80, "description": "", "type": "string" },
        "baseName": { "maxLength": 255, "description": "", "type": "string" }
      }
    },
    "Name": {
      "type": "object",
      "required": ["en", "es", "ca", "it"],
      "properties": {
        "en": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        },
        "es": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        },
        "ca": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        },
        "it": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        }
      }
    }
  }
}
