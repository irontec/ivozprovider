{
  "swagger": "2.0",
  "basePath": "/api/platform/",
  "info": {
    "title": "Ivoz Provider",
    "version": "3",
    "description": "Platform REST API"
  },
  "paths": {
    "/admin_login": {
      "post": {
        "tags": ["Auth"],
        "operationId": "postAdminAuthenticate",
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": ["application/json"],
        "summary": "Retrieve JWT token",
        "parameters": [
          {
            "name": "username",
            "in": "formData",
            "type": "string",
            "required": true
          },
          {
            "name": "password",
            "in": "formData",
            "type": "string",
            "format": "password",
            "required": true
          }
        ],
        "responses": {
          "200": { "description": "Valid credentials" },
          "400": { "description": "Invalid input" },
          "401": { "description": "Bad credentials" }
        }
      }
    },
    "/token/refresh": {
      "post": {
        "tags": ["Auth"],
        "operationId": "postTokenRefresh",
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": ["application/json"],
        "summary": "Retrieve JWT token",
        "parameters": [
          {
            "name": "refresh_token",
            "in": "formData",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": { "description": "Valid credentials" },
          "400": { "description": "Invalid input" },
          "401": { "description": "Bad credentials" }
        }
      }
    },
    "/administrator_rel_public_entities": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getAdministratorRelPublicEntityCollection",
        "summary": "Retrieves the collection of AdministratorRelPublicEntity resources.",
        "responses": {
          "200": {
            "description": "AdministratorRelPublicEntity collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdministratorRelPublicEntity-collection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "administrator",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "administrator[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "create",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "delete",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "publicEntity",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "publicEntity[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "read",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "update",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[create]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[delete]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[read]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[update]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/administrator_rel_public_entities/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getAdministratorRelPublicEntityItem",
        "summary": "Retrieves a AdministratorRelPublicEntity resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "AdministratorRelPublicEntity resource response",
            "schema": {
              "$ref": "#/definitions/AdministratorRelPublicEntity-detailed"
            }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putAdministratorRelPublicEntityItem",
        "summary": "Replaces the AdministratorRelPublicEntity resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "administratorRelPublicEntity",
            "in": "body",
            "description": "The updated AdministratorRelPublicEntity resource",
            "schema": { "$ref": "#/definitions/AdministratorRelPublicEntity" }
          }
        ],
        "responses": {
          "200": {
            "description": "AdministratorRelPublicEntity resource updated",
            "schema": { "$ref": "#/definitions/AdministratorRelPublicEntity" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      }
    },
    "/administrators": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getAdministratorCollection",
        "summary": "Retrieves the collection of Administrator resources.",
        "responses": {
          "200": {
            "description": "Administrator collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Administrator-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "brand",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "brand[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "brand[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "company",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "company[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "company[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[lastname]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[name]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "lastname[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "restricted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "timezone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timezone[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timezone[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "username[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "username[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "username[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "username[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "username[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[active]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[email]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[lastname]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[restricted]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[username]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postAdministratorCollection",
        "summary": "Creates a Administrator resource.",
        "responses": {
          "201": {
            "description": "Administrator resource created",
            "schema": { "$ref": "#/definitions/Administrator" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "administrator",
            "in": "body",
            "description": "The new Administrator resource",
            "schema": { "$ref": "#/definitions/Administrator" }
          }
        ]
      }
    },
    "/administrators/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getAdministratorItem",
        "summary": "Retrieves a Administrator resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Administrator resource response",
            "schema": { "$ref": "#/definitions/Administrator-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putAdministratorItem",
        "summary": "Replaces the Administrator resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "administrator",
            "in": "body",
            "description": "The updated Administrator resource",
            "schema": { "$ref": "#/definitions/Administrator" }
          }
        ],
        "responses": {
          "200": {
            "description": "Administrator resource updated",
            "schema": { "$ref": "#/definitions/Administrator" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteAdministratorItem",
        "summary": "Removes the Administrator resource.",
        "responses": {
          "204": { "description": "Administrator resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/application_servers": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getApplicationServerCollection",
        "summary": "Retrieves the collection of ApplicationServer resources.",
        "responses": {
          "200": {
            "description": "ApplicationServer collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ApplicationServer-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          { "name": "ip", "in": "query", "required": false, "type": "string" },
          {
            "name": "ip[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[ip]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postApplicationServerCollection",
        "summary": "Creates a ApplicationServer resource.",
        "responses": {
          "201": {
            "description": "ApplicationServer resource created",
            "schema": { "$ref": "#/definitions/ApplicationServer" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "applicationServer",
            "in": "body",
            "description": "The new ApplicationServer resource",
            "schema": { "$ref": "#/definitions/ApplicationServer" }
          }
        ]
      }
    },
    "/application_servers/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getApplicationServerItem",
        "summary": "Retrieves a ApplicationServer resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "ApplicationServer resource response",
            "schema": { "$ref": "#/definitions/ApplicationServer-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putApplicationServerItem",
        "summary": "Replaces the ApplicationServer resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "applicationServer",
            "in": "body",
            "description": "The updated ApplicationServer resource",
            "schema": { "$ref": "#/definitions/ApplicationServer" }
          }
        ],
        "responses": {
          "200": {
            "description": "ApplicationServer resource updated",
            "schema": { "$ref": "#/definitions/ApplicationServer" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteApplicationServerItem",
        "summary": "Removes the ApplicationServer resource.",
        "responses": {
          "204": { "description": "ApplicationServer resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/banned_addresses": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getBannedAddressCollection",
        "summary": "Retrieves the collection of BannedAddress resources.",
        "responses": {
          "200": {
            "description": "BannedAddress collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/BannedAddress-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          { "name": "aor", "in": "query", "required": false, "type": "string" },
          {
            "name": "aor[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aor[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aor[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aor[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aor[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aor[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "blocker",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "blocker[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "blocker[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "blocker[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "blocker[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "blocker[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "blocker[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[aor]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[blocker]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[ip]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[lastTimeBanned]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          { "name": "ip", "in": "query", "required": false, "type": "string" },
          {
            "name": "ip[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "ip[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastTimeBanned",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastTimeBanned[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastTimeBanned[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastTimeBanned[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastTimeBanned[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "lastTimeBanned[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastTimeBanned[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastTimeBanned[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[aor]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[blocker]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[ip]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[lastTimeBanned]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ]
      }
    },
    "/banned_addresses/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getBannedAddressItem",
        "summary": "Retrieves a BannedAddress resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ],
        "responses": {
          "200": {
            "description": "BannedAddress resource response",
            "schema": { "$ref": "#/definitions/BannedAddress-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/billable_calls": {
      "get": {
        "produces": ["application/json", "application/ld+json", "text/csv"],
        "tags": ["Provider"],
        "operationId": "getBillableCallCollection",
        "summary": "Retrieves the collection of BillableCall resources.",
        "responses": {
          "200": {
            "description": "BillableCall collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/BillableCall-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "brand",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "brand[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "brand[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "callee",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callee[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "caller",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "caller[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "caller[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callid[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callid[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callid[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "callid[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callid[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callid[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "carrier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "carrier[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "carrier[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "company",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "company[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "company[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "cost",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cost[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "cost[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cost[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cost[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cost[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cost[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cost[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          { "name": "ddi", "in": "query", "required": false, "type": "string" },
          {
            "name": "ddiProvider",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ddiProvider[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ddiProvider[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "ddi[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ddi[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "duration[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointId",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "endpointId[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "endpointId[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointId[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointId[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointId[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointId[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointId[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointName[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointName[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointName[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointName[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointName[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "endpointName[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endpointType[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[brand]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[callee]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[caller]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[callid]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[carrier]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[company]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[cost]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[ddiProvider]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[ddi]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[endpointId]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[endpointName]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[endpointType]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[invoice]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[price]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[startTime]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "price",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "price[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "price[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "price[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "price[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "price[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "price[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "price[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime[after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime[before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "startTime[strictly_after]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime[strictly_before]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[callee]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[caller]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[callid]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[cost]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[direction]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[duration]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[endpointId]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[endpointName]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[endpointType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[price]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[startTime]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "name": "_pagination",
            "in": "query",
            "required": false,
            "description": "Enable or disable pagination",
            "type": "boolean"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ]
      }
    },
    "/billable_calls/{callid}/rate": {
      "put": {
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Provider"],
        "parameters": [
          {
            "name": "callid",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "callid"
          },
          {
            "name": "rating",
            "in": "body",
            "required": true,
            "description": "The rating values",
            "schema": { "$ref": "#/definitions/BillableCall-rating" }
          },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ],
        "operationId": "put_billable_call_rate_by_callidBillableCallItem",
        "summary": "Replaces the BillableCall resource.",
        "responses": {
          "200": {
            "description": "BillableCall resource updated",
            "schema": { "$ref": "#/definitions/BillableCall" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      }
    },
    "/billable_calls/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getBillableCallItem",
        "summary": "Retrieves a BillableCall resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ],
        "responses": {
          "200": {
            "description": "BillableCall resource response",
            "schema": { "$ref": "#/definitions/BillableCall-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/brand_services": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getBrandServiceCollection",
        "summary": "Retrieves the collection of BrandService resources.",
        "responses": {
          "200": {
            "description": "BrandService collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/BrandService-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "brand",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "brand[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "service",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "service[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[code]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postBrandServiceCollection",
        "summary": "Creates a BrandService resource.",
        "responses": {
          "201": {
            "description": "BrandService resource created",
            "schema": { "$ref": "#/definitions/BrandService" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "brandService",
            "in": "body",
            "description": "The new BrandService resource",
            "schema": { "$ref": "#/definitions/BrandService" }
          }
        ]
      }
    },
    "/brand_services/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getBrandServiceItem",
        "summary": "Retrieves a BrandService resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "BrandService resource response",
            "schema": { "$ref": "#/definitions/BrandService-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putBrandServiceItem",
        "summary": "Replaces the BrandService resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "brandService",
            "in": "body",
            "description": "The updated BrandService resource",
            "schema": { "$ref": "#/definitions/BrandService" }
          }
        ],
        "responses": {
          "200": {
            "description": "BrandService resource updated",
            "schema": { "$ref": "#/definitions/BrandService" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteBrandServiceItem",
        "summary": "Removes the BrandService resource.",
        "responses": {
          "204": { "description": "BrandService resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/brands": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getBrandCollection",
        "summary": "Retrieves the collection of Brand resources.",
        "responses": {
          "200": {
            "description": "Brand collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Brand-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "callCsvNotificationTemplate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callCsvNotificationTemplate[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callCsvNotificationTemplate[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "currency[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultTimezone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultTimezone[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domainUsers",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domainUsers[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domainUsers[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domainUsers[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domainUsers[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domainUsers[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domainUsers[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[domainUsers]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[invoice.registryData]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[logo.baseName]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[logo.fileSize]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[logo.mimeType]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "faxNotificationTemplate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "faxNotificationTemplate[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "faxNotificationTemplate[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.country",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.country[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.country[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.country[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.country[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.country[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.nif",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.nif[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.nif[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.nif[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.nif[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.nif[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.postalAddress",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.postalAddress[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.postalAddress[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.postalAddress[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.postalAddress[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.postalAddress[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.postalCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.postalCode[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.postalCode[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.postalCode[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.postalCode[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.postalCode[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.province",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.province[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.province[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.province[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.province[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.province[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.registryData",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.registryData[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.registryData[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.registryData[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "invoice.registryData[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.registryData[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.registryData[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.town",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.town[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.town[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.town[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.town[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice.town[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoiceNotificationTemplate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoiceNotificationTemplate[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoiceNotificationTemplate[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.baseName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.baseName[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.baseName[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.baseName[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.baseName[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.baseName[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "logo.baseName[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.fileSize",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "logo.fileSize[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "logo.fileSize[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.fileSize[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.fileSize[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.fileSize[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.fileSize[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.fileSize[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.mimeType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.mimeType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.mimeType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.mimeType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.mimeType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.mimeType[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "logo.mimeType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxDailyUsageNotificationTemplate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxDailyUsageNotificationTemplate[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxDailyUsageNotificationTemplate[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemailNotificationTemplate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemailNotificationTemplate[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "voicemailNotificationTemplate[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[domainUsers]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[invoice.country]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[invoice.nif]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[invoice.postalAddress]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[invoice.postalCode]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[invoice.province]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[invoice.registryData]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[invoice.town]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[logo.baseName]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[logo.fileSize]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[logo.mimeType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": [
          "multipart/form-data",
          "application/json",
          "application/ld+json"
        ],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postBrandCollection",
        "summary": "Creates a Brand resource.",
        "responses": {
          "201": {
            "description": "Brand resource created",
            "schema": { "$ref": "#/definitions/Brand-withFeatures" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "brand",
            "in": "formData",
            "description": "The new Brand resource",
            "type": "string"
          },
          {
            "name": "Logo",
            "in": "formData",
            "type": "file",
            "required": false
          }
        ]
      }
    },
    "/brands/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getBrandItem",
        "summary": "Retrieves a Brand resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Brand resource response",
            "schema": { "$ref": "#/definitions/Brand-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": [
          "multipart/form-data",
          "application/json",
          "application/ld+json"
        ],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putBrandItem",
        "summary": "Replaces the Brand resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "brand",
            "in": "formData",
            "description": "The updated Brand resource",
            "type": "string"
          },
          {
            "name": "Logo",
            "in": "formData",
            "type": "file",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Brand resource updated",
            "schema": { "$ref": "#/definitions/Brand-withFeatures" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteBrandItem",
        "summary": "Removes the Brand resource.",
        "responses": {
          "204": { "description": "Brand resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/brands/{id}/logo": {
      "get": {
        "produces": ["application/octet-stream"],
        "responses": {
          "200": {
            "description": "#/definitions/Brand_Logo",
            "schema": { "type": "file" }
          },
          "404": { "description": "Resource not found" }
        },
        "tags": ["Provider"],
        "operationId": "/brand_logoBrandItem",
        "summary": "Retrieves a Brand resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ]
      }
    },
    "/countries": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCountryCollection",
        "summary": "Retrieves the collection of Country resources.",
        "responses": {
          "200": {
            "description": "Country collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Country-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "countryCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "countryCode[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "countryCode[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "countryCode[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "countryCode[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "countryCode[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "countryCode[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[countryCode]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[code]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[countryCode]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.ca]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.en]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.es]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.it]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "name": "_pagination",
            "in": "query",
            "required": false,
            "description": "Enable or disable pagination",
            "type": "boolean"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/countries/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCountryItem",
        "summary": "Retrieves a Country resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Country resource response",
            "schema": { "$ref": "#/definitions/Country-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/currencies": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCurrencyCollection",
        "summary": "Retrieves the collection of Currency resources.",
        "responses": {
          "200": {
            "description": "Currency collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Currency-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "symbol",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "symbol[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "symbol[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "symbol[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "symbol[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "symbol[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[iden]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.ca]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.en]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.es]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.it]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[symbol]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postCurrencyCollection",
        "summary": "Creates a Currency resource.",
        "responses": {
          "201": {
            "description": "Currency resource created",
            "schema": { "$ref": "#/definitions/Currency" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "currency",
            "in": "body",
            "description": "The new Currency resource",
            "schema": { "$ref": "#/definitions/Currency" }
          }
        ]
      }
    },
    "/currencies/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getCurrencyItem",
        "summary": "Retrieves a Currency resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Currency resource response",
            "schema": { "$ref": "#/definitions/Currency-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putCurrencyItem",
        "summary": "Replaces the Currency resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "currency",
            "in": "body",
            "description": "The updated Currency resource",
            "schema": { "$ref": "#/definitions/Currency" }
          }
        ],
        "responses": {
          "200": {
            "description": "Currency resource updated",
            "schema": { "$ref": "#/definitions/Currency" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteCurrencyItem",
        "summary": "Removes the Currency resource.",
        "responses": {
          "204": { "description": "Currency resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/domains": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getDomainCollection",
        "summary": "Retrieves the collection of Domain resources.",
        "responses": {
          "200": {
            "description": "Domain collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Domain-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "domain",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domain[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domain[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domain[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domain[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domain[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pointsTo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pointsTo[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pointsTo[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pointsTo[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pointsTo[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pointsTo[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[domain]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[pointsTo]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/domains/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getDomainItem",
        "summary": "Retrieves a Domain resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Domain resource response",
            "schema": { "$ref": "#/definitions/Domain-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/features": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getFeatureCollection",
        "summary": "Retrieves the collection of Feature resources.",
        "responses": {
          "200": {
            "description": "Feature collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Feature-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[iden]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.ca]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.en]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.es]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.it]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postFeatureCollection",
        "summary": "Creates a Feature resource.",
        "responses": {
          "201": {
            "description": "Feature resource created",
            "schema": { "$ref": "#/definitions/Feature" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "feature",
            "in": "body",
            "description": "The new Feature resource",
            "schema": { "$ref": "#/definitions/Feature" }
          }
        ]
      }
    },
    "/features/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getFeatureItem",
        "summary": "Retrieves a Feature resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Feature resource response",
            "schema": { "$ref": "#/definitions/Feature-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putFeatureItem",
        "summary": "Replaces the Feature resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "feature",
            "in": "body",
            "description": "The updated Feature resource",
            "schema": { "$ref": "#/definitions/Feature" }
          }
        ],
        "responses": {
          "200": {
            "description": "Feature resource updated",
            "schema": { "$ref": "#/definitions/Feature" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteFeatureItem",
        "summary": "Removes the Feature resource.",
        "responses": {
          "204": { "description": "Feature resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/features_rel_brands": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getFeaturesRelBrandCollection",
        "summary": "Retrieves the collection of FeaturesRelBrand resources.",
        "responses": {
          "200": {
            "description": "FeaturesRelBrand collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/FeaturesRelBrand-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "brand",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "brand[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "feature",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "feature[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postFeaturesRelBrandCollection",
        "summary": "Creates a FeaturesRelBrand resource.",
        "responses": {
          "201": {
            "description": "FeaturesRelBrand resource created",
            "schema": { "$ref": "#/definitions/FeaturesRelBrand" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "featuresRelBrand",
            "in": "body",
            "description": "The new FeaturesRelBrand resource",
            "schema": { "$ref": "#/definitions/FeaturesRelBrand" }
          }
        ]
      }
    },
    "/features_rel_brands/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getFeaturesRelBrandItem",
        "summary": "Retrieves a FeaturesRelBrand resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "FeaturesRelBrand resource response",
            "schema": { "$ref": "#/definitions/FeaturesRelBrand-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putFeaturesRelBrandItem",
        "summary": "Replaces the FeaturesRelBrand resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "featuresRelBrand",
            "in": "body",
            "description": "The updated FeaturesRelBrand resource",
            "schema": { "$ref": "#/definitions/FeaturesRelBrand" }
          }
        ],
        "responses": {
          "200": {
            "description": "FeaturesRelBrand resource updated",
            "schema": { "$ref": "#/definitions/FeaturesRelBrand" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteFeaturesRelBrandItem",
        "summary": "Removes the FeaturesRelBrand resource.",
        "responses": {
          "204": { "description": "FeaturesRelBrand resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/invoice_templates": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getInvoiceTemplateCollection",
        "summary": "Retrieves the collection of InvoiceTemplate resources.",
        "responses": {
          "200": {
            "description": "InvoiceTemplate collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/InvoiceTemplate-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "brand",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "brand[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "brand[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "description[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[description]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postInvoiceTemplateCollection",
        "summary": "Creates a InvoiceTemplate resource.",
        "responses": {
          "201": {
            "description": "InvoiceTemplate resource created",
            "schema": { "$ref": "#/definitions/InvoiceTemplate" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "invoiceTemplate",
            "in": "body",
            "description": "The new InvoiceTemplate resource",
            "schema": { "$ref": "#/definitions/InvoiceTemplate" }
          }
        ]
      }
    },
    "/invoice_templates/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getInvoiceTemplateItem",
        "summary": "Retrieves a InvoiceTemplate resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "InvoiceTemplate resource response",
            "schema": { "$ref": "#/definitions/InvoiceTemplate-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putInvoiceTemplateItem",
        "summary": "Replaces the InvoiceTemplate resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "invoiceTemplate",
            "in": "body",
            "description": "The updated InvoiceTemplate resource",
            "schema": { "$ref": "#/definitions/InvoiceTemplate" }
          }
        ],
        "responses": {
          "200": {
            "description": "InvoiceTemplate resource updated",
            "schema": { "$ref": "#/definitions/InvoiceTemplate" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteInvoiceTemplateItem",
        "summary": "Removes the InvoiceTemplate resource.",
        "responses": {
          "204": { "description": "InvoiceTemplate resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/languages": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getLanguageCollection",
        "summary": "Retrieves the collection of Language resources.",
        "responses": {
          "200": {
            "description": "Language collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Language-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[iden]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.ca]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.en]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.es]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.it]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/languages/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getLanguageItem",
        "summary": "Retrieves a Language resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Language resource response",
            "schema": { "$ref": "#/definitions/Language-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/media_relay_sets": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getMediaRelaySetCollection",
        "summary": "Retrieves the collection of MediaRelaySet resources.",
        "responses": {
          "200": {
            "description": "MediaRelaySet collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/MediaRelaySet-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "description[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[description]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postMediaRelaySetCollection",
        "summary": "Creates a MediaRelaySet resource.",
        "responses": {
          "201": {
            "description": "MediaRelaySet resource created",
            "schema": { "$ref": "#/definitions/MediaRelaySet" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "mediaRelaySet",
            "in": "body",
            "description": "The new MediaRelaySet resource",
            "schema": { "$ref": "#/definitions/MediaRelaySet" }
          }
        ]
      }
    },
    "/media_relay_sets/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getMediaRelaySetItem",
        "summary": "Retrieves a MediaRelaySet resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "MediaRelaySet resource response",
            "schema": { "$ref": "#/definitions/MediaRelaySet-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putMediaRelaySetItem",
        "summary": "Replaces the MediaRelaySet resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "mediaRelaySet",
            "in": "body",
            "description": "The updated MediaRelaySet resource",
            "schema": { "$ref": "#/definitions/MediaRelaySet" }
          }
        ],
        "responses": {
          "200": {
            "description": "MediaRelaySet resource updated",
            "schema": { "$ref": "#/definitions/MediaRelaySet" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteMediaRelaySetItem",
        "summary": "Removes the MediaRelaySet resource.",
        "responses": {
          "204": { "description": "MediaRelaySet resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/my/active_calls": {
      "get": {
        "produces": ["application/json"],
        "tags": ["My"],
        "parameters": [
          {
            "name": "brand",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Brand Id"
          }
        ],
        "operationId": "get_my_active_callsActiveCallsItem",
        "summary": "Retrieves a ActiveCalls resource.",
        "responses": {
          "200": {
            "description": "ActiveCalls resource response",
            "schema": { "$ref": "#/definitions/ActiveCalls" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/my/profile": {
      "get": {
        "produces": ["application/json"],
        "tags": ["My"],
        "parameters": [],
        "operationId": "get_my_profileProfileItem",
        "summary": "Retrieves a Profile resource.",
        "responses": {
          "200": {
            "description": "Profile resource response",
            "schema": { "$ref": "#/definitions/Profile" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/notification_template_contents": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getNotificationTemplateContentCollection",
        "summary": "Retrieves the collection of NotificationTemplateContent resources.",
        "responses": {
          "200": {
            "description": "NotificationTemplateContent collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationTemplateContent-collection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "exists[fromAddress]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[fromName]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[language]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fromAddress",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromAddress[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromAddress[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromAddress[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromAddress[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromAddress[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fromAddress[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromName[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromName[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromName[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromName[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromName[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fromName[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "notificationTemplate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "notificationTemplate[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[fromAddress]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[fromName]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/notification_template_contents/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getNotificationTemplateContentItem",
        "summary": "Retrieves a NotificationTemplateContent resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "NotificationTemplateContent resource response",
            "schema": {
              "$ref": "#/definitions/NotificationTemplateContent-detailed"
            }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putNotificationTemplateContentItem",
        "summary": "Replaces the NotificationTemplateContent resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "notificationTemplateContent",
            "in": "body",
            "description": "The updated NotificationTemplateContent resource",
            "schema": { "$ref": "#/definitions/NotificationTemplateContent" }
          }
        ],
        "responses": {
          "200": {
            "description": "NotificationTemplateContent resource updated",
            "schema": { "$ref": "#/definitions/NotificationTemplateContent" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      }
    },
    "/notification_templates": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getNotificationTemplateCollection",
        "summary": "Retrieves the collection of NotificationTemplate resources.",
        "responses": {
          "200": {
            "description": "NotificationTemplate collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationTemplate-collection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "brand",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "brand[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "brand[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[type]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/notification_templates/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getNotificationTemplateItem",
        "summary": "Retrieves a NotificationTemplate resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "NotificationTemplate resource response",
            "schema": { "$ref": "#/definitions/NotificationTemplate-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/proxy_trunks": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getProxyTrunkCollection",
        "summary": "Retrieves the collection of ProxyTrunk resources.",
        "responses": {
          "200": {
            "description": "ProxyTrunk collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ProxyTrunk-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "exists[name]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          { "name": "ip", "in": "query", "required": false, "type": "string" },
          {
            "name": "ip[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[ip]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/proxy_trunks/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getProxyTrunkItem",
        "summary": "Retrieves a ProxyTrunk resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "ProxyTrunk resource response",
            "schema": { "$ref": "#/definitions/ProxyTrunk-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putProxyTrunkItem",
        "summary": "Replaces the ProxyTrunk resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "proxyTrunk",
            "in": "body",
            "description": "The updated ProxyTrunk resource",
            "schema": { "$ref": "#/definitions/ProxyTrunk" }
          }
        ],
        "responses": {
          "200": {
            "description": "ProxyTrunk resource updated",
            "schema": { "$ref": "#/definitions/ProxyTrunk" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      }
    },
    "/proxy_trunks_rel_brands": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getProxyTrunksRelBrandCollection",
        "summary": "Retrieves the collection of ProxyTrunksRelBrand resources.",
        "responses": {
          "200": {
            "description": "ProxyTrunksRelBrand collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProxyTrunksRelBrand-collection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "brand",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "brand[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "proxyTrunk",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "proxyTrunk[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postProxyTrunksRelBrandCollection",
        "summary": "Creates a ProxyTrunksRelBrand resource.",
        "responses": {
          "201": {
            "description": "ProxyTrunksRelBrand resource created",
            "schema": { "$ref": "#/definitions/ProxyTrunksRelBrand" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "proxyTrunksRelBrand",
            "in": "body",
            "description": "The new ProxyTrunksRelBrand resource",
            "schema": { "$ref": "#/definitions/ProxyTrunksRelBrand" }
          }
        ]
      }
    },
    "/proxy_trunks_rel_brands/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getProxyTrunksRelBrandItem",
        "summary": "Retrieves a ProxyTrunksRelBrand resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "ProxyTrunksRelBrand resource response",
            "schema": { "$ref": "#/definitions/ProxyTrunksRelBrand-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putProxyTrunksRelBrandItem",
        "summary": "Replaces the ProxyTrunksRelBrand resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "proxyTrunksRelBrand",
            "in": "body",
            "description": "The updated ProxyTrunksRelBrand resource",
            "schema": { "$ref": "#/definitions/ProxyTrunksRelBrand" }
          }
        ],
        "responses": {
          "200": {
            "description": "ProxyTrunksRelBrand resource updated",
            "schema": { "$ref": "#/definitions/ProxyTrunksRelBrand" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteProxyTrunksRelBrandItem",
        "summary": "Removes the ProxyTrunksRelBrand resource.",
        "responses": {
          "204": { "description": "ProxyTrunksRelBrand resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/proxy_users": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getProxyUserCollection",
        "summary": "Retrieves the collection of ProxyUser resources.",
        "responses": {
          "200": {
            "description": "ProxyUser collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ProxyUser-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "exists[ip]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[name]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          { "name": "ip", "in": "query", "required": false, "type": "string" },
          {
            "name": "ip[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "ip[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[ip]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/proxy_users/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getProxyUserItem",
        "summary": "Retrieves a ProxyUser resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "ProxyUser resource response",
            "schema": { "$ref": "#/definitions/ProxyUser-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putProxyUserItem",
        "summary": "Replaces the ProxyUser resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "proxyUser",
            "in": "body",
            "description": "The updated ProxyUser resource",
            "schema": { "$ref": "#/definitions/ProxyUser" }
          }
        ],
        "responses": {
          "200": {
            "description": "ProxyUser resource updated",
            "schema": { "$ref": "#/definitions/ProxyUser" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      }
    },
    "/public_entities": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getPublicEntityCollection",
        "summary": "Retrieves the collection of PublicEntity resources.",
        "responses": {
          "200": {
            "description": "PublicEntity collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PublicEntity-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "exists[name.ca]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[name.en]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[name.es]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[name.it]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name.ca[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name.es",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name.es[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[iden]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.ca]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.en]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.es]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.it]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/public_entities/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getPublicEntityItem",
        "summary": "Retrieves a PublicEntity resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "PublicEntity resource response",
            "schema": { "$ref": "#/definitions/PublicEntity-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/rtpengines": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Kam"],
        "operationId": "getRtpengineCollection",
        "summary": "Retrieves the collection of Rtpengine resources.",
        "responses": {
          "200": {
            "description": "Rtpengine collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Rtpengine-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "disabled",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[description]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mediaRelaySet",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mediaRelaySet[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mediaRelaySet[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          { "name": "url", "in": "query", "required": false, "type": "string" },
          {
            "name": "url[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "url[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "url[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "url[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "url[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "weight",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "weight[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "weight[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "weight[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "weight[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "weight[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "weight[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[disabled]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[url]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[weight]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Kam"],
        "operationId": "postRtpengineCollection",
        "summary": "Creates a Rtpengine resource.",
        "responses": {
          "201": {
            "description": "Rtpengine resource created",
            "schema": { "$ref": "#/definitions/Rtpengine" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "rtpengine",
            "in": "body",
            "description": "The new Rtpengine resource",
            "schema": { "$ref": "#/definitions/Rtpengine" }
          },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ]
      }
    },
    "/rtpengines/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Kam"],
        "operationId": "getRtpengineItem",
        "summary": "Retrieves a Rtpengine resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ],
        "responses": {
          "200": {
            "description": "Rtpengine resource response",
            "schema": { "$ref": "#/definitions/Rtpengine-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Kam"],
        "operationId": "putRtpengineItem",
        "summary": "Replaces the Rtpengine resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "rtpengine",
            "in": "body",
            "description": "The updated Rtpengine resource",
            "schema": { "$ref": "#/definitions/Rtpengine" }
          },
          {
            "name": "_timezone",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
          }
        ],
        "responses": {
          "200": {
            "description": "Rtpengine resource updated",
            "schema": { "$ref": "#/definitions/Rtpengine" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Kam"],
        "operationId": "deleteRtpengineItem",
        "summary": "Removes the Rtpengine resource.",
        "responses": {
          "204": { "description": "Rtpengine resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/services": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getServiceCollection",
        "summary": "Retrieves the collection of Service resources.",
        "responses": {
          "200": {
            "description": "Service collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Service-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "defaultCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultCode[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultCode[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultCode[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultCode[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "defaultCode[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.ca",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.ca[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.ca[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.ca[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.ca[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.ca[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.en",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.en[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.en[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.en[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.en[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.en[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.es",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.es[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.es[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.es[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.es[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.es[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.it",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.it[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.it[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.it[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.it[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description.it[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extraArgs",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.ca[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.en[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.es[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name.it[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[defaultCode]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description.ca]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description.en]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description.es]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description.it]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[extraArgs]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[iden]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.ca]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.en]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.es]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name.it]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/services/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getServiceItem",
        "summary": "Retrieves a Service resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Service resource response",
            "schema": { "$ref": "#/definitions/Service-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putServiceItem",
        "summary": "Replaces the Service resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "service",
            "in": "body",
            "description": "The updated Service resource",
            "schema": { "$ref": "#/definitions/Service" }
          }
        ],
        "responses": {
          "200": {
            "description": "Service resource updated",
            "schema": { "$ref": "#/definitions/Service" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      }
    },
    "/special_numbers": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getSpecialNumberCollection",
        "summary": "Retrieves the collection of SpecialNumber resources.",
        "responses": {
          "200": {
            "description": "SpecialNumber collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/SpecialNumber-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "country[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "disableCDR",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "disableCDR[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "disableCDR[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "disableCDR[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "disableCDR[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "disableCDR[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "disableCDR[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "number",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "number[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "number[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "number[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "number[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "number[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[disableCDR]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[number]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postSpecialNumberCollection",
        "summary": "Creates a SpecialNumber resource.",
        "responses": {
          "201": {
            "description": "SpecialNumber resource created",
            "schema": { "$ref": "#/definitions/SpecialNumber" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "specialNumber",
            "in": "body",
            "description": "The new SpecialNumber resource",
            "schema": { "$ref": "#/definitions/SpecialNumber" }
          }
        ]
      }
    },
    "/special_numbers/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getSpecialNumberItem",
        "summary": "Retrieves a SpecialNumber resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "SpecialNumber resource response",
            "schema": { "$ref": "#/definitions/SpecialNumber-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putSpecialNumberItem",
        "summary": "Replaces the SpecialNumber resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "specialNumber",
            "in": "body",
            "description": "The updated SpecialNumber resource",
            "schema": { "$ref": "#/definitions/SpecialNumber" }
          }
        ],
        "responses": {
          "200": {
            "description": "SpecialNumber resource updated",
            "schema": { "$ref": "#/definitions/SpecialNumber" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteSpecialNumberItem",
        "summary": "Removes the SpecialNumber resource.",
        "responses": {
          "204": { "description": "SpecialNumber resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/terminal_manufacturers": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getTerminalManufacturerCollection",
        "summary": "Retrieves the collection of TerminalManufacturer resources.",
        "responses": {
          "200": {
            "description": "TerminalManufacturer collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TerminalManufacturer-collection"
              }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[iden]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postTerminalManufacturerCollection",
        "summary": "Creates a TerminalManufacturer resource.",
        "responses": {
          "201": {
            "description": "TerminalManufacturer resource created",
            "schema": { "$ref": "#/definitions/TerminalManufacturer" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "terminalManufacturer",
            "in": "body",
            "description": "The new TerminalManufacturer resource",
            "schema": { "$ref": "#/definitions/TerminalManufacturer" }
          }
        ]
      }
    },
    "/terminal_manufacturers/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getTerminalManufacturerItem",
        "summary": "Retrieves a TerminalManufacturer resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "TerminalManufacturer resource response",
            "schema": { "$ref": "#/definitions/TerminalManufacturer-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putTerminalManufacturerItem",
        "summary": "Replaces the TerminalManufacturer resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "terminalManufacturer",
            "in": "body",
            "description": "The updated TerminalManufacturer resource",
            "schema": { "$ref": "#/definitions/TerminalManufacturer" }
          }
        ],
        "responses": {
          "200": {
            "description": "TerminalManufacturer resource updated",
            "schema": { "$ref": "#/definitions/TerminalManufacturer" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteTerminalManufacturerItem",
        "summary": "Removes the TerminalManufacturer resource.",
        "responses": {
          "204": { "description": "TerminalManufacturer resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/terminal_models": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getTerminalModelCollection",
        "summary": "Retrieves the collection of TerminalModel resources.",
        "responses": {
          "200": {
            "description": "TerminalModel collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/TerminalModel-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exists[genericTemplate]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[specificTemplate]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "genericTemplate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "genericTemplate[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "genericTemplate[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "genericTemplate[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "genericTemplate[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "genericTemplate[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "genericTemplate[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iden[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "specificTemplate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "specificTemplate[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "specificTemplate[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "specificTemplate[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "specificTemplate[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "specificTemplate[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "specificTemplate[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "terminalManufacturer",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "terminalManufacturer[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[description]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[genericTemplate]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[iden]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[specificTemplate]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postTerminalModelCollection",
        "summary": "Creates a TerminalModel resource.",
        "responses": {
          "201": {
            "description": "TerminalModel resource created",
            "schema": { "$ref": "#/definitions/TerminalModel" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "terminalModel",
            "in": "body",
            "description": "The new TerminalModel resource",
            "schema": { "$ref": "#/definitions/TerminalModel" }
          }
        ]
      }
    },
    "/terminal_models/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getTerminalModelItem",
        "summary": "Retrieves a TerminalModel resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "TerminalModel resource response",
            "schema": { "$ref": "#/definitions/TerminalModel-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": ["application/json", "application/ld+json"],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putTerminalModelItem",
        "summary": "Replaces the TerminalModel resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "terminalModel",
            "in": "body",
            "description": "The updated TerminalModel resource",
            "schema": { "$ref": "#/definitions/TerminalModel" }
          }
        ],
        "responses": {
          "200": {
            "description": "TerminalModel resource updated",
            "schema": { "$ref": "#/definitions/TerminalModel" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteTerminalModelItem",
        "summary": "Removes the TerminalModel resource.",
        "responses": {
          "204": { "description": "TerminalModel resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/timezones": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getTimezoneCollection",
        "summary": "Retrieves the collection of Timezone resources.",
        "responses": {
          "200": {
            "description": "Timezone collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Timezone-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "country[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "country[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          { "name": "tz", "in": "query", "required": false, "type": "string" },
          {
            "name": "tz[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tz[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tz[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tz[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tz[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[tz]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "name": "_pagination",
            "in": "query",
            "required": false,
            "description": "Enable or disable pagination",
            "type": "boolean"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      }
    },
    "/timezones/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getTimezoneItem",
        "summary": "Retrieves a Timezone resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Timezone resource response",
            "schema": { "$ref": "#/definitions/Timezone-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      }
    },
    "/web_portals": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getWebPortalCollection",
        "summary": "Retrieves the collection of WebPortal resources.",
        "responses": {
          "200": {
            "description": "WebPortal collection response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/WebPortal-collection" }
            },
            "headers": {
              "X-Total-Items": { "type": "integer" },
              "X-Total-Pages": { "type": "integer" },
              "X-First-Page": { "type": "string" },
              "X-Next-Page": { "type": "string" },
              "X-Last-Page": { "type": "string" }
            }
          }
        },
        "parameters": [
          {
            "name": "brand",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "brand[]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "brand[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[logo.baseName]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[logo.fileSize]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[logo.mimeType]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exists[name]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id[exact]",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "id[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.baseName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.baseName[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.baseName[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.baseName[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.baseName[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.baseName[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "logo.baseName[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.fileSize",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "logo.fileSize[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "logo.fileSize[gt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.fileSize[gte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.fileSize[lt]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.fileSize[lte]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.fileSize[between]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.fileSize[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.mimeType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.mimeType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.mimeType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.mimeType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.mimeType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.mimeType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logo.mimeType[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name[exists]",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          { "name": "url", "in": "query", "required": false, "type": "string" },
          {
            "name": "urlType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "urlType[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "urlType[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "urlType[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "urlType[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "urlType[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "url[exact]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "url[neq]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "url[start]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "url[partial]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "url[end]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[id]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[logo.baseName]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[logo.fileSize]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[logo.mimeType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[name]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[urlType]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "enum": ["ASC", "DESC"],
            "name": "_order[url]",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "_itemsPerPage",
            "in": "query",
            "required": false,
            "description": "The number of items per page",
            "type": "integer"
          },
          {
            "name": "_page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          },
          {
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
            "name": "_properties[]",
            "type": "array",
            "items": { "type": "string" },
            "in": "query",
            "required": false,
            "collectionFormat": "multi"
          }
        ]
      },
      "post": {
        "consumes": [
          "multipart/form-data",
          "application/json",
          "application/ld+json"
        ],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "postWebPortalCollection",
        "summary": "Creates a WebPortal resource.",
        "responses": {
          "201": {
            "description": "WebPortal resource created",
            "schema": { "$ref": "#/definitions/WebPortal" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        },
        "parameters": [
          {
            "name": "webPortal",
            "in": "formData",
            "description": "The new WebPortal resource",
            "type": "string"
          },
          {
            "name": "Logo",
            "in": "formData",
            "type": "file",
            "required": false
          }
        ]
      }
    },
    "/web_portals/{id}": {
      "get": {
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "getWebPortalItem",
        "summary": "Retrieves a WebPortal resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "WebPortal resource response",
            "schema": { "$ref": "#/definitions/WebPortal-detailed" }
          },
          "404": { "description": "Resource not found" }
        }
      },
      "put": {
        "consumes": [
          "multipart/form-data",
          "application/json",
          "application/ld+json"
        ],
        "produces": ["application/json", "application/ld+json"],
        "tags": ["Provider"],
        "operationId": "putWebPortalItem",
        "summary": "Replaces the WebPortal resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "webPortal",
            "in": "formData",
            "description": "The updated WebPortal resource",
            "type": "string"
          },
          {
            "name": "Logo",
            "in": "formData",
            "type": "file",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "WebPortal resource updated",
            "schema": { "$ref": "#/definitions/WebPortal" }
          },
          "400": { "description": "Invalid input" },
          "404": { "description": "Resource not found" },
          "422": { "description": "Unprocessable entity" }
        }
      },
      "delete": {
        "tags": ["Provider"],
        "operationId": "deleteWebPortalItem",
        "summary": "Removes the WebPortal resource.",
        "responses": {
          "204": { "description": "WebPortal resource deleted" },
          "404": { "description": "Resource not found" }
        },
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          {
            "name": "_rmAlso[]",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/web_portals/{id}/logo": {
      "get": {
        "produces": ["application/octet-stream"],
        "responses": {
          "200": {
            "description": "#/definitions/WebPortal_Logo",
            "schema": { "type": "file" }
          },
          "404": { "description": "Resource not found" }
        },
        "tags": ["Provider"],
        "operationId": "/webportal_logoWebPortalItem",
        "summary": "Retrieves a WebPortal resource.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ]
      }
    }
  },
  "security": [{ "bearer": [] }],
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "in": "header",
      "description": "Value for the Authorization header",
      "name": "Authorization"
    }
  },
  "definitions": {
    "ActiveCalls": {
      "type": "object",
      "properties": {
        "inbound": { "description": "", "type": "integer" },
        "outbound": { "description": "", "type": "integer" },
        "total": { "description": "", "type": "integer" }
      }
    },
    "Administrator": {
      "type": "object",
      "required": ["username", "pass", "email", "active", "restricted"],
      "properties": {
        "username": { "maxLength": 65, "description": "", "type": "string" },
        "pass": { "maxLength": 80, "description": "", "type": "string" },
        "email": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "active": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "restricted": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "lastname": { "maxLength": 100, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "brand": { "description": "", "type": "integer" },
        "company": { "description": "", "type": "integer" },
        "timezone": { "description": "", "type": "integer" }
      }
    },
    "Administrator-collection": {
      "type": "object",
      "required": ["active", "restricted", "username", "email"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "active": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "restricted": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "username": { "maxLength": 65, "description": "", "type": "string" },
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "lastname": { "maxLength": 100, "description": "", "type": "string" },
        "email": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        }
      }
    },
    "Administrator-detailed": {
      "type": "object",
      "required": ["username", "pass", "email", "active", "restricted"],
      "properties": {
        "username": { "maxLength": 65, "description": "", "type": "string" },
        "pass": { "maxLength": 80, "description": "", "type": "string" },
        "email": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "active": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "restricted": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "lastname": { "maxLength": 100, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "brand": { "$ref": "#/definitions/Brand" },
        "company": { "$ref": "#/definitions/Company" },
        "timezone": { "$ref": "#/definitions/Timezone" }
      }
    },
    "AdministratorRelPublicEntity": {
      "type": "object",
      "required": [
        "create",
        "read",
        "update",
        "delete",
        "administrator",
        "publicEntity"
      ],
      "properties": {
        "create": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "read": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "update": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "delete": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "administrator": { "description": "", "type": "integer" },
        "publicEntity": { "description": "", "type": "integer" }
      }
    },
    "AdministratorRelPublicEntity-collection": {
      "type": "object",
      "required": [
        "create",
        "read",
        "update",
        "delete",
        "administrator",
        "publicEntity"
      ],
      "properties": {
        "create": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "read": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "update": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "delete": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "administrator": { "description": "", "type": "integer" },
        "publicEntity": { "description": "", "type": "integer" }
      }
    },
    "AdministratorRelPublicEntity-detailed": {
      "type": "object",
      "required": [
        "create",
        "read",
        "update",
        "delete",
        "administrator",
        "publicEntity"
      ],
      "properties": {
        "create": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "read": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "update": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "delete": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "administrator": { "$ref": "#/definitions/Administrator" },
        "publicEntity": { "$ref": "#/definitions/PublicEntity" }
      }
    },
    "ApplicationServer": {
      "type": "object",
      "required": ["ip", "name"],
      "properties": {
        "ip": { "maxLength": 50, "description": "", "type": "string" },
        "name": { "maxLength": 64, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "ApplicationServer-collection": {
      "type": "object",
      "required": ["name", "ip"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 64, "description": "", "type": "string" },
        "ip": { "maxLength": 50, "description": "", "type": "string" }
      }
    },
    "ApplicationServer-detailed": {
      "type": "object",
      "required": ["ip", "name"],
      "properties": {
        "ip": { "maxLength": 50, "description": "", "type": "string" },
        "name": { "maxLength": 64, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "BannedAddress-collection": {
      "type": "object",
      "properties": {
        "ip": { "maxLength": 50, "description": "", "type": "string" },
        "lastTimeBanned": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "blocker": {
          "enum": ["antiflood", "ipfilter", "antibruteforce"],
          "maxLength": 50,
          "description": "",
          "type": "string"
        },
        "aor": { "maxLength": 300, "description": "", "type": "string" }
      }
    },
    "BannedAddress-detailed": {
      "type": "object",
      "properties": {
        "ip": { "maxLength": 50, "description": "", "type": "string" },
        "blocker": {
          "enum": ["antiflood", "ipfilter", "antibruteforce"],
          "maxLength": 50,
          "description": "",
          "type": "string"
        },
        "aor": { "maxLength": 300, "description": "", "type": "string" },
        "description": {
          "maxLength": 100,
          "description": "",
          "type": "string"
        },
        "lastTimeBanned": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "BillableCall": {
      "type": "object",
      "properties": {
        "callid": { "maxLength": 255, "description": "", "type": "string" },
        "startTime": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "duration": {
          "default": 0,
          "format": "float",
          "description": "",
          "example": "0",
          "type": "number"
        },
        "caller": { "maxLength": 128, "description": "", "type": "string" },
        "callee": { "maxLength": 128, "description": "", "type": "string" },
        "cost": { "format": "float", "description": "", "type": "number" },
        "price": { "format": "float", "description": "", "type": "number" },
        "priceDetails": {
          "description": "",
          "type": "array",
          "items": { "type": "string" }
        },
        "carrierName": {
          "maxLength": 200,
          "description": "",
          "type": "string"
        },
        "destinationName": {
          "maxLength": 100,
          "description": "",
          "type": "string"
        },
        "ratingPlanName": {
          "maxLength": 55,
          "description": "",
          "type": "string"
        },
        "endpointType": {
          "enum": [
            "RetailAccount",
            "ResidentialDevice",
            "User",
            "Friend",
            "Fax"
          ],
          "maxLength": 55,
          "description": "",
          "type": "string"
        },
        "endpointId": { "minimum": 0, "description": "", "type": "integer" },
        "endpointName": {
          "maxLength": 65,
          "description": "",
          "type": "string"
        },
        "direction": {
          "default": "outbound",
          "enum": ["inbound", "outbound"],
          "description": "",
          "example": "outbound",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "brand": { "description": "", "type": "integer" },
        "company": { "description": "", "type": "integer" },
        "carrier": { "description": "", "type": "integer" },
        "invoice": { "description": "", "type": "integer" },
        "ddi": { "description": "", "type": "integer" },
        "ddiProvider": { "description": "", "type": "integer" }
      },
      "required": ["duration", "direction"]
    },
    "BillableCall-collection": {
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "direction": {
          "default": "outbound",
          "enum": ["inbound", "outbound"],
          "description": "",
          "example": "outbound",
          "type": "string"
        },
        "duration": {
          "default": 0,
          "format": "float",
          "description": "",
          "example": "0",
          "type": "number"
        },
        "caller": { "maxLength": 128, "description": "", "type": "string" },
        "callee": { "maxLength": 128, "description": "", "type": "string" },
        "cost": { "format": "float", "description": "", "type": "number" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "price": { "format": "float", "description": "", "type": "number" },
        "callid": { "maxLength": 255, "description": "", "type": "string" },
        "brand": { "description": "", "type": "integer" },
        "company": { "description": "", "type": "integer" },
        "carrier": { "description": "", "type": "integer" },
        "ddiProvider": { "description": "", "type": "integer" },
        "invoice": { "description": "", "type": "integer" },
        "endpointType": {
          "enum": [
            "RetailAccount",
            "ResidentialDevice",
            "User",
            "Friend",
            "Fax"
          ],
          "maxLength": 55,
          "description": "",
          "type": "string"
        },
        "endpointId": { "minimum": 0, "description": "", "type": "integer" },
        "endpointName": {
          "maxLength": 65,
          "description": "",
          "type": "string"
        },
        "ddi": { "description": "", "type": "integer" }
      },
      "required": ["direction", "duration"]
    },
    "BillableCall-detailed": {
      "type": "object",
      "properties": {
        "callid": { "maxLength": 255, "description": "", "type": "string" },
        "startTime": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "duration": {
          "default": 0,
          "format": "float",
          "description": "",
          "example": "0",
          "type": "number"
        },
        "caller": { "maxLength": 128, "description": "", "type": "string" },
        "callee": { "maxLength": 128, "description": "", "type": "string" },
        "cost": { "format": "float", "description": "", "type": "number" },
        "price": { "format": "float", "description": "", "type": "number" },
        "priceDetails": {
          "description": "",
          "type": "array",
          "items": { "type": "string" }
        },
        "carrierName": {
          "maxLength": 200,
          "description": "",
          "type": "string"
        },
        "destinationName": {
          "maxLength": 100,
          "description": "",
          "type": "string"
        },
        "ratingPlanName": {
          "maxLength": 55,
          "description": "",
          "type": "string"
        },
        "endpointType": {
          "enum": [
            "RetailAccount",
            "ResidentialDevice",
            "User",
            "Friend",
            "Fax"
          ],
          "maxLength": 55,
          "description": "",
          "type": "string"
        },
        "endpointId": { "minimum": 0, "description": "", "type": "integer" },
        "endpointName": {
          "maxLength": 65,
          "description": "",
          "type": "string"
        },
        "direction": {
          "default": "outbound",
          "enum": ["inbound", "outbound"],
          "description": "",
          "example": "outbound",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "brand": { "$ref": "#/definitions/Brand" },
        "company": { "$ref": "#/definitions/Company" },
        "carrier": { "$ref": "#/definitions/Carrier" },
        "invoice": { "$ref": "#/definitions/Invoice" },
        "ddi": { "$ref": "#/definitions/Ddi" },
        "ddiProvider": { "$ref": "#/definitions/DdiProvider" }
      },
      "required": ["duration", "direction"]
    },
    "BillableCall-rating": {
      "type": "object",
      "properties": {
        "id": { "readOnly": true, "description": "", "type": "integer" },
        "price": { "format": "float", "description": "", "type": "number" },
        "cost": { "format": "float", "description": "", "type": "number" },
        "destinationName": {
          "maxLength": 100,
          "description": "",
          "type": "string"
        },
        "ratingPlanName": {
          "maxLength": 55,
          "description": "",
          "type": "string"
        }
      }
    },
    "Brand": {
      "type": "object",
      "required": [
        "name",
        "maxCalls",
        "language",
        "defaultTimezone",
        "currency"
      ],
      "properties": {
        "name": { "maxLength": 75, "description": "", "type": "string" },
        "domainUsers": {
          "maxLength": 190,
          "description": "",
          "type": "string"
        },
        "maxCalls": {
          "default": 0,
          "minimum": 0,
          "description": "",
          "example": "0",
          "type": "integer"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "logo": { "$ref": "#/definitions/Brand_Logo" },
        "invoice": { "$ref": "#/definitions/Brand_Invoice" },
        "language": { "description": "", "type": "integer" },
        "defaultTimezone": { "description": "", "type": "integer" },
        "currency": { "description": "", "type": "integer" },
        "voicemailNotificationTemplate": {
          "description": "",
          "type": "integer"
        },
        "faxNotificationTemplate": { "description": "", "type": "integer" },
        "invoiceNotificationTemplate": { "description": "", "type": "integer" },
        "callCsvNotificationTemplate": { "description": "", "type": "integer" },
        "maxDailyUsageNotificationTemplate": {
          "description": "",
          "type": "integer"
        }
      }
    },
    "Brand-collection": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 75, "description": "", "type": "string" },
        "invoice": { "$ref": "#/definitions/Brand_Invoice" },
        "logo": { "$ref": "#/definitions/Brand_Logo" },
        "domainUsers": {
          "maxLength": 190,
          "description": "",
          "type": "string"
        },
        "features": {
          "description": "Active feature ids",
          "type": "array",
          "items": { "type": "integer" }
        },
        "proxyTrunks": {
          "description": "Active proxyTrunks ids",
          "type": "array",
          "items": { "type": "integer" }
        }
      }
    },
    "Brand-detailed": {
      "type": "object",
      "required": [
        "name",
        "maxCalls",
        "language",
        "defaultTimezone",
        "currency"
      ],
      "properties": {
        "name": { "maxLength": 75, "description": "", "type": "string" },
        "domainUsers": {
          "maxLength": 190,
          "description": "",
          "type": "string"
        },
        "maxCalls": {
          "default": 0,
          "minimum": 0,
          "description": "",
          "example": "0",
          "type": "integer"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "logo": { "$ref": "#/definitions/Brand_Logo" },
        "invoice": { "$ref": "#/definitions/Brand_Invoice" },
        "language": { "$ref": "#/definitions/Language" },
        "defaultTimezone": { "$ref": "#/definitions/Timezone" },
        "currency": { "$ref": "#/definitions/Currency" },
        "voicemailNotificationTemplate": {
          "$ref": "#/definitions/NotificationTemplate"
        },
        "faxNotificationTemplate": {
          "$ref": "#/definitions/NotificationTemplate"
        },
        "invoiceNotificationTemplate": {
          "$ref": "#/definitions/NotificationTemplate"
        },
        "callCsvNotificationTemplate": {
          "$ref": "#/definitions/NotificationTemplate"
        },
        "maxDailyUsageNotificationTemplate": {
          "$ref": "#/definitions/NotificationTemplate"
        },
        "features": {
          "description": "Active feature ids",
          "type": "array",
          "items": { "type": "integer" }
        }
      }
    },
    "Brand-withFeatures": {
      "type": "object",
      "required": [
        "name",
        "maxCalls",
        "language",
        "defaultTimezone",
        "currency"
      ],
      "properties": {
        "name": { "maxLength": 75, "description": "", "type": "string" },
        "domainUsers": {
          "maxLength": 190,
          "description": "",
          "type": "string"
        },
        "maxCalls": {
          "default": 0,
          "minimum": 0,
          "description": "",
          "example": "0",
          "type": "integer"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "logo": { "$ref": "#/definitions/Brand_Logo" },
        "invoice": { "$ref": "#/definitions/Brand_Invoice" },
        "language": { "$ref": "#/definitions/Language" },
        "defaultTimezone": { "$ref": "#/definitions/Timezone" },
        "currency": { "$ref": "#/definitions/Currency" },
        "voicemailNotificationTemplate": {
          "$ref": "#/definitions/NotificationTemplate"
        },
        "faxNotificationTemplate": {
          "$ref": "#/definitions/NotificationTemplate"
        },
        "invoiceNotificationTemplate": {
          "$ref": "#/definitions/NotificationTemplate"
        },
        "callCsvNotificationTemplate": {
          "$ref": "#/definitions/NotificationTemplate"
        },
        "maxDailyUsageNotificationTemplate": {
          "$ref": "#/definitions/NotificationTemplate"
        },
        "features": {
          "description": "Active feature ids",
          "type": "array",
          "items": { "type": "integer" }
        }
      }
    },
    "BrandService": {
      "type": "object",
      "required": ["code", "brand", "service"],
      "properties": {
        "code": { "maxLength": 3, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "brand": { "description": "", "type": "integer" },
        "service": { "description": "", "type": "integer" }
      }
    },
    "BrandService-collection": {
      "type": "object",
      "required": ["code", "service"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "code": { "maxLength": 3, "description": "", "type": "string" },
        "service": { "description": "", "type": "integer" }
      }
    },
    "BrandService-detailed": {
      "type": "object",
      "required": ["code", "brand", "service"],
      "properties": {
        "code": { "maxLength": 3, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "brand": { "$ref": "#/definitions/Brand" },
        "service": { "$ref": "#/definitions/Service" }
      }
    },
    "Brand_Invoice": {
      "type": "object",
      "required": [
        "nif",
        "postalAddress",
        "postalCode",
        "town",
        "province",
        "country"
      ],
      "properties": {
        "nif": { "maxLength": 25, "description": "", "type": "string" },
        "postalAddress": {
          "maxLength": 255,
          "description": "",
          "type": "string"
        },
        "postalCode": { "maxLength": 10, "description": "", "type": "string" },
        "town": { "maxLength": 255, "description": "", "type": "string" },
        "province": { "maxLength": 255, "description": "", "type": "string" },
        "country": { "maxLength": 255, "description": "", "type": "string" },
        "registryData": {
          "maxLength": 1024,
          "description": "",
          "type": "string"
        }
      }
    },
    "Brand_Logo": {
      "type": "object",
      "properties": {
        "fileSize": { "minimum": 0, "description": "", "type": "integer" },
        "mimeType": { "maxLength": 80, "description": "", "type": "string" },
        "baseName": { "maxLength": 255, "description": "", "type": "string" }
      }
    },
    "Carrier": {
      "type": "object",
      "required": ["description", "name", "brand"],
      "properties": {
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "name": { "maxLength": 200, "description": "", "type": "string" },
        "externallyRated": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "balance": {
          "default": 0,
          "format": "float",
          "description": "",
          "example": "0.0000",
          "type": "number"
        },
        "calculateCost": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "brand": { "description": "", "type": "integer" },
        "currency": { "description": "", "type": "integer" },
        "proxyTrunk": { "description": "", "type": "integer" },
        "mediaRelaySets": { "description": "", "type": "integer" }
      }
    },
    "Company": {
      "type": "object",
      "required": [
        "type",
        "name",
        "nif",
        "distributeMethod",
        "maxCalls",
        "maxDailyUsage",
        "postalAddress",
        "postalCode",
        "town",
        "province",
        "countryName",
        "allowRecordingRemoval",
        "billingMethod",
        "brand",
        "country"
      ],
      "properties": {
        "type": {
          "default": "vpbx",
          "enum": ["vpbx", "retail", "wholesale", "residential"],
          "maxLength": 25,
          "description": "",
          "example": "vpbx",
          "type": "string"
        },
        "name": { "maxLength": 80, "description": "", "type": "string" },
        "domainUsers": {
          "maxLength": 190,
          "description": "",
          "type": "string"
        },
        "nif": { "maxLength": 25, "description": "", "type": "string" },
        "distributeMethod": {
          "default": "hash",
          "enum": ["static", "rr", "hash"],
          "maxLength": 25,
          "description": "",
          "example": "hash",
          "type": "string"
        },
        "maxCalls": {
          "default": 0,
          "minimum": 0,
          "description": "",
          "example": "0",
          "type": "integer"
        },
        "maxDailyUsage": {
          "default": 1000000,
          "minimum": 0,
          "description": "",
          "example": "1000000",
          "type": "integer"
        },
        "currentDayUsage": {
          "default": 0,
          "format": "float",
          "description": "",
          "example": "0.0000",
          "type": "number"
        },
        "maxDailyUsageEmail": {
          "maxLength": 100,
          "description": "",
          "type": "string"
        },
        "postalAddress": {
          "maxLength": 255,
          "description": "",
          "type": "string"
        },
        "postalCode": { "maxLength": 10, "description": "", "type": "string" },
        "town": { "maxLength": 255, "description": "", "type": "string" },
        "province": { "maxLength": 255, "description": "", "type": "string" },
        "countryName": {
          "maxLength": 255,
          "description": "",
          "type": "string"
        },
        "ipfilter": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "onDemandRecord": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "integer"
        },
        "allowRecordingRemoval": {
          "default": 1,
          "description": "",
          "example": "1",
          "type": "boolean"
        },
        "onDemandRecordCode": {
          "maxLength": 3,
          "description": "",
          "type": "string"
        },
        "externallyextraopts": {
          "maxLength": 65535,
          "description": "",
          "type": "string"
        },
        "recordingsLimitMB": { "description": "", "type": "integer" },
        "recordingsLimitEmail": {
          "maxLength": 250,
          "description": "",
          "type": "string"
        },
        "billingMethod": {
          "default": "postpaid",
          "enum": ["postpaid", "prepaid", "pseudoprepaid", "none"],
          "maxLength": 25,
          "description": "",
          "example": "postpaid",
          "type": "string"
        },
        "balance": {
          "default": 0,
          "format": "float",
          "description": "",
          "example": "0.0000",
          "type": "number"
        },
        "showInvoices": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "language": { "description": "", "type": "integer" },
        "mediaRelaySets": { "description": "", "type": "integer" },
        "defaultTimezone": { "description": "", "type": "integer" },
        "brand": { "description": "", "type": "integer" },
        "applicationServer": { "description": "", "type": "integer" },
        "country": { "description": "", "type": "integer" },
        "currency": { "description": "", "type": "integer" },
        "outgoingDdi": { "description": "", "type": "integer" },
        "voicemailNotificationTemplate": {
          "description": "",
          "type": "integer"
        },
        "faxNotificationTemplate": { "description": "", "type": "integer" },
        "invoiceNotificationTemplate": { "description": "", "type": "integer" },
        "callCsvNotificationTemplate": { "description": "", "type": "integer" },
        "maxDailyUsageNotificationTemplate": {
          "description": "",
          "type": "integer"
        }
      }
    },
    "Country": {
      "type": "object",
      "required": ["code"],
      "properties": {
        "code": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "countryCode": { "maxLength": 10, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/Country_Name" },
        "zone": { "$ref": "#/definitions/Country_Zone" }
      }
    },
    "Country-collection": {
      "type": "object",
      "required": ["code"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "code": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "countryCode": { "maxLength": 10, "description": "", "type": "string" },
        "name": { "$ref": "#/definitions/Country_Name" }
      }
    },
    "Country-detailed": {
      "type": "object",
      "required": ["code"],
      "properties": {
        "code": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "countryCode": { "maxLength": 10, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/Country_Name" },
        "zone": { "$ref": "#/definitions/Country_Zone" }
      }
    },
    "Country_Name": {
      "type": "object",
      "required": ["en", "es", "ca", "it"],
      "properties": {
        "en": { "maxLength": 100, "description": "", "type": "string" },
        "es": { "maxLength": 100, "description": "", "type": "string" },
        "ca": { "maxLength": 100, "description": "", "type": "string" },
        "it": { "maxLength": 100, "description": "", "type": "string" }
      }
    },
    "Country_Zone": {
      "type": "object",
      "required": ["en", "es", "ca", "it"],
      "properties": {
        "en": {
          "default": "",
          "maxLength": 55,
          "description": "",
          "example": "",
          "type": "string"
        },
        "es": {
          "default": "",
          "maxLength": 55,
          "description": "",
          "example": "",
          "type": "string"
        },
        "ca": {
          "default": "",
          "maxLength": 55,
          "description": "",
          "example": "",
          "type": "string"
        },
        "it": {
          "default": "",
          "maxLength": 55,
          "description": "",
          "example": "",
          "type": "string"
        }
      }
    },
    "Currency": {
      "type": "object",
      "required": ["iden", "symbol"],
      "properties": {
        "iden": { "maxLength": 10, "description": "", "type": "string" },
        "symbol": { "maxLength": 5, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/Currency_Name" }
      }
    },
    "Currency-collection": {
      "type": "object",
      "required": ["iden", "symbol"],
      "properties": {
        "iden": { "maxLength": 10, "description": "", "type": "string" },
        "symbol": { "maxLength": 5, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/Currency_Name" }
      }
    },
    "Currency-detailed": {
      "type": "object",
      "required": ["iden", "symbol"],
      "properties": {
        "iden": { "maxLength": 10, "description": "", "type": "string" },
        "symbol": { "maxLength": 5, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/Currency_Name" }
      }
    },
    "Currency_Name": {
      "type": "object",
      "required": ["en", "es", "ca", "it"],
      "properties": {
        "en": {
          "default": "",
          "maxLength": 25,
          "description": "",
          "example": "",
          "type": "string"
        },
        "es": {
          "default": "",
          "maxLength": 25,
          "description": "",
          "example": "",
          "type": "string"
        },
        "ca": {
          "default": "",
          "maxLength": 25,
          "description": "",
          "example": "",
          "type": "string"
        },
        "it": {
          "default": "",
          "maxLength": 25,
          "description": "",
          "example": "",
          "type": "string"
        }
      }
    },
    "Ddi": {
      "type": "object",
      "required": ["ddi", "recordCalls", "type", "company", "brand"],
      "properties": {
        "ddi": { "maxLength": 25, "description": "", "type": "string" },
        "ddie164": { "maxLength": 25, "description": "", "type": "string" },
        "description": {
          "maxLength": 100,
          "description": "",
          "type": "string"
        },
        "recordCalls": {
          "default": "none",
          "enum": ["none", "all", "inbound", "outbound"],
          "maxLength": 25,
          "description": "",
          "example": "none",
          "type": "string"
        },
        "displayName": { "maxLength": 50, "description": "", "type": "string" },
        "routeType": {
          "enum": [
            "user",
            "ivr",
            "huntGroup",
            "fax",
            "conferenceRoom",
            "friend",
            "queue",
            "conditional",
            "residential",
            "retail"
          ],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "friendValue": { "maxLength": 25, "description": "", "type": "string" },
        "type": {
          "default": "inout",
          "enum": ["inout", "out"],
          "maxLength": 25,
          "description": "",
          "example": "inout",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "company": { "description": "", "type": "integer" },
        "brand": { "description": "", "type": "integer" },
        "language": { "description": "", "type": "integer" },
        "ddiProvider": { "description": "", "type": "integer" },
        "country": { "description": "", "type": "integer" }
      }
    },
    "DdiProvider": {
      "type": "object",
      "required": ["description", "name", "brand"],
      "properties": {
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "name": { "maxLength": 200, "description": "", "type": "string" },
        "externallyRated": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "brand": { "description": "", "type": "integer" },
        "proxyTrunk": { "description": "", "type": "integer" },
        "mediaRelaySets": { "description": "", "type": "integer" }
      }
    },
    "Domain-collection": {
      "type": "object",
      "required": ["domain", "pointsTo"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "domain": { "maxLength": 190, "description": "", "type": "string" },
        "pointsTo": {
          "default": "proxyusers",
          "enum": ["proxyusers", "proxytrunks"],
          "maxLength": 25,
          "description": "",
          "example": "proxyusers",
          "type": "string"
        },
        "brandName": { "description": "" },
        "companyName": { "description": "" }
      }
    },
    "Domain-detailed": {
      "type": "object",
      "required": ["domain", "pointsTo"],
      "properties": {
        "domain": { "maxLength": 190, "description": "", "type": "string" },
        "pointsTo": {
          "default": "proxyusers",
          "enum": ["proxyusers", "proxytrunks"],
          "maxLength": 25,
          "description": "",
          "example": "proxyusers",
          "type": "string"
        },
        "description": {
          "maxLength": 500,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "Feature": {
      "type": "object",
      "required": ["iden"],
      "properties": {
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/Feature_Name" }
      }
    },
    "Feature-collection": {
      "type": "object",
      "required": ["iden"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "name": { "$ref": "#/definitions/Feature_Name" }
      }
    },
    "Feature-detailed": {
      "type": "object",
      "required": ["iden"],
      "properties": {
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/Feature_Name" }
      }
    },
    "Feature_Name": {
      "type": "object",
      "required": ["en", "es", "ca", "it"],
      "properties": {
        "en": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        },
        "es": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        },
        "ca": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        },
        "it": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        }
      }
    },
    "FeaturesRelBrand": {
      "type": "object",
      "required": ["brand", "feature"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "brand": { "description": "", "type": "integer" },
        "feature": { "description": "", "type": "integer" }
      }
    },
    "FeaturesRelBrand-collection": {
      "type": "object",
      "required": ["brand", "feature"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "brand": { "description": "", "type": "integer" },
        "feature": { "description": "", "type": "integer" }
      }
    },
    "FeaturesRelBrand-detailed": {
      "type": "object",
      "required": ["brand", "feature"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "brand": { "$ref": "#/definitions/Brand" },
        "feature": { "$ref": "#/definitions/Feature" }
      }
    },
    "Invoice": {
      "type": "object",
      "properties": {
        "number": { "maxLength": 30, "description": "", "type": "string" },
        "inDate": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "outDate": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "total": { "format": "float", "description": "", "type": "number" },
        "taxRate": { "format": "float", "description": "", "type": "number" },
        "totalWithTax": {
          "format": "float",
          "description": "",
          "type": "number"
        },
        "status": {
          "enum": ["waiting", "processing", "created", "error"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "statusMsg": { "maxLength": 140, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "pdf": { "$ref": "#/definitions/Invoice_Pdf" },
        "invoiceTemplate": { "description": "", "type": "integer" },
        "brand": { "description": "", "type": "integer" },
        "company": { "description": "", "type": "integer" },
        "currency": { "description": "Invoice currency", "type": "string" }
      },
      "required": ["brand", "company"]
    },
    "InvoiceTemplate": {
      "type": "object",
      "required": ["name", "template"],
      "properties": {
        "name": { "maxLength": 55, "description": "", "type": "string" },
        "description": {
          "maxLength": 300,
          "description": "",
          "type": "string"
        },
        "template": { "maxLength": 65535, "description": "", "type": "string" },
        "templateHeader": {
          "maxLength": 65535,
          "description": "",
          "type": "string"
        },
        "templateFooter": {
          "maxLength": 65535,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "brand": { "description": "", "type": "integer" }
      }
    },
    "InvoiceTemplate-collection": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 55, "description": "", "type": "string" },
        "description": { "maxLength": 300, "description": "", "type": "string" }
      }
    },
    "InvoiceTemplate-detailed": {
      "type": "object",
      "required": ["name", "template"],
      "properties": {
        "name": { "maxLength": 55, "description": "", "type": "string" },
        "description": {
          "maxLength": 300,
          "description": "",
          "type": "string"
        },
        "template": { "maxLength": 65535, "description": "", "type": "string" },
        "templateHeader": {
          "maxLength": 65535,
          "description": "",
          "type": "string"
        },
        "templateFooter": {
          "maxLength": 65535,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "brand": { "$ref": "#/definitions/Brand" }
      }
    },
    "Invoice_Pdf": {
      "type": "object",
      "properties": {
        "fileSize": { "minimum": 0, "description": "", "type": "integer" },
        "mimeType": { "maxLength": 80, "description": "", "type": "string" },
        "baseName": { "maxLength": 255, "description": "", "type": "string" }
      }
    },
    "Language": {
      "type": "object",
      "required": ["iden"],
      "properties": {
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/Language_Name" }
      }
    },
    "Language-collection": {
      "type": "object",
      "required": ["iden"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "name": { "$ref": "#/definitions/Language_Name" }
      }
    },
    "Language-detailed": {
      "type": "object",
      "required": ["iden"],
      "properties": {
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/Language_Name" }
      }
    },
    "Language_Name": {
      "type": "object",
      "required": ["en", "es", "ca", "it"],
      "properties": {
        "en": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "es": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "ca": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "it": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        }
      }
    },
    "MediaRelaySet": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": {
          "default": "0",
          "maxLength": 32,
          "description": "",
          "example": "0",
          "type": "string"
        },
        "description": {
          "maxLength": 200,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "MediaRelaySet-collection": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": {
          "default": "0",
          "maxLength": 32,
          "description": "",
          "example": "0",
          "type": "string"
        },
        "description": {
          "maxLength": 200,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "MediaRelaySet-detailed": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": {
          "default": "0",
          "maxLength": 32,
          "description": "",
          "example": "0",
          "type": "string"
        },
        "description": {
          "maxLength": 200,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "NotificationTemplate": {
      "type": "object",
      "required": ["name", "type"],
      "properties": {
        "name": { "maxLength": 55, "description": "", "type": "string" },
        "type": {
          "enum": [
            "voicemail",
            "fax",
            "limit",
            "lowbalance",
            "invoice",
            "callCsv",
            "maxDailyUsage"
          ],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "brand": { "description": "", "type": "integer" }
      }
    },
    "NotificationTemplate-collection": {
      "type": "object",
      "required": ["name", "type"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 55, "description": "", "type": "string" },
        "type": {
          "enum": [
            "voicemail",
            "fax",
            "limit",
            "lowbalance",
            "invoice",
            "callCsv",
            "maxDailyUsage"
          ],
          "maxLength": 25,
          "description": "",
          "type": "string"
        }
      }
    },
    "NotificationTemplate-detailed": {
      "type": "object",
      "required": ["name", "type"],
      "properties": {
        "name": { "maxLength": 55, "description": "", "type": "string" },
        "type": {
          "enum": [
            "voicemail",
            "fax",
            "limit",
            "lowbalance",
            "invoice",
            "callCsv",
            "maxDailyUsage"
          ],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "brand": { "$ref": "#/definitions/Brand" }
      }
    },
    "NotificationTemplateContent": {
      "type": "object",
      "properties": {
        "fromName": { "maxLength": 255, "description": "", "type": "string" },
        "fromAddress": {
          "maxLength": 255,
          "description": "",
          "type": "string"
        },
        "subject": { "maxLength": 255, "description": "", "type": "string" },
        "body": { "maxLength": 65535, "description": "", "type": "string" },
        "bodyType": {
          "default": "text/plain",
          "enum": ["text/plain", "text/html"],
          "maxLength": 25,
          "description": "",
          "example": "text/plain",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "notificationTemplate": { "description": "", "type": "integer" },
        "language": { "description": "", "type": "integer" }
      },
      "required": ["subject", "body", "bodyType", "notificationTemplate"]
    },
    "NotificationTemplateContent-collection": {
      "type": "object",
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "fromName": { "maxLength": 255, "description": "", "type": "string" },
        "fromAddress": {
          "maxLength": 255,
          "description": "",
          "type": "string"
        },
        "language": { "description": "", "type": "integer" }
      }
    },
    "NotificationTemplateContent-detailed": {
      "type": "object",
      "properties": {
        "fromName": { "maxLength": 255, "description": "", "type": "string" },
        "fromAddress": {
          "maxLength": 255,
          "description": "",
          "type": "string"
        },
        "subject": { "maxLength": 255, "description": "", "type": "string" },
        "body": { "maxLength": 65535, "description": "", "type": "string" },
        "bodyType": {
          "default": "text/plain",
          "enum": ["text/plain", "text/html"],
          "maxLength": 25,
          "description": "",
          "example": "text/plain",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "notificationTemplate": {
          "$ref": "#/definitions/NotificationTemplate"
        },
        "language": { "$ref": "#/definitions/Language" }
      },
      "required": ["subject", "body", "bodyType", "notificationTemplate"]
    },
    "Profile": {
      "type": "object",
      "properties": {
        "restricted": { "description": "", "type": "boolean" },
        "acls": {
          "description": "",
          "type": "array",
          "items": { "$ref": "#/definitions/ProfileAcl" }
        }
      }
    },
    "ProfileAcl": {
      "type": "object",
      "properties": {
        "iden": { "description": "", "type": "string" },
        "create": { "description": "", "type": "boolean" },
        "read": { "description": "", "type": "boolean" },
        "update": { "description": "", "type": "boolean" },
        "delete": { "description": "", "type": "boolean" }
      }
    },
    "ProxyTrunk": {
      "type": "object",
      "properties": {
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "ip": { "maxLength": 50, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true }
      },
      "required": ["ip"]
    },
    "ProxyTrunk-collection": {
      "type": "object",
      "required": ["ip"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "ip": { "maxLength": 50, "description": "", "type": "string" }
      }
    },
    "ProxyTrunk-detailed": {
      "type": "object",
      "properties": {
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "ip": { "maxLength": 50, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true }
      },
      "required": ["ip"]
    },
    "ProxyTrunksRelBrand": {
      "type": "object",
      "required": ["brand", "proxyTrunk"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "brand": { "description": "", "type": "integer" },
        "proxyTrunk": { "description": "", "type": "integer" }
      }
    },
    "ProxyTrunksRelBrand-collection": {
      "type": "object",
      "required": ["brand", "proxyTrunk"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "brand": { "description": "", "type": "integer" },
        "proxyTrunk": { "description": "", "type": "integer" }
      }
    },
    "ProxyTrunksRelBrand-detailed": {
      "type": "object",
      "required": ["brand", "proxyTrunk"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "brand": { "$ref": "#/definitions/Brand" },
        "proxyTrunk": { "$ref": "#/definitions/ProxyTrunk" }
      }
    },
    "ProxyUser": {
      "type": "object",
      "properties": {
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "ip": { "maxLength": 50, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "ProxyUser-collection": {
      "type": "object",
      "properties": {
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "ip": { "maxLength": 50, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "ProxyUser-detailed": {
      "type": "object",
      "properties": {
        "name": { "maxLength": 100, "description": "", "type": "string" },
        "ip": { "maxLength": 50, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "PublicEntity": {
      "type": "object",
      "required": ["iden", "platform", "brand", "client"],
      "properties": {
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "fqdn": { "maxLength": 200, "description": "", "type": "string" },
        "platform": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "brand": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "client": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/PublicEntity_Name" }
      }
    },
    "PublicEntity-collection": {
      "type": "object",
      "required": ["iden"],
      "properties": {
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/PublicEntity_Name" }
      }
    },
    "PublicEntity-detailed": {
      "type": "object",
      "required": ["iden", "platform", "brand", "client"],
      "properties": {
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "fqdn": { "maxLength": 200, "description": "", "type": "string" },
        "platform": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "brand": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "client": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/PublicEntity_Name" }
      }
    },
    "PublicEntity_Name": {
      "type": "object",
      "properties": {
        "en": { "maxLength": 100, "description": "", "type": "string" },
        "es": { "maxLength": 100, "description": "", "type": "string" },
        "ca": { "maxLength": 100, "description": "", "type": "string" },
        "it": { "maxLength": 100, "description": "", "type": "string" }
      }
    },
    "Rtpengine": {
      "type": "object",
      "required": [
        "setid",
        "url",
        "weight",
        "disabled",
        "stamp",
        "mediaRelaySet"
      ],
      "properties": {
        "setid": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "integer"
        },
        "url": { "maxLength": 64, "description": "", "type": "string" },
        "weight": {
          "default": 1,
          "minimum": 0,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "disabled": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "stamp": {
          "default": "2000-01-01 00:00:00",
          "format": "date-time",
          "description": "",
          "example": "2000-01-01 00:00:00",
          "type": "string"
        },
        "description": {
          "maxLength": 200,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "mediaRelaySet": { "description": "", "type": "integer" }
      }
    },
    "Rtpengine-collection": {
      "type": "object",
      "required": ["url", "weight", "disabled"],
      "properties": {
        "url": { "maxLength": 64, "description": "", "type": "string" },
        "weight": {
          "default": 1,
          "minimum": 0,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "disabled": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "description": {
          "maxLength": 200,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "Rtpengine-detailed": {
      "type": "object",
      "required": [
        "setid",
        "url",
        "weight",
        "disabled",
        "stamp",
        "mediaRelaySet"
      ],
      "properties": {
        "setid": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "integer"
        },
        "url": { "maxLength": 64, "description": "", "type": "string" },
        "weight": {
          "default": 1,
          "minimum": 0,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "disabled": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "stamp": {
          "default": "2000-01-01 00:00:00",
          "format": "date-time",
          "description": "",
          "example": "2000-01-01 00:00:00",
          "type": "string"
        },
        "description": {
          "maxLength": 200,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "mediaRelaySet": { "$ref": "#/definitions/MediaRelaySet" }
      }
    },
    "Service": {
      "type": "object",
      "required": ["iden", "defaultCode", "extraArgs"],
      "properties": {
        "iden": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        },
        "defaultCode": { "maxLength": 3, "description": "", "type": "string" },
        "extraArgs": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/Service_Name" },
        "description": { "$ref": "#/definitions/Service_Description" }
      }
    },
    "Service-collection": {
      "type": "object",
      "required": ["iden", "defaultCode", "extraArgs"],
      "properties": {
        "iden": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        },
        "defaultCode": { "maxLength": 3, "description": "", "type": "string" },
        "extraArgs": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "name": { "$ref": "#/definitions/Service_Name" },
        "description": { "$ref": "#/definitions/Service_Description" },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "Service-detailed": {
      "type": "object",
      "required": ["iden", "defaultCode", "extraArgs"],
      "properties": {
        "iden": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        },
        "defaultCode": { "maxLength": 3, "description": "", "type": "string" },
        "extraArgs": {
          "default": 0,
          "description": "",
          "example": "0",
          "type": "boolean"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "name": { "$ref": "#/definitions/Service_Name" },
        "description": { "$ref": "#/definitions/Service_Description" }
      }
    },
    "Service_Description": {
      "type": "object",
      "required": ["en", "es", "ca", "it"],
      "properties": {
        "en": {
          "default": "",
          "maxLength": 255,
          "description": "",
          "example": "",
          "type": "string"
        },
        "es": {
          "default": "",
          "maxLength": 255,
          "description": "",
          "example": "",
          "type": "string"
        },
        "ca": {
          "default": "",
          "maxLength": 255,
          "description": "",
          "example": "",
          "type": "string"
        },
        "it": {
          "default": "",
          "maxLength": 255,
          "description": "",
          "example": "",
          "type": "string"
        }
      }
    },
    "Service_Name": {
      "type": "object",
      "required": ["en", "es", "ca", "it"],
      "properties": {
        "en": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        },
        "es": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        },
        "ca": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        },
        "it": {
          "default": "",
          "maxLength": 50,
          "description": "",
          "example": "",
          "type": "string"
        }
      }
    },
    "SpecialNumber": {
      "type": "object",
      "required": ["number", "disableCDR", "country"],
      "properties": {
        "number": { "maxLength": 25, "description": "", "type": "string" },
        "disableCDR": {
          "default": 1,
          "minimum": 0,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "country": { "description": "", "type": "integer" }
      }
    },
    "SpecialNumber-collection": {
      "type": "object",
      "required": ["number", "disableCDR", "country"],
      "properties": {
        "number": { "maxLength": 25, "description": "", "type": "string" },
        "disableCDR": {
          "default": 1,
          "minimum": 0,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "country": { "description": "", "type": "integer" }
      }
    },
    "SpecialNumber-detailed": {
      "type": "object",
      "required": ["number", "disableCDR", "country"],
      "properties": {
        "number": { "maxLength": 25, "description": "", "type": "string" },
        "disableCDR": {
          "default": 1,
          "minimum": 0,
          "description": "",
          "example": "1",
          "type": "integer"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "country": { "$ref": "#/definitions/Country" }
      }
    },
    "TerminalManufacturer": {
      "type": "object",
      "required": ["iden", "name", "description"],
      "properties": {
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "name": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "TerminalManufacturer-collection": {
      "type": "object",
      "required": ["iden", "name", "description"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "name": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        }
      }
    },
    "TerminalManufacturer-detailed": {
      "type": "object",
      "required": ["iden", "name", "description"],
      "properties": {
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "name": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true }
      }
    },
    "TerminalModel": {
      "type": "object",
      "required": ["iden", "name", "description", "terminalManufacturer"],
      "properties": {
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "name": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "genericTemplate": {
          "maxLength": 65535,
          "description": "",
          "type": "string"
        },
        "specificTemplate": {
          "maxLength": 65535,
          "description": "",
          "type": "string"
        },
        "genericUrlPattern": {
          "maxLength": 225,
          "description": "",
          "type": "string"
        },
        "specificUrlPattern": {
          "maxLength": 225,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "terminalManufacturer": { "description": "", "type": "integer" }
      }
    },
    "TerminalModel-collection": {
      "type": "object",
      "required": ["iden", "name", "description"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "name": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "genericTemplate": {
          "maxLength": 65535,
          "description": "",
          "type": "string"
        },
        "specificTemplate": {
          "maxLength": 65535,
          "description": "",
          "type": "string"
        }
      }
    },
    "TerminalModel-detailed": {
      "type": "object",
      "required": ["iden", "name", "description", "terminalManufacturer"],
      "properties": {
        "iden": { "maxLength": 100, "description": "", "type": "string" },
        "name": {
          "default": "",
          "maxLength": 100,
          "description": "",
          "example": "",
          "type": "string"
        },
        "description": {
          "default": "",
          "maxLength": 500,
          "description": "",
          "example": "",
          "type": "string"
        },
        "genericTemplate": {
          "maxLength": 65535,
          "description": "",
          "type": "string"
        },
        "specificTemplate": {
          "maxLength": 65535,
          "description": "",
          "type": "string"
        },
        "genericUrlPattern": {
          "maxLength": 225,
          "description": "",
          "type": "string"
        },
        "specificUrlPattern": {
          "maxLength": 225,
          "description": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "terminalManufacturer": { "$ref": "#/definitions/TerminalManufacturer" }
      }
    },
    "Timezone": {
      "type": "object",
      "required": ["tz"],
      "properties": {
        "tz": { "maxLength": 255, "description": "", "type": "string" },
        "comment": {
          "default": "",
          "maxLength": 150,
          "description": "",
          "example": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "label": { "$ref": "#/definitions/Timezone_Label" },
        "country": { "description": "", "type": "integer" }
      }
    },
    "Timezone-collection": {
      "type": "object",
      "required": ["tz"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "tz": { "maxLength": 255, "description": "", "type": "string" }
      }
    },
    "Timezone-detailed": {
      "type": "object",
      "required": ["tz"],
      "properties": {
        "tz": { "maxLength": 255, "description": "", "type": "string" },
        "comment": {
          "default": "",
          "maxLength": 150,
          "description": "",
          "example": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "label": { "$ref": "#/definitions/Timezone_Label" },
        "country": { "$ref": "#/definitions/Country" }
      }
    },
    "Timezone_Label": {
      "type": "object",
      "required": ["en", "es", "ca", "it"],
      "properties": {
        "en": {
          "default": "",
          "maxLength": 20,
          "description": "",
          "example": "",
          "type": "string"
        },
        "es": {
          "default": "",
          "maxLength": 20,
          "description": "",
          "example": "",
          "type": "string"
        },
        "ca": {
          "default": "",
          "maxLength": 20,
          "description": "",
          "example": "",
          "type": "string"
        },
        "it": {
          "default": "",
          "maxLength": 20,
          "description": "",
          "example": "",
          "type": "string"
        }
      }
    },
    "WebPortal": {
      "type": "object",
      "required": ["url", "urlType"],
      "properties": {
        "url": { "maxLength": 255, "description": "", "type": "string" },
        "klearTheme": {
          "default": "",
          "maxLength": 200,
          "description": "",
          "example": "",
          "type": "string"
        },
        "urlType": {
          "enum": ["god", "brand", "admin", "user"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "name": {
          "default": "",
          "maxLength": 200,
          "description": "",
          "example": "",
          "type": "string"
        },
        "userTheme": {
          "default": "",
          "maxLength": 200,
          "description": "",
          "example": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "logo": { "$ref": "#/definitions/WebPortal_Logo" },
        "brand": { "description": "", "type": "integer" }
      }
    },
    "WebPortal-collection": {
      "type": "object",
      "required": ["url", "urlType"],
      "properties": {
        "id": { "description": "", "type": "integer", "readOnly": true },
        "url": { "maxLength": 255, "description": "", "type": "string" },
        "name": {
          "default": "",
          "maxLength": 200,
          "description": "",
          "example": "",
          "type": "string"
        },
        "urlType": {
          "enum": ["god", "brand", "admin", "user"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "logo": { "$ref": "#/definitions/WebPortal_Logo" }
      }
    },
    "WebPortal-detailed": {
      "type": "object",
      "required": ["url", "urlType"],
      "properties": {
        "url": { "maxLength": 255, "description": "", "type": "string" },
        "klearTheme": {
          "default": "",
          "maxLength": 200,
          "description": "",
          "example": "",
          "type": "string"
        },
        "urlType": {
          "enum": ["god", "brand", "admin", "user"],
          "maxLength": 25,
          "description": "",
          "type": "string"
        },
        "name": {
          "default": "",
          "maxLength": 200,
          "description": "",
          "example": "",
          "type": "string"
        },
        "userTheme": {
          "default": "",
          "maxLength": 200,
          "description": "",
          "example": "",
          "type": "string"
        },
        "id": { "description": "", "type": "integer", "readOnly": true },
        "logo": { "$ref": "#/definitions/WebPortal_Logo" },
        "brand": { "$ref": "#/definitions/Brand" }
      }
    },
    "WebPortal_Logo": {
      "type": "object",
      "properties": {
        "fileSize": { "minimum": 0, "description": "", "type": "integer" },
        "mimeType": { "maxLength": 80, "description": "", "type": "string" },
        "baseName": { "maxLength": 255, "description": "", "type": "string" }
      }
    },
    "CarrierStatus": {
      "type": "object",
      "properties": { "registered": { "description": "", "type": "boolean" } }
    }
  }
}
