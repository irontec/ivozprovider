#include conf.d/mapperList.yaml
#include conf.d/actions.yaml
#include conf.d/documentationLink.yaml

production:
  main:
    module: klearMatrix
    defaultScreen: musicOnHoldList_screen
  screens: &musicOnHold_screensLink
    musicOnHoldList_screen: &musicOnHoldList_screenLink
      controller: list
      pagination:
        items: 25
      <<: *MusicOnHold
      class: ui-silk-music
      title: _("List of %s %2s", ngettext('Music on Hold', 'Musics on Hold', 0), "[format| (%parent%)]")
      info:
        <<: *documentationLink
        href: "/doc/${lang}/company/music_on_hold.html"
      forcedValues:
        <<: *forcedCompany
        "self::brand": null
      fields:
        options:
          title: _("Options")
          screens:
            musicOnHoldEdit_screen: true
          dialogs:
            musicOnHoldDel_dialog: true
          default: musicOnHoldEdit_screen
        order: &musicOnHold_orderLink
          company: true
          name: true
          originalFile: true
        blacklist:
          encodedFile: true
      options:
        title: _("Options")
        screens:
          musicOnHoldNew_screen: true
        dialogs:
          musicOnHoldDel_dialog: true

    musicOnHoldNew_screen: &musicOnHoldNew_screenLink
      <<: *MusicOnHold
      controller: new
      class: ui-silk-add
      label: true
      multiInstance: true
      title: _("Add %s %2s", ngettext('Music on Hold', 'Musics on Hold', 1), "[format| (%parent%)]")
      shortcutOption: N
      forcedValues:
        <<: *forcedCompany
        "self::brand": null
      fields:
        order:
          <<: *musicOnHold_orderLink
        blacklist:
          encodedFile: true
          status: true
      fixedPositions: &musicOnHold_fixedPosLink
        group0:
          colsPerRow: 2
          fields:
            company: 1
            name: 1
        group1:
          colsPerRow: 1
          fields:
            originalFile: 1
            encodedFile: 1

    musicOnHoldEdit_screen: &musicOnHoldEdit_screenLink
      <<: *MusicOnHold
      controller: edit
      class: ui-silk-pencil
      label: false
      title: _("Edit %s %2s", ngettext('Music on Hold', 'Musics on Hold', 1), "[format| (%item%)]")
      forcedValues:
        <<: *forcedCompany
        "self::brand": null
      fields:
        order:
          <<: *musicOnHold_orderLink
        blacklist:
          status: true
      fixedPositions:
        <<: *musicOnHold_fixedPosLink

  dialogs: &musicOnHold_dialogsLink
    musicOnHoldDel_dialog: &musicOnHoldDel_dialogLink
      <<: *MusicOnHold
      controller: delete
      class: ui-silk-bin
      labelOption: false
      title: _("Delete %s", ngettext('Music on Hold', 'Musics on Hold', 1))
      description: _("Do you want to delete this %s?", ngettext('Music on Hold', 'Musics on Hold', 1))
      message: _("%s successfully deleted.", ngettext('Music on Hold', 'Musics on Hold', 1))
      multiItem: 1
      labelOnList: 1

  commands: &musicOnHold_commandsLink
    musicOnHold_FileDownload_command:
      <<: *MusicOnHold
      controller: File
      action: force-download
      mainColumn: originalFile
    musicOnHold_FileUpload_command:
      <<: *MusicOnHold
      controller: File
      action: upload
      mainColumn: originalFile
    musicOnHold_FilePreview_command:
      <<: *MusicOnHold
      controller: File
      action: preview
      mainColumn: originalFile
staging:
  _extends: production
testing:
  _extends: production
development:
  _extends: production
localdev:
  _extends: production
