########################################
## Custom models
########################################
Model\Token:
  itemOperations: []
  collectionOperations:
    post_auth_token_exchange:
      method: 'POST'
      path: '/token/exchange'
      route_name: 'post_auth_token_exchange'
      swagger_context:
        consumes:
          - 'application/x-www-form-urlencoded'
        produces:
          - 'application/json'
        tags:
          - Auth
        parameters:
          - name: token
            in: formData
            type: string
            required: true
            description: 'Platform admin token'
          - name: username
            in: formData
            type: string
            required: false
            description: 'Target brand admin user name'
          - name: brandId
            in: formData
            type: integer
            required: false
            description: 'Target brand ID'

Model\ActiveCalls:
  itemOperations:
    get_my_active_calls:
      access_control: '"ROLE_BRAND_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
      method: 'GET'
      path: '/my/active_calls'
      route_name: 'get_my_active_calls'
      swagger_context:
        produces:
        - 'application/json'
        tags:
        - My
        parameters:
        - name: company
          in: query
          type: integer
          required: false
          description: 'Company Id'
    get_my_active_calls_realtime_filter:
      access_control: '"ROLE_BRAND_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
      method: 'GET'
      path: '/my/active_calls/realtime_filter'
      route_name: 'get_my_active_calls_realtime_filter'
      swagger_context:
        produces:
        - 'application/json'
        tags:
        - My
        parameters:
        - name: c
          in: query
          type: string
          required: false
          description: 'Company Id'
        - name: dp
          in: query
          type: string
          required: false
          description: 'DdiProvider Id'
        - name: cr
          in: query
          type: string
          required: false
          description: 'CarrierRegistration Id'
        - name: direction
          in: query
          required: false
          description: 'Direction'
          type: string
          enum:
            - inbound
            - outbound
        responses:
          200:
            description: 'Criteria response'
            schema:
              type: object
              properties:
                criteria:
                  description: 'Criteria'
                  type: string
  collectionOperations: []

Model\Dashboard\DashboardClient:
  itemOperations: []
  collectionOperations: []

Model\Dashboard\DashboardBrand:
  itemOperations: []
  collectionOperations: []

Model\Dashboard\Dashboard:
  itemOperations:
    get_my_dasboard:
      access_control: '"ROLE_BRAND_ADMIN" in roles'
      method: 'GET'
      path: '/my/dashboard'
      route_name: 'get_my_dasboard'
      parameters: []
      swagger_context:
        produces:
          - 'application/json'
        tags:
          - My
  collectionOperations: []


Model\RegistrationSummary:
  itemOperations:
    get_my_registration_summary:
      access_control: '"ROLE_BRAND_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
      method: 'GET'
      path: '/my/registration_summary'
      route_name: 'get_my_registration_summary'
      swagger_context:
        produces:
        - 'application/json'
        tags:
        - My
        parameters:
        - name: company
          in: query
          type: integer
          required: false
          description: 'Company Id'
  collectionOperations: []

Model\Profile:
  itemOperations:
    get_my_profile:
      access_control: '"ROLE_BRAND_ADMIN" in roles'
      depth: 2
      method: 'GET'
      path: '/my/profile'
      route_name: 'get_my_profile'
      swagger_context:
        produces:
          - 'application/json'
        tags:
          - My
        parameters: []
  collectionOperations: []

Model\ACK:
  itemOperations: []
  collectionOperations:
    post_provider_billable_call_rerate:
      method: 'POST'
      path: '/billable_calls/rerate'
      route_name: 'post_provider_billable_call_rerate'
      swagger_context:
        consumes:
          - 'application/x-www-form-urlencoded'
        produces:
          - 'application/json'
        tags:
          - Provider
        parameters:
          - name: billableCallIds
            in: body
            required: true
            schema:
              type: array
              items:
                type: integer
            description: Ids to rerate.
        responses:
          200:
            description: "Rerate in progress"
            schema:
              $ref: "#/definitions/ACK"
          404:
            description: "Resource not found"
          400:
            description: "Invalid input"