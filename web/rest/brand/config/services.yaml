imports:
    - { resource: "@ProviderBundle/Resources/config/config.yml" }
    - { resource: "@CoreBundle/Resources/config/doctrine_cache.yml" }
    - { resource: "@ApiBundle/Resources/config/config.yml" }
    - { resource: "@ApiBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    #required to generate valid urls from console
    #https://symfony.com/doc/current/console/request_context.html
    router.request_context.base_url: /api/brand
    api_default_role: ROLE_BRAND_ADMIN

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    DataFixtures\:
        resource: '../../../../library/DataFixtures/*'

    Service\InvoiceTemplate\:
        resource: '../src/Service/InvoiceTemplate/*'

    Service\UserProvider:
        arguments:
            $entityClass: 'Ivoz\Provider\Domain\Model\Administrator\Administrator'

    Service\TokenExchangeUserProvider:
        arguments:
            $entityClass: 'Ivoz\Provider\Domain\Model\Administrator\Administrator'

    Service\AuthEndpointDecorator:
        decorates: 'api_platform.swagger.normalizer.documentation'
        decoration_priority: 1
        arguments:
            $decoratedNormalizer:
                '@Service\AuthEndpointDecorator.inner'
        tags:
            - { name: serializer.normalizer, priority: 100 }

    Service\AdministratorRelPublicEntity\SwitchAcl:
        class: Service\AdministratorRelPublicEntity\SwitchAcl

    Ivoz\Api\Operation\ExchangeToken:
        arguments:
            $userProvider: '@Service\TokenExchangeUserProvider'

    Ivoz\Api\Core\Security\DataAccessControlParser:
        public: true
        calls:
            - [ addRepository, ['companyRepository', '@=service("doctrine.orm.entity_manager").getRepository("Ivoz\\Provider\\Domain\\Model\\Company\\Company")']]
            - [ addRepository, ['transformationRuleSetRepository', '@=service("doctrine.orm.entity_manager").getRepository("Ivoz\\Provider\\Domain\\Model\\TransformationRuleSet\\TransformationRuleSet")']]
            - [ addRepository, ['proxyTrunksRelBrandRepository', '@=service("doctrine.orm.entity_manager").getRepository("Ivoz\\Provider\\Domain\\Model\\ProxyTrunksRelBrand\\ProxyTrunksRelBrand")']]

    #######################################
    ## Controllers
    #######################################
    Controller\Auth\:
        resource: '../src/Controller/Auth/*'
        tags: ['controller.service_arguments']

    Controller\My\:
        resource: '../src/Controller/My/*'
        tags: ['controller.service_arguments']

    Controller\Provider\:
        resource: '../src/Controller/Provider/*'
        tags: ['controller.service_arguments']
