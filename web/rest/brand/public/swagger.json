{
    "swagger": "2.0",
    "basePath": "/api/brand/",
    "info": {
        "title": "Ivoz Provider",
        "version": "3",
        "description": "Brand REST API"
    },
    "paths": {
        "/admin_login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "operationId": "postAdminAuthenticate",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve JWT token",
                "parameters": [
                    {
                        "name": "username",
                        "in": "formData",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "type": "string",
                        "format": "password",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Valid credentials"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Bad credentials"
                    }
                }
            }
        },
        "/token/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "operationId": "postTokenRefresh",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve JWT token",
                "parameters": [
                    {
                        "name": "refresh_token",
                        "in": "formData",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Valid credentials"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Bad credentials"
                    }
                }
            }
        },
        "/administrator_rel_public_entities": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getAdministratorRelPublicEntityCollection",
                "summary": "Retrieves the collection of AdministratorRelPublicEntity resources.",
                "responses": {
                    "200": {
                        "description": "AdministratorRelPublicEntity collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AdministratorRelPublicEntity-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "administrator",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "administrator[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "create",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "delete",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "publicEntity",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "publicEntity[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "read",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "update",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[create]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[delete]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[read]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[update]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/administrator_rel_public_entities/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getAdministratorRelPublicEntityItem",
                "summary": "Retrieves a AdministratorRelPublicEntity resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AdministratorRelPublicEntity resource response",
                        "schema": {
                            "$ref": "#/definitions/AdministratorRelPublicEntity-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putAdministratorRelPublicEntityItem",
                "summary": "Replaces the AdministratorRelPublicEntity resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "administratorRelPublicEntity",
                        "in": "body",
                        "description": "The updated AdministratorRelPublicEntity resource",
                        "schema": {
                            "$ref": "#/definitions/AdministratorRelPublicEntity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AdministratorRelPublicEntity resource updated",
                        "schema": {
                            "$ref": "#/definitions/AdministratorRelPublicEntity"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/administrators": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getAdministratorCollection",
                "summary": "Retrieves the collection of Administrator resources.",
                "responses": {
                    "200": {
                        "description": "Administrator collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Administrator-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "active",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[lastname]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[name]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastname",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastname[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastname[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastname[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastname[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastname[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastname[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "restricted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timezone[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timezone[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[active]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[email]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[lastname]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[restricted]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[username]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postAdministratorCollection",
                "summary": "Creates a Administrator resource.",
                "responses": {
                    "201": {
                        "description": "Administrator resource created",
                        "schema": {
                            "$ref": "#/definitions/Administrator"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "administrator",
                        "in": "body",
                        "description": "The new Administrator resource",
                        "schema": {
                            "$ref": "#/definitions/Administrator"
                        }
                    }
                ]
            }
        },
        "/administrators/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getAdministratorItem",
                "summary": "Retrieves a Administrator resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Administrator resource response",
                        "schema": {
                            "$ref": "#/definitions/Administrator-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putAdministratorItem",
                "summary": "Replaces the Administrator resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "administrator",
                        "in": "body",
                        "description": "The updated Administrator resource",
                        "schema": {
                            "$ref": "#/definitions/Administrator"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Administrator resource updated",
                        "schema": {
                            "$ref": "#/definitions/Administrator"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteAdministratorItem",
                "summary": "Removes the Administrator resource.",
                "responses": {
                    "204": {
                        "description": "Administrator resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/administrators/{id}/grant_all": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Provider"
                ],
                "parameters": [
                    {
                        "name": "publicEntitiesRelUsers",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "The relation values."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "operationId": "post_provider_administrator_grant_allAdministratorItem",
                "consumes": [
                    "application/json",
                    "application/ld+json",
                    "text/csv",
                    "application/xml",
                    "text/xml",
                    "text/html",
                    "application/octet-stream"
                ],
                "summary": "Creates a Administrator resource.",
                "responses": {
                    "201": {
                        "description": "Administrator resource created",
                        "schema": {
                            "$ref": "#/definitions/Administrator"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/administrators/{id}/grant_read_only": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Provider"
                ],
                "parameters": [
                    {
                        "name": "publicEntitiesRelUsers",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "The relation values."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "operationId": "post_provider_administrator_grant_read_onlyAdministratorItem",
                "consumes": [
                    "application/json",
                    "application/ld+json",
                    "text/csv",
                    "application/xml",
                    "text/xml",
                    "text/html",
                    "application/octet-stream"
                ],
                "summary": "Creates a Administrator resource.",
                "responses": {
                    "201": {
                        "description": "Administrator resource created",
                        "schema": {
                            "$ref": "#/definitions/Administrator"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/administrators/{id}/revoke_all": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Provider"
                ],
                "parameters": [
                    {
                        "name": "publicEntitiesRelUsers",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "The relation values."
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "operationId": "post_provider_administrator_revoke_allAdministratorItem",
                "consumes": [
                    "application/json",
                    "application/ld+json",
                    "text/csv",
                    "application/xml",
                    "text/xml",
                    "text/html",
                    "application/octet-stream"
                ],
                "summary": "Creates a Administrator resource.",
                "responses": {
                    "201": {
                        "description": "Administrator resource created",
                        "schema": {
                            "$ref": "#/definitions/Administrator"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/balance_movements": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBalanceMovementCollection",
                "summary": "Retrieves the collection of BalanceMovement resources.",
                "responses": {
                    "200": {
                        "description": "BalanceMovement collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BalanceMovement-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "amount",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "amount[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "amount[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "amount[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "amount[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "amount[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "amount[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "amount[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "balance",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "balance[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "balance[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "balance[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "balance[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "balance[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "balance[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "balance[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carrier",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carrier[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carrier[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "createdOn",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdOn[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdOn[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdOn[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdOn[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdOn[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "createdOn[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdOn[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[amount]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[balance]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[carrier]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[company]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[createdOn]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[amount]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[balance]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[createdOn]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postBalanceMovementCollection",
                "summary": "Creates a BalanceMovement resource.",
                "responses": {
                    "201": {
                        "description": "BalanceMovement resource created",
                        "schema": {
                            "$ref": "#/definitions/BalanceMovement"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "balanceMovement",
                        "in": "body",
                        "description": "The new BalanceMovement resource",
                        "schema": {
                            "$ref": "#/definitions/BalanceMovement"
                        }
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/balance_movements/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBalanceMovementItem",
                "summary": "Retrieves a BalanceMovement resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BalanceMovement resource response",
                        "schema": {
                            "$ref": "#/definitions/BalanceMovement-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/balance_notifications": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBalanceNotificationCollection",
                "summary": "Retrieves the collection of BalanceNotification resources.",
                "responses": {
                    "200": {
                        "description": "BalanceNotification collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BalanceNotification-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "carrier",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carrier[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carrier[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[lastSent]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[notificationTemplate]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[threshold]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[toAddress]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastSent",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastSent[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastSent[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastSent[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "lastSent[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastSent[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastSent[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastSent[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "notificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "notificationTemplate[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "notificationTemplate[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "threshold",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threshold[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "threshold[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threshold[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threshold[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threshold[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threshold[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threshold[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "toAddress",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "toAddress[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "toAddress[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "toAddress[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "toAddress[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "toAddress[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "toAddress[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[lastSent]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[threshold]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[toAddress]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postBalanceNotificationCollection",
                "summary": "Creates a BalanceNotification resource.",
                "responses": {
                    "201": {
                        "description": "BalanceNotification resource created",
                        "schema": {
                            "$ref": "#/definitions/BalanceNotification"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "balanceNotification",
                        "in": "body",
                        "description": "The new BalanceNotification resource",
                        "schema": {
                            "$ref": "#/definitions/BalanceNotification"
                        }
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/balance_notifications/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBalanceNotificationItem",
                "summary": "Retrieves a BalanceNotification resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BalanceNotification resource response",
                        "schema": {
                            "$ref": "#/definitions/BalanceNotification-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putBalanceNotificationItem",
                "summary": "Replaces the BalanceNotification resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "balanceNotification",
                        "in": "body",
                        "description": "The updated BalanceNotification resource",
                        "schema": {
                            "$ref": "#/definitions/BalanceNotification"
                        }
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BalanceNotification resource updated",
                        "schema": {
                            "$ref": "#/definitions/BalanceNotification"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteBalanceNotificationItem",
                "summary": "Removes the BalanceNotification resource.",
                "responses": {
                    "204": {
                        "description": "BalanceNotification resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/banned_addresses": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBannedAddressCollection",
                "summary": "Retrieves the collection of BannedAddress resources.",
                "responses": {
                    "200": {
                        "description": "BannedAddress collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BannedAddress-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "aor",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "aor[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "aor[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "aor[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "aor[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "aor[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "aor[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "blocker",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "blocker[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "blocker[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "blocker[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "blocker[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "blocker[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "blocker[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[aor]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[blocker]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[company]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[ip]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[lastTimeBanned]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ip[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastTimeBanned",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastTimeBanned[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastTimeBanned[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastTimeBanned[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastTimeBanned[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "lastTimeBanned[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastTimeBanned[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastTimeBanned[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[aor]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[blocker]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[ip]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[lastTimeBanned]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/banned_addresses/antibruteforce/{id}": {
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteBannedAddressItem",
                "summary": "Removes the BannedAddress resource.",
                "responses": {
                    "204": {
                        "description": "BannedAddress resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/banned_addresses/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBannedAddressItem",
                "summary": "Retrieves a BannedAddress resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BannedAddress resource response",
                        "schema": {
                            "$ref": "#/definitions/BannedAddress-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/billable_calls": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBillableCallCollection",
                "summary": "Retrieves the collection of BillableCall resources.",
                "responses": {
                    "200": {
                        "description": "BillableCall collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BillableCall-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "callee",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callee[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callee[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callee[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callee[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callee[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "callee[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "caller",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "caller[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "caller[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "caller[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "caller[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "caller[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "caller[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callid",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callid[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callid[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callid[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "callid[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callid[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callid[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carrier",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carrier[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carrier[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "cost",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "cost[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddiProvider",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddiProvider[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddiProvider[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ddi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddi[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "destination",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "destination[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "destination[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "duration[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointId",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "endpointId[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "endpointId[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointId[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointId[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointId[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointId[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointId[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointName[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointName[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointName[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "endpointName[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointName[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointName[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointType[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointType[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointType[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointType[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointType[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointType[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[callee]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[caller]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[callid]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[carrier]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[company]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[cost]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[ddiProvider]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[ddi]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[endpointId]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[endpointName]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[endpointType]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[invoice]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[price]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[startTime]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "price[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "price[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "price[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "price[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "price[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "price[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "price[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ratingPlanGroup",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ratingPlanGroup[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ratingPlanGroup[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "startTime[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[callee]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[caller]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[callid]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[cost]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[direction]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[duration]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[endpointId]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[endpointName]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[endpointType]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[price]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[startTime]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_pagination",
                        "in": "query",
                        "required": false,
                        "description": "Enable or disable pagination",
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/billable_calls/{callid}/rate": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Provider"
                ],
                "parameters": [
                    {
                        "name": "callid",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "callid"
                    },
                    {
                        "name": "rating",
                        "in": "body",
                        "required": true,
                        "description": "The rating values",
                        "schema": {
                            "$ref": "#/definitions/BillableCall-rating"
                        }
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "operationId": "put_billable_call_rate_by_callidBillableCallItem",
                "summary": "Replaces the BillableCall resource.",
                "responses": {
                    "200": {
                        "description": "BillableCall resource updated",
                        "schema": {
                            "$ref": "#/definitions/BillableCall"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/billable_calls/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBillableCallItem",
                "summary": "Retrieves a BillableCall resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BillableCall resource response",
                        "schema": {
                            "$ref": "#/definitions/BillableCall-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/brand_services": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBrandServiceCollection",
                "summary": "Retrieves the collection of BrandService resources.",
                "responses": {
                    "200": {
                        "description": "BrandService collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BrandService-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "service",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "service[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[code]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postBrandServiceCollection",
                "summary": "Creates a BrandService resource.",
                "responses": {
                    "201": {
                        "description": "BrandService resource created",
                        "schema": {
                            "$ref": "#/definitions/BrandService"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "brandService",
                        "in": "body",
                        "description": "The new BrandService resource",
                        "schema": {
                            "$ref": "#/definitions/BrandService"
                        }
                    }
                ]
            }
        },
        "/brand_services/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBrandServiceItem",
                "summary": "Retrieves a BrandService resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BrandService resource response",
                        "schema": {
                            "$ref": "#/definitions/BrandService-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putBrandServiceItem",
                "summary": "Replaces the BrandService resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "brandService",
                        "in": "body",
                        "description": "The updated BrandService resource",
                        "schema": {
                            "$ref": "#/definitions/BrandService"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BrandService resource updated",
                        "schema": {
                            "$ref": "#/definitions/BrandService"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteBrandServiceItem",
                "summary": "Removes the BrandService resource.",
                "responses": {
                    "204": {
                        "description": "BrandService resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/brands": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBrandCollection",
                "summary": "Retrieves the collection of Brand resources.",
                "responses": {
                    "200": {
                        "description": "Brand collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Brand-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "callCsvNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callCsvNotificationTemplate[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callCsvNotificationTemplate[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currency[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultTimezone",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultTimezone[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[invoice.registryData]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[logo.baseName]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[logo.fileSize]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[logo.mimeType]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "faxNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "faxNotificationTemplate[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "faxNotificationTemplate[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.country",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.country[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.country[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.country[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.country[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.country[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.nif",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.nif[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.nif[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.nif[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.nif[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.nif[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.postalAddress",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.postalAddress[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.postalAddress[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.postalAddress[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.postalAddress[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.postalAddress[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.postalCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.postalCode[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.postalCode[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.postalCode[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.postalCode[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.postalCode[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.province",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.province[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.province[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.province[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.province[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.province[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.registryData",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.registryData[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.registryData[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.registryData[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.registryData[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.registryData[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.registryData[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "invoice.town",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.town[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.town[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.town[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.town[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.town[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceNotificationTemplate[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceNotificationTemplate[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.baseName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.baseName[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.baseName[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.baseName[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.baseName[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.baseName[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.baseName[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "logo.fileSize",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "logo.fileSize[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "logo.fileSize[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.fileSize[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.fileSize[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.fileSize[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.fileSize[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.fileSize[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.mimeType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.mimeType[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.mimeType[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.mimeType[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.mimeType[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.mimeType[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.mimeType[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "maxDailyUsageNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxDailyUsageNotificationTemplate[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxDailyUsageNotificationTemplate[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voicemailNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voicemailNotificationTemplate[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voicemailNotificationTemplate[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[invoice.country]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[invoice.nif]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[invoice.postalAddress]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[invoice.postalCode]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[invoice.province]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[invoice.registryData]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[invoice.town]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[logo.baseName]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[logo.fileSize]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[logo.mimeType]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/brands/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBrandItem",
                "summary": "Retrieves a Brand resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand resource response",
                        "schema": {
                            "$ref": "#/definitions/Brand-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "multipart/form-data",
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putBrandItem",
                "summary": "Replaces the Brand resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "brand",
                        "in": "formData",
                        "description": "The updated Brand resource",
                        "type": "string"
                    },
                    {
                        "name": "Logo",
                        "in": "formData",
                        "type": "file",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand resource updated",
                        "schema": {
                            "$ref": "#/definitions/Brand"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/brands/{id}/logo": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "#/definitions/Brand_Logo",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "tags": [
                    "Provider"
                ],
                "operationId": "/brand_logoBrandItem",
                "summary": "Retrieves a Brand resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/call_csv_reports": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCallCsvReportCollection",
                "summary": "Retrieves the collection of CallCsvReport resources.",
                "responses": {
                    "200": {
                        "description": "CallCsvReport collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CallCsvReport-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "brand",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "brand[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "brand[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "callCsvScheduler",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callCsvScheduler[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callCsvScheduler[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "createdOn",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdOn[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdOn[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdOn[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdOn[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdOn[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdOn[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "csv.baseName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "csv.baseName[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "csv.baseName[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "csv.baseName[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "csv.baseName[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "csv.baseName[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "csv.baseName[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "csv.fileSize",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "csv.fileSize[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "csv.fileSize[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "csv.fileSize[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "csv.fileSize[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "csv.fileSize[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "csv.fileSize[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "csv.fileSize[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "csv.mimeType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "csv.mimeType[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "csv.mimeType[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "csv.mimeType[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "csv.mimeType[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "csv.mimeType[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "csv.mimeType[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[callCsvScheduler]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[csv.baseName]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[csv.fileSize]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[csv.mimeType]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inDate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inDate[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inDate[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inDate[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inDate[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inDate[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inDate[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outDate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outDate[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outDate[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outDate[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outDate[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outDate[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outDate[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sentTo",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sentTo[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sentTo[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sentTo[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sentTo[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sentTo[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[createdOn]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[csv.baseName]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[csv.fileSize]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[csv.mimeType]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[inDate]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[outDate]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[sentTo]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/call_csv_reports/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCallCsvReportItem",
                "summary": "Retrieves a CallCsvReport resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CallCsvReport resource response",
                        "schema": {
                            "$ref": "#/definitions/CallCsvReport-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/call_csv_reports/{id}/csv": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "#/definitions/CallCsvReport_Csv",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "tags": [
                    "Provider"
                ],
                "operationId": "/callcsvreport_csvCallCsvReportItem",
                "summary": "Retrieves a CallCsvReport resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/call_csv_schedulers": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCallCsvSchedulerCollection",
                "summary": "Retrieves the collection of CallCsvScheduler resources.",
                "responses": {
                    "200": {
                        "description": "CallCsvScheduler collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CallCsvScheduler-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "callCsvNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callCsvNotificationTemplate[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callCsvNotificationTemplate[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "callDirection",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callDirection[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callDirection[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callDirection[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callDirection[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "callDirection[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callDirection[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carrier",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carrier[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carrier[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ddi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddiProvider",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddiProvider[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddiProvider[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ddi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddi[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[callDirection]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[company]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[lastExecutionError]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[lastExecution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[nextExecution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "fax",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fax[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fax[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "frequency",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "frequency[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "frequency[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "frequency[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "frequency[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "frequency[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "frequency[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "friend",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "friend[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "friend[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecutionError",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecutionError[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecutionError[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecutionError[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecutionError[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "lastExecutionError[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecutionError[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecution[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecution[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecution[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecution[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecution[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "lastExecution[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecution[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nextExecution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nextExecution[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nextExecution[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nextExecution[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nextExecution[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nextExecution[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "nextExecution[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nextExecution[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "residentialDevice",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "residentialDevice[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "residentialDevice[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "retailAccount",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "retailAccount[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "retailAccount[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unit",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "unit[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "unit[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "unit[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "unit[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "unit[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[callDirection]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[email]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[frequency]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[lastExecutionError]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[lastExecution]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[nextExecution]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[unit]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postCallCsvSchedulerCollection",
                "summary": "Creates a CallCsvScheduler resource.",
                "responses": {
                    "201": {
                        "description": "CallCsvScheduler resource created",
                        "schema": {
                            "$ref": "#/definitions/CallCsvScheduler"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "callCsvScheduler",
                        "in": "body",
                        "description": "The new CallCsvScheduler resource",
                        "schema": {
                            "$ref": "#/definitions/CallCsvScheduler"
                        }
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/call_csv_schedulers/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCallCsvSchedulerItem",
                "summary": "Retrieves a CallCsvScheduler resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CallCsvScheduler resource response",
                        "schema": {
                            "$ref": "#/definitions/CallCsvScheduler-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putCallCsvSchedulerItem",
                "summary": "Replaces the CallCsvScheduler resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "callCsvScheduler",
                        "in": "body",
                        "description": "The updated CallCsvScheduler resource",
                        "schema": {
                            "$ref": "#/definitions/CallCsvScheduler"
                        }
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CallCsvScheduler resource updated",
                        "schema": {
                            "$ref": "#/definitions/CallCsvScheduler"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteCallCsvSchedulerItem",
                "summary": "Removes the CallCsvScheduler resource.",
                "responses": {
                    "204": {
                        "description": "CallCsvScheduler resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/carrier_servers": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCarrierServerCollection",
                "summary": "Retrieves the collection of CarrierServer resources.",
                "responses": {
                    "200": {
                        "description": "CarrierServer collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CarrierServer-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "authNeeded",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "authNeeded[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "authNeeded[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "authNeeded[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "authNeeded[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "authNeeded[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carrier",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carrier[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[hostname]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[ip]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[outboundProxy]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[sipProxy]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "hostname",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hostname[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hostname[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hostname[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hostname[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hostname[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hostname[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ip[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outboundProxy",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outboundProxy[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outboundProxy[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outboundProxy[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outboundProxy[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outboundProxy[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "outboundProxy[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sipProxy",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sipProxy[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sipProxy[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sipProxy[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sipProxy[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sipProxy[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sipProxy[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[authNeeded]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[hostname]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[ip]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[outboundProxy]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[sipProxy]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postCarrierServerCollection",
                "summary": "Creates a CarrierServer resource.",
                "responses": {
                    "201": {
                        "description": "CarrierServer resource created",
                        "schema": {
                            "$ref": "#/definitions/CarrierServer"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "carrierServer",
                        "in": "body",
                        "description": "The new CarrierServer resource",
                        "schema": {
                            "$ref": "#/definitions/CarrierServer"
                        }
                    }
                ]
            }
        },
        "/carrier_servers/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCarrierServerItem",
                "summary": "Retrieves a CarrierServer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CarrierServer resource response",
                        "schema": {
                            "$ref": "#/definitions/CarrierServer-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putCarrierServerItem",
                "summary": "Replaces the CarrierServer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "carrierServer",
                        "in": "body",
                        "description": "The updated CarrierServer resource",
                        "schema": {
                            "$ref": "#/definitions/CarrierServer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CarrierServer resource updated",
                        "schema": {
                            "$ref": "#/definitions/CarrierServer"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteCarrierServerItem",
                "summary": "Removes the CarrierServer resource.",
                "responses": {
                    "204": {
                        "description": "CarrierServer resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/carrier_servers/{id}/status": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "operationId": "get_status_itemCarrierServerItem",
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv",
                    "application/xml",
                    "text/xml",
                    "text/html",
                    "application/octet-stream"
                ],
                "summary": "Retrieves a CarrierServer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CarrierServer resource response",
                        "schema": {
                            "$ref": "#/definitions/CarrierServer-status"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/carriers": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCarrierCollection",
                "summary": "Retrieves the collection of Carrier resources.",
                "responses": {
                    "200": {
                        "description": "Carrier collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Carrier-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "balance",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "balance[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "balance[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "balance[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "balance[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "balance[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "balance[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "balance[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calculateCost",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "calculateCost[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currency[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currency[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[balance]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[calculateCost]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[externallyRated]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[proxyTrunk]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[transformationRuleSet]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "externallyRated",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "externallyRated[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "proxyTrunk",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "proxyTrunk[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "proxyTrunk[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[balance]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[calculateCost]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[externallyRated]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postCarrierCollection",
                "summary": "Creates a Carrier resource.",
                "responses": {
                    "201": {
                        "description": "Carrier resource created",
                        "schema": {
                            "$ref": "#/definitions/Carrier"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "carrier",
                        "in": "body",
                        "description": "The new Carrier resource",
                        "schema": {
                            "$ref": "#/definitions/Carrier"
                        }
                    }
                ]
            }
        },
        "/carriers/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCarrierItem",
                "summary": "Retrieves a Carrier resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Carrier resource response",
                        "schema": {
                            "$ref": "#/definitions/Carrier-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putCarrierItem",
                "summary": "Replaces the Carrier resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "carrier",
                        "in": "body",
                        "description": "The updated Carrier resource",
                        "schema": {
                            "$ref": "#/definitions/Carrier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Carrier resource updated",
                        "schema": {
                            "$ref": "#/definitions/Carrier"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteCarrierItem",
                "summary": "Removes the Carrier resource.",
                "responses": {
                    "204": {
                        "description": "Carrier resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/codecs": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCodecCollection",
                "summary": "Retrieves the collection of Codec resources.",
                "responses": {
                    "200": {
                        "description": "Codec collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Codec-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[iden]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/codecs/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCodecItem",
                "summary": "Retrieves a Codec resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Codec resource response",
                        "schema": {
                            "$ref": "#/definitions/Codec-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/companies": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCompanyCollection",
                "summary": "Retrieves the collection of Company resources.",
                "responses": {
                    "200": {
                        "description": "Company collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Company-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "balance",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "balance[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "balance[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "balance[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "balance[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "balance[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "balance[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "balance[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "billingMethod",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "billingMethod[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "billingMethod[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "billingMethod[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "billingMethod[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "billingMethod[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callCsvNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callCsvNotificationTemplate[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callCsvNotificationTemplate[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currency[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currency[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "currentDayUsage",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currentDayUsage[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "currentDayUsage[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currentDayUsage[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currentDayUsage[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currentDayUsage[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currentDayUsage[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currentDayUsage[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultTimezone",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultTimezone[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultTimezone[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "domainUsers",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domainUsers[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domainUsers[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domainUsers[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domainUsers[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domainUsers[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "domainUsers[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[balance]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[currentDayUsage]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[domainUsers]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[outgoingDdi]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "faxNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "faxNotificationTemplate[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "faxNotificationTemplate[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceNotificationTemplate[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceNotificationTemplate[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "maxDailyUsage",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "maxDailyUsageNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxDailyUsageNotificationTemplate[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxDailyUsageNotificationTemplate[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "maxDailyUsage[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxDailyUsage[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxDailyUsage[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxDailyUsage[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxDailyUsage[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxDailyUsage[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nif",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nif[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nif[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nif[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nif[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nif[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdiRule",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdiRule[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdiRule[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "outgoingDdi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voicemailNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voicemailNotificationTemplate[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voicemailNotificationTemplate[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[balance]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[billingMethod]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[currentDayUsage]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[domainUsers]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[maxDailyUsage]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[nif]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[type]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postCompanyCollection",
                "summary": "Creates a Company resource.",
                "responses": {
                    "201": {
                        "description": "Company resource created",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "company",
                        "in": "body",
                        "description": "The new Company resource",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                ]
            }
        },
        "/companies/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCompanyItem",
                "summary": "Retrieves a Company resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company resource response",
                        "schema": {
                            "$ref": "#/definitions/Company-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putCompanyItem",
                "summary": "Replaces the Company resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "company",
                        "in": "body",
                        "description": "The updated Company resource",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company resource updated",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteCompanyItem",
                "summary": "Removes the Company resource.",
                "responses": {
                    "204": {
                        "description": "Company resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/company_rel_codecs": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCompanyRelCodecCollection",
                "summary": "Retrieves the collection of CompanyRelCodec resources.",
                "responses": {
                    "200": {
                        "description": "CompanyRelCodec collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyRelCodec-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "codec",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "codec[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postCompanyRelCodecCollection",
                "summary": "Creates a CompanyRelCodec resource.",
                "responses": {
                    "201": {
                        "description": "CompanyRelCodec resource created",
                        "schema": {
                            "$ref": "#/definitions/CompanyRelCodec"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "companyRelCodec",
                        "in": "body",
                        "description": "The new CompanyRelCodec resource",
                        "schema": {
                            "$ref": "#/definitions/CompanyRelCodec"
                        }
                    }
                ]
            }
        },
        "/company_rel_codecs/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCompanyRelCodecItem",
                "summary": "Retrieves a CompanyRelCodec resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CompanyRelCodec resource response",
                        "schema": {
                            "$ref": "#/definitions/CompanyRelCodec-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putCompanyRelCodecItem",
                "summary": "Replaces the CompanyRelCodec resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "companyRelCodec",
                        "in": "body",
                        "description": "The updated CompanyRelCodec resource",
                        "schema": {
                            "$ref": "#/definitions/CompanyRelCodec"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CompanyRelCodec resource updated",
                        "schema": {
                            "$ref": "#/definitions/CompanyRelCodec"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteCompanyRelCodecItem",
                "summary": "Removes the CompanyRelCodec resource.",
                "responses": {
                    "204": {
                        "description": "CompanyRelCodec resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/countries": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCountryCollection",
                "summary": "Retrieves the collection of Country resources.",
                "responses": {
                    "200": {
                        "description": "Country collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Country-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "countryCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "countryCode[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "countryCode[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "countryCode[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "countryCode[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "countryCode[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "countryCode[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[countryCode]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[code]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[countryCode]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.ca]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.en]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.es]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.it]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_pagination",
                        "in": "query",
                        "required": false,
                        "description": "Enable or disable pagination",
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/countries/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCountryItem",
                "summary": "Retrieves a Country resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Country resource response",
                        "schema": {
                            "$ref": "#/definitions/Country-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/currencies": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCurrencyCollection",
                "summary": "Retrieves the collection of Currency resources.",
                "responses": {
                    "200": {
                        "description": "Currency collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Currency-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "symbol",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "symbol[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "symbol[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "symbol[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "symbol[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "symbol[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[iden]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.ca]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.en]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.es]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.it]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[symbol]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/currencies/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCurrencyItem",
                "summary": "Retrieves a Currency resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Currency resource response",
                        "schema": {
                            "$ref": "#/definitions/Currency-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/ddi_provider_addresses": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getDdiProviderAddressCollection",
                "summary": "Retrieves the collection of DdiProviderAddress resources.",
                "responses": {
                    "200": {
                        "description": "DdiProviderAddress collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DdiProviderAddress-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "ddiProvider",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddiProvider[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "description[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[description]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[ip]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ip[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[ip]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postDdiProviderAddressCollection",
                "summary": "Creates a DdiProviderAddress resource.",
                "responses": {
                    "201": {
                        "description": "DdiProviderAddress resource created",
                        "schema": {
                            "$ref": "#/definitions/DdiProviderAddress"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "ddiProviderAddress",
                        "in": "body",
                        "description": "The new DdiProviderAddress resource",
                        "schema": {
                            "$ref": "#/definitions/DdiProviderAddress"
                        }
                    }
                ]
            }
        },
        "/ddi_provider_addresses/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getDdiProviderAddressItem",
                "summary": "Retrieves a DdiProviderAddress resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DdiProviderAddress resource response",
                        "schema": {
                            "$ref": "#/definitions/DdiProviderAddress-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putDdiProviderAddressItem",
                "summary": "Replaces the DdiProviderAddress resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ddiProviderAddress",
                        "in": "body",
                        "description": "The updated DdiProviderAddress resource",
                        "schema": {
                            "$ref": "#/definitions/DdiProviderAddress"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DdiProviderAddress resource updated",
                        "schema": {
                            "$ref": "#/definitions/DdiProviderAddress"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteDdiProviderAddressItem",
                "summary": "Removes the DdiProviderAddress resource.",
                "responses": {
                    "204": {
                        "description": "DdiProviderAddress resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/ddi_provider_registrations": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getDdiProviderRegistrationCollection",
                "summary": "Retrieves the collection of DdiProviderRegistration resources.",
                "responses": {
                    "200": {
                        "description": "DdiProviderRegistration collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DdiProviderRegistration-detailedCollection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "ddiProvider",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddiProvider[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domain",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domain[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domain[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domain[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domain[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domain[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status.expires",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "status.inProgress",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "status.registered",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[domain]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[username]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postDdiProviderRegistrationCollection",
                "summary": "Creates a DdiProviderRegistration resource.",
                "responses": {
                    "201": {
                        "description": "DdiProviderRegistration resource created",
                        "schema": {
                            "$ref": "#/definitions/DdiProviderRegistration"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "ddiProviderRegistration",
                        "in": "body",
                        "description": "The new DdiProviderRegistration resource",
                        "schema": {
                            "$ref": "#/definitions/DdiProviderRegistration"
                        }
                    }
                ]
            }
        },
        "/ddi_provider_registrations/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getDdiProviderRegistrationItem",
                "summary": "Retrieves a DdiProviderRegistration resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DdiProviderRegistration resource response",
                        "schema": {
                            "$ref": "#/definitions/DdiProviderRegistration-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putDdiProviderRegistrationItem",
                "summary": "Replaces the DdiProviderRegistration resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ddiProviderRegistration",
                        "in": "body",
                        "description": "The updated DdiProviderRegistration resource",
                        "schema": {
                            "$ref": "#/definitions/DdiProviderRegistration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DdiProviderRegistration resource updated",
                        "schema": {
                            "$ref": "#/definitions/DdiProviderRegistration"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteDdiProviderRegistrationItem",
                "summary": "Removes the DdiProviderRegistration resource.",
                "responses": {
                    "204": {
                        "description": "DdiProviderRegistration resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/ddi_provider_registrations/{id}/status": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "operationId": "get_status_itemDdiProviderRegistrationItem",
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv",
                    "application/xml",
                    "text/xml",
                    "text/html",
                    "application/octet-stream"
                ],
                "summary": "Retrieves a DdiProviderRegistration resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DdiProviderRegistration resource response",
                        "schema": {
                            "$ref": "#/definitions/DdiProviderRegistration-status"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/ddi_providers": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getDdiProviderCollection",
                "summary": "Retrieves the collection of DdiProvider resources.",
                "responses": {
                    "200": {
                        "description": "DdiProvider collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DdiProvider-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[proxyTrunk]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[transformationRuleSet]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "proxyTrunk",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "proxyTrunk[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "proxyTrunk[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postDdiProviderCollection",
                "summary": "Creates a DdiProvider resource.",
                "responses": {
                    "201": {
                        "description": "DdiProvider resource created",
                        "schema": {
                            "$ref": "#/definitions/DdiProvider"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "ddiProvider",
                        "in": "body",
                        "description": "The new DdiProvider resource",
                        "schema": {
                            "$ref": "#/definitions/DdiProvider"
                        }
                    }
                ]
            }
        },
        "/ddi_providers/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getDdiProviderItem",
                "summary": "Retrieves a DdiProvider resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DdiProvider resource response",
                        "schema": {
                            "$ref": "#/definitions/DdiProvider-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putDdiProviderItem",
                "summary": "Replaces the DdiProvider resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ddiProvider",
                        "in": "body",
                        "description": "The updated DdiProvider resource",
                        "schema": {
                            "$ref": "#/definitions/DdiProvider"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DdiProvider resource updated",
                        "schema": {
                            "$ref": "#/definitions/DdiProvider"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteDdiProviderItem",
                "summary": "Removes the DdiProvider resource.",
                "responses": {
                    "204": {
                        "description": "DdiProvider resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/ddis": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getDdiCollection",
                "summary": "Retrieves the collection of Ddi resources.",
                "responses": {
                    "200": {
                        "description": "Ddi collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Ddi-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ddi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddiProvider",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddiProvider[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddiProvider[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ddi[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddi[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddi[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddi[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddi[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddie164",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddie164[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddie164[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddie164[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddie164[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddie164[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ddie164[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "description[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[country]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[ddiProvider]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[ddie164]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[description]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[ddi]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[ddie164]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postDdiCollection",
                "summary": "Creates a Ddi resource.",
                "responses": {
                    "201": {
                        "description": "Ddi resource created",
                        "schema": {
                            "$ref": "#/definitions/Ddi"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "ddi",
                        "in": "body",
                        "description": "The new Ddi resource",
                        "schema": {
                            "$ref": "#/definitions/Ddi"
                        }
                    }
                ]
            }
        },
        "/ddis/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getDdiItem",
                "summary": "Retrieves a Ddi resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ddi resource response",
                        "schema": {
                            "$ref": "#/definitions/Ddi-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putDdiItem",
                "summary": "Replaces the Ddi resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ddi",
                        "in": "body",
                        "description": "The updated Ddi resource",
                        "schema": {
                            "$ref": "#/definitions/Ddi"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ddi resource updated",
                        "schema": {
                            "$ref": "#/definitions/Ddi"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteDdiItem",
                "summary": "Removes the Ddi resource.",
                "responses": {
                    "204": {
                        "description": "Ddi resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/destination_rate_groups": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getDestinationRateGroupCollection",
                "summary": "Retrieves the collection of DestinationRateGroup resources.",
                "responses": {
                    "200": {
                        "description": "DestinationRateGroup collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DestinationRateGroup-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "currency",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currency[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currency[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[currency]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[file.baseName]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[file.fileSize]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[file.mimeType]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[status]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "file.baseName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "file.baseName[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "file.baseName[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "file.baseName[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "file.baseName[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "file.baseName[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "file.baseName[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "file.fileSize",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "file.fileSize[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "file.fileSize[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "file.fileSize[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "file.fileSize[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "file.fileSize[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "file.fileSize[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "file.fileSize[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "file.mimeType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "file.mimeType[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "file.mimeType[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "file.mimeType[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "file.mimeType[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "file.mimeType[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "file.mimeType[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "status[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[file.baseName]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[file.fileSize]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[file.importerArguments]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[file.mimeType]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.ca]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.en]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.es]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.it]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[status]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data",
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postDestinationRateGroupCollection",
                "summary": "Creates a DestinationRateGroup resource.",
                "responses": {
                    "201": {
                        "description": "DestinationRateGroup resource created",
                        "schema": {
                            "$ref": "#/definitions/DestinationRateGroup"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "destinationRateGroup",
                        "in": "formData",
                        "description": "The new DestinationRateGroup resource",
                        "type": "string"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "type": "file",
                        "required": false
                    }
                ]
            }
        },
        "/destination_rate_groups/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getDestinationRateGroupItem",
                "summary": "Retrieves a DestinationRateGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DestinationRateGroup resource response",
                        "schema": {
                            "$ref": "#/definitions/DestinationRateGroup-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "multipart/form-data",
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putDestinationRateGroupItem",
                "summary": "Replaces the DestinationRateGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "destinationRateGroup",
                        "in": "formData",
                        "description": "The updated DestinationRateGroup resource",
                        "type": "string"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "type": "file",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DestinationRateGroup resource updated",
                        "schema": {
                            "$ref": "#/definitions/DestinationRateGroup"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteDestinationRateGroupItem",
                "summary": "Removes the DestinationRateGroup resource.",
                "responses": {
                    "204": {
                        "description": "DestinationRateGroup resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/destination_rate_groups/{id}/file": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "#/definitions/DestinationRateGroup_File",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "tags": [
                    "Provider"
                ],
                "operationId": "/destinationrategroup_fileDestinationRateGroupItem",
                "summary": "Retrieves a DestinationRateGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/destination_rates": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getDestinationRateCollection",
                "summary": "Retrieves the collection of DestinationRate resources.",
                "responses": {
                    "200": {
                        "description": "DestinationRate collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DestinationRate-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "connectFee",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "connectFee[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "connectFee[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "connectFee[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "connectFee[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "connectFee[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "connectFee[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currencySymbol",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "destination",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "destinationRateGroup",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "destinationRateGroup[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "destination[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "groupIntervalStart",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "groupIntervalStart[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "groupIntervalStart[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "groupIntervalStart[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "groupIntervalStart[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "groupIntervalStart[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateIncrement",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateIncrement[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateIncrement[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateIncrement[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateIncrement[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateIncrement[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[connectFee]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[cost]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[groupIntervalStart]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[rateIncrement]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postDestinationRateCollection",
                "summary": "Creates a DestinationRate resource.",
                "responses": {
                    "201": {
                        "description": "DestinationRate resource created",
                        "schema": {
                            "$ref": "#/definitions/DestinationRate"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "destinationRate",
                        "in": "body",
                        "description": "The new DestinationRate resource",
                        "schema": {
                            "$ref": "#/definitions/DestinationRate"
                        }
                    }
                ]
            }
        },
        "/destination_rates/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getDestinationRateItem",
                "summary": "Retrieves a DestinationRate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DestinationRate resource response",
                        "schema": {
                            "$ref": "#/definitions/DestinationRate-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putDestinationRateItem",
                "summary": "Replaces the DestinationRate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "destinationRate",
                        "in": "body",
                        "description": "The updated DestinationRate resource",
                        "schema": {
                            "$ref": "#/definitions/DestinationRate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DestinationRate resource updated",
                        "schema": {
                            "$ref": "#/definitions/DestinationRate"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteDestinationRateItem",
                "summary": "Removes the DestinationRate resource.",
                "responses": {
                    "204": {
                        "description": "DestinationRate resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/destinations": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getDestinationCollection",
                "summary": "Retrieves the collection of Destination resources.",
                "responses": {
                    "200": {
                        "description": "Destination collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Destination-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "exists[name.ca]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[name.en]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[name.es]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[name.it]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name.ca[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name.en[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name.es[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name.it[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prefix",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prefix[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prefix[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prefix[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prefix[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prefix[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.ca]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.en]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.es]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.it]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[prefix]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postDestinationCollection",
                "summary": "Creates a Destination resource.",
                "responses": {
                    "201": {
                        "description": "Destination resource created",
                        "schema": {
                            "$ref": "#/definitions/Destination"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "destination",
                        "in": "body",
                        "description": "The new Destination resource",
                        "schema": {
                            "$ref": "#/definitions/Destination"
                        }
                    }
                ]
            }
        },
        "/destinations/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getDestinationItem",
                "summary": "Retrieves a Destination resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Destination resource response",
                        "schema": {
                            "$ref": "#/definitions/Destination-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putDestinationItem",
                "summary": "Replaces the Destination resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "destination",
                        "in": "body",
                        "description": "The updated Destination resource",
                        "schema": {
                            "$ref": "#/definitions/Destination"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Destination resource updated",
                        "schema": {
                            "$ref": "#/definitions/Destination"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteDestinationItem",
                "summary": "Removes the Destination resource.",
                "responses": {
                    "204": {
                        "description": "Destination resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/extensions": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getExtensionCollection",
                "summary": "Retrieves the collection of Extension resources.",
                "responses": {
                    "200": {
                        "description": "Extension collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Extension-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[friendValue]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[numberCountry]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[numberValue]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[routeType]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[user]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "friendValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "friendValue[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "friendValue[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "friendValue[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "friendValue[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "friendValue[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "friendValue[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "numberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberValue[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberValue[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberValue[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberValue[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberValue[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "numberValue[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routeType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routeType[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routeType[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routeType[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routeType[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routeType[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "routeType[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[friendValue]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[numberValue]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[number]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[routeType]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/extensions/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getExtensionItem",
                "summary": "Retrieves a Extension resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Extension resource response",
                        "schema": {
                            "$ref": "#/definitions/Extension-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/faxes": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFaxCollection",
                "summary": "Retrieves the collection of Fax resources.",
                "responses": {
                    "200": {
                        "description": "Fax collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Fax-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "email[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[email]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[outgoingDdi]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sendByEmail",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[email]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[sendByEmail]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/features": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFeatureCollection",
                "summary": "Retrieves the collection of Feature resources.",
                "responses": {
                    "200": {
                        "description": "Feature collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Feature-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[iden]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.ca]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.en]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.es]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.it]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/features/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFeatureItem",
                "summary": "Retrieves a Feature resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feature resource response",
                        "schema": {
                            "$ref": "#/definitions/Feature-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/features_rel_brands": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFeaturesRelBrandCollection",
                "summary": "Retrieves the collection of FeaturesRelBrand resources.",
                "responses": {
                    "200": {
                        "description": "FeaturesRelBrand collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FeaturesRelBrand-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "feature",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "feature[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/features_rel_brands/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFeaturesRelBrandItem",
                "summary": "Retrieves a FeaturesRelBrand resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FeaturesRelBrand resource response",
                        "schema": {
                            "$ref": "#/definitions/FeaturesRelBrand-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/features_rel_companies": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFeaturesRelCompanyCollection",
                "summary": "Retrieves the collection of FeaturesRelCompany resources.",
                "responses": {
                    "200": {
                        "description": "FeaturesRelCompany collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FeaturesRelCompany-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "feature",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "feature[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postFeaturesRelCompanyCollection",
                "summary": "Creates a FeaturesRelCompany resource.",
                "responses": {
                    "201": {
                        "description": "FeaturesRelCompany resource created",
                        "schema": {
                            "$ref": "#/definitions/FeaturesRelCompany"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "featuresRelCompany",
                        "in": "body",
                        "description": "The new FeaturesRelCompany resource",
                        "schema": {
                            "$ref": "#/definitions/FeaturesRelCompany"
                        }
                    }
                ]
            }
        },
        "/features_rel_companies/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFeaturesRelCompanyItem",
                "summary": "Retrieves a FeaturesRelCompany resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FeaturesRelCompany resource response",
                        "schema": {
                            "$ref": "#/definitions/FeaturesRelCompany-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteFeaturesRelCompanyItem",
                "summary": "Removes the FeaturesRelCompany resource.",
                "responses": {
                    "204": {
                        "description": "FeaturesRelCompany resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/fixed_costs": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFixedCostCollection",
                "summary": "Retrieves the collection of FixedCost resources.",
                "responses": {
                    "200": {
                        "description": "FixedCost collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FixedCost-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "cost",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "cost[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[cost]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[description]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[cost]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postFixedCostCollection",
                "summary": "Creates a FixedCost resource.",
                "responses": {
                    "201": {
                        "description": "FixedCost resource created",
                        "schema": {
                            "$ref": "#/definitions/FixedCost"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "fixedCost",
                        "in": "body",
                        "description": "The new FixedCost resource",
                        "schema": {
                            "$ref": "#/definitions/FixedCost"
                        }
                    }
                ]
            }
        },
        "/fixed_costs/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFixedCostItem",
                "summary": "Retrieves a FixedCost resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FixedCost resource response",
                        "schema": {
                            "$ref": "#/definitions/FixedCost-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putFixedCostItem",
                "summary": "Replaces the FixedCost resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fixedCost",
                        "in": "body",
                        "description": "The updated FixedCost resource",
                        "schema": {
                            "$ref": "#/definitions/FixedCost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FixedCost resource updated",
                        "schema": {
                            "$ref": "#/definitions/FixedCost"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteFixedCostItem",
                "summary": "Removes the FixedCost resource.",
                "responses": {
                    "204": {
                        "description": "FixedCost resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/fixed_costs_rel_invoice_schedulers": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFixedCostsRelInvoiceSchedulerCollection",
                "summary": "Retrieves the collection of FixedCostsRelInvoiceScheduler resources.",
                "responses": {
                    "200": {
                        "description": "FixedCostsRelInvoiceScheduler collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FixedCostsRelInvoiceScheduler-detailedCollection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "ddisCountry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddisCountry.code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddisCountry.countryCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddisCountryMatch",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddisCountryMatch[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddisCountryMatch[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddisCountryMatch[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddisCountryMatch[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddisCountryMatch[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ddisCountryMatch[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddisCountry[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddisCountry[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[ddisCountryMatch]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[ddisCountry]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[quantity]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "fixedCost",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fixedCost.cost",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "fixedCost.description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fixedCost.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fixedCost[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceScheduler",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceScheduler.brand",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "invoiceScheduler.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "invoiceScheduler.email",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceScheduler.frequency",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "invoiceScheduler.invoiceTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "invoiceScheduler.lastExecution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceScheduler.lastExecutionError",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceScheduler.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceScheduler.nextExecution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceScheduler.numberSequence",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "invoiceScheduler.taxRate",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "invoiceScheduler.unit",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceScheduler[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "quantity[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "quantity[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "quantity[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "quantity[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "quantity[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "quantity[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "quantity[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "zone.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "zone.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "zone.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "zone.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[ddisCountryMatch]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[quantity]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[type]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postFixedCostsRelInvoiceSchedulerCollection",
                "summary": "Creates a FixedCostsRelInvoiceScheduler resource.",
                "responses": {
                    "201": {
                        "description": "FixedCostsRelInvoiceScheduler resource created",
                        "schema": {
                            "$ref": "#/definitions/FixedCostsRelInvoiceScheduler"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "fixedCostsRelInvoiceScheduler",
                        "in": "body",
                        "description": "The new FixedCostsRelInvoiceScheduler resource",
                        "schema": {
                            "$ref": "#/definitions/FixedCostsRelInvoiceScheduler"
                        }
                    }
                ]
            }
        },
        "/fixed_costs_rel_invoice_schedulers/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFixedCostsRelInvoiceSchedulerItem",
                "summary": "Retrieves a FixedCostsRelInvoiceScheduler resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FixedCostsRelInvoiceScheduler resource response",
                        "schema": {
                            "$ref": "#/definitions/FixedCostsRelInvoiceScheduler-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putFixedCostsRelInvoiceSchedulerItem",
                "summary": "Replaces the FixedCostsRelInvoiceScheduler resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fixedCostsRelInvoiceScheduler",
                        "in": "body",
                        "description": "The updated FixedCostsRelInvoiceScheduler resource",
                        "schema": {
                            "$ref": "#/definitions/FixedCostsRelInvoiceScheduler"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FixedCostsRelInvoiceScheduler resource updated",
                        "schema": {
                            "$ref": "#/definitions/FixedCostsRelInvoiceScheduler"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteFixedCostsRelInvoiceSchedulerItem",
                "summary": "Removes the FixedCostsRelInvoiceScheduler resource.",
                "responses": {
                    "204": {
                        "description": "FixedCostsRelInvoiceScheduler resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/fixed_costs_rel_invoices": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFixedCostsRelInvoiceCollection",
                "summary": "Retrieves the collection of FixedCostsRelInvoice resources.",
                "responses": {
                    "200": {
                        "description": "FixedCostsRelInvoice collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FixedCostsRelInvoice-detailedCollection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "exists[quantity]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "fixedCost",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fixedCost.cost",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "fixedCost.description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fixedCost.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fixedCost[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "invoice.currency",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.inDate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.invoiceTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "invoice.number",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.numberSequence",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "invoice.outDate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.scheduler",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "invoice.status",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.statusMsg",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice.taxRate",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "invoice.total",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "invoice.totalWithTax",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "invoice[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf.baseName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf.fileSize",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pdf.mimeType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "quantity[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "quantity[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "quantity[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "quantity[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "quantity[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "quantity[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "quantity[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[quantity]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postFixedCostsRelInvoiceCollection",
                "summary": "Creates a FixedCostsRelInvoice resource.",
                "responses": {
                    "201": {
                        "description": "FixedCostsRelInvoice resource created",
                        "schema": {
                            "$ref": "#/definitions/FixedCostsRelInvoice"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "fixedCostsRelInvoice",
                        "in": "body",
                        "description": "The new FixedCostsRelInvoice resource",
                        "schema": {
                            "$ref": "#/definitions/FixedCostsRelInvoice"
                        }
                    }
                ]
            }
        },
        "/fixed_costs_rel_invoices/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFixedCostsRelInvoiceItem",
                "summary": "Retrieves a FixedCostsRelInvoice resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FixedCostsRelInvoice resource response",
                        "schema": {
                            "$ref": "#/definitions/FixedCostsRelInvoice-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putFixedCostsRelInvoiceItem",
                "summary": "Replaces the FixedCostsRelInvoice resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fixedCostsRelInvoice",
                        "in": "body",
                        "description": "The updated FixedCostsRelInvoice resource",
                        "schema": {
                            "$ref": "#/definitions/FixedCostsRelInvoice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FixedCostsRelInvoice resource updated",
                        "schema": {
                            "$ref": "#/definitions/FixedCostsRelInvoice"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteFixedCostsRelInvoiceItem",
                "summary": "Removes the FixedCostsRelInvoice resource.",
                "responses": {
                    "204": {
                        "description": "FixedCostsRelInvoice resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/friends": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFriendCollection",
                "summary": "Retrieves the collection of Friend resources.",
                "responses": {
                    "200": {
                        "description": "Friend collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Friend-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domain",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interCompany",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interCompany[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interCompany[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "priority[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[directConnectivity]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[priority]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_pagination",
                        "in": "query",
                        "required": false,
                        "description": "Enable or disable pagination",
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postFriendCollection",
                "summary": "Creates a Friend resource.",
                "responses": {
                    "201": {
                        "description": "Friend resource created",
                        "schema": {
                            "$ref": "#/definitions/Friend"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "friend",
                        "in": "body",
                        "description": "The new Friend resource",
                        "schema": {
                            "$ref": "#/definitions/Friend"
                        }
                    }
                ]
            }
        },
        "/friends/status": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "operationId": "get_status_collectionFriendCollection",
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv",
                    "application/xml",
                    "text/xml",
                    "text/html",
                    "application/octet-stream"
                ],
                "summary": "Retrieves the collection of Friend resources.",
                "responses": {
                    "200": {
                        "description": "Friend collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Friend-status"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.allowRecordingRemoval",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "company.balance",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "company.billingMethod",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.callCsvNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.country",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.countryName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.currency",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.currentDayUsage",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "company.defaultTimezone",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.domainUsers",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.externallyextraopts",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.faxNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.invoiceNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.ipfilter",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "company.language",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.maxCalls",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.maxDailyUsage",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.maxDailyUsageEmail",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.maxDailyUsageNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.nif",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.onDemandRecord",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.onDemandRecordCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.outgoingDdiRule",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.postalAddress",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.postalCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.province",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.showInvoices",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "company.town",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.voicemailNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domainName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interCompany",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interCompany[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interCompany[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_pagination",
                        "in": "query",
                        "required": false,
                        "description": "Enable or disable pagination",
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/friends/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFriendItem",
                "summary": "Retrieves a Friend resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friend resource response",
                        "schema": {
                            "$ref": "#/definitions/Friend-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putFriendItem",
                "summary": "Replaces the Friend resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "friend",
                        "in": "body",
                        "description": "The updated Friend resource",
                        "schema": {
                            "$ref": "#/definitions/Friend"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friend resource updated",
                        "schema": {
                            "$ref": "#/definitions/Friend"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteFriendItem",
                "summary": "Removes the Friend resource.",
                "responses": {
                    "204": {
                        "description": "Friend resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/invoice_number_sequences": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getInvoiceNumberSequenceCollection",
                "summary": "Retrieves the collection of InvoiceNumberSequence resources.",
                "responses": {
                    "200": {
                        "description": "InvoiceNumberSequence collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InvoiceNumberSequence-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "exists[latestValue]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "latestValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "latestValue[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "latestValue[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "latestValue[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "latestValue[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "latestValue[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "latestValue[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[latestValue]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postInvoiceNumberSequenceCollection",
                "summary": "Creates a InvoiceNumberSequence resource.",
                "responses": {
                    "201": {
                        "description": "InvoiceNumberSequence resource created",
                        "schema": {
                            "$ref": "#/definitions/InvoiceNumberSequence"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "invoiceNumberSequence",
                        "in": "body",
                        "description": "The new InvoiceNumberSequence resource",
                        "schema": {
                            "$ref": "#/definitions/InvoiceNumberSequence"
                        }
                    }
                ]
            }
        },
        "/invoice_number_sequences/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getInvoiceNumberSequenceItem",
                "summary": "Retrieves a InvoiceNumberSequence resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "InvoiceNumberSequence resource response",
                        "schema": {
                            "$ref": "#/definitions/InvoiceNumberSequence-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putInvoiceNumberSequenceItem",
                "summary": "Replaces the InvoiceNumberSequence resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invoiceNumberSequence",
                        "in": "body",
                        "description": "The updated InvoiceNumberSequence resource",
                        "schema": {
                            "$ref": "#/definitions/InvoiceNumberSequence"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "InvoiceNumberSequence resource updated",
                        "schema": {
                            "$ref": "#/definitions/InvoiceNumberSequence"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteInvoiceNumberSequenceItem",
                "summary": "Removes the InvoiceNumberSequence resource.",
                "responses": {
                    "204": {
                        "description": "InvoiceNumberSequence resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/invoice_schedulers": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getInvoiceSchedulerCollection",
                "summary": "Retrieves the collection of InvoiceScheduler resources.",
                "responses": {
                    "200": {
                        "description": "InvoiceScheduler collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InvoiceScheduler-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "brand",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "brand[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[lastExecution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[nextExecution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "frequency",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "frequency[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "frequency[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "frequency[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "frequency[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "frequency[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "frequency[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceTemplate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceTemplate[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceTemplate[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "lastExecution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecution[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecution[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecution[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "lastExecution[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecution[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecution[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecution[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nextExecution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nextExecution[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nextExecution[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nextExecution[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nextExecution[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nextExecution[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "nextExecution[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nextExecution[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberSequence",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberSequence[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberSequence[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unit",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "unit[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "unit[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "unit[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "unit[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "unit[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[frequency]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[lastExecution]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[nextExecution]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[unit]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postInvoiceSchedulerCollection",
                "summary": "Creates a InvoiceScheduler resource.",
                "responses": {
                    "201": {
                        "description": "InvoiceScheduler resource created",
                        "schema": {
                            "$ref": "#/definitions/InvoiceScheduler"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "invoiceScheduler",
                        "in": "body",
                        "description": "The new InvoiceScheduler resource",
                        "schema": {
                            "$ref": "#/definitions/InvoiceScheduler"
                        }
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/invoice_schedulers/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getInvoiceSchedulerItem",
                "summary": "Retrieves a InvoiceScheduler resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "InvoiceScheduler resource response",
                        "schema": {
                            "$ref": "#/definitions/InvoiceScheduler-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putInvoiceSchedulerItem",
                "summary": "Replaces the InvoiceScheduler resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invoiceScheduler",
                        "in": "body",
                        "description": "The updated InvoiceScheduler resource",
                        "schema": {
                            "$ref": "#/definitions/InvoiceScheduler"
                        }
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "InvoiceScheduler resource updated",
                        "schema": {
                            "$ref": "#/definitions/InvoiceScheduler"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteInvoiceSchedulerItem",
                "summary": "Removes the InvoiceScheduler resource.",
                "responses": {
                    "204": {
                        "description": "InvoiceScheduler resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/invoice_templates": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getInvoiceTemplateCollection",
                "summary": "Retrieves the collection of InvoiceTemplate resources.",
                "responses": {
                    "200": {
                        "description": "InvoiceTemplate collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InvoiceTemplate-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "description[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[description]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "global",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postInvoiceTemplateCollection",
                "summary": "Creates a InvoiceTemplate resource.",
                "responses": {
                    "201": {
                        "description": "InvoiceTemplate resource created",
                        "schema": {
                            "$ref": "#/definitions/InvoiceTemplate"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "invoiceTemplate",
                        "in": "body",
                        "description": "The new InvoiceTemplate resource",
                        "schema": {
                            "$ref": "#/definitions/InvoiceTemplate"
                        }
                    }
                ]
            }
        },
        "/invoice_templates/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getInvoiceTemplateItem",
                "summary": "Retrieves a InvoiceTemplate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "InvoiceTemplate resource response",
                        "schema": {
                            "$ref": "#/definitions/InvoiceTemplate-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putInvoiceTemplateItem",
                "summary": "Replaces the InvoiceTemplate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invoiceTemplate",
                        "in": "body",
                        "description": "The updated InvoiceTemplate resource",
                        "schema": {
                            "$ref": "#/definitions/InvoiceTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "InvoiceTemplate resource updated",
                        "schema": {
                            "$ref": "#/definitions/InvoiceTemplate"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteInvoiceTemplateItem",
                "summary": "Removes the InvoiceTemplate resource.",
                "responses": {
                    "204": {
                        "description": "InvoiceTemplate resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/invoices": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getInvoiceCollection",
                "summary": "Retrieves the collection of Invoice resources.",
                "responses": {
                    "200": {
                        "description": "Invoice collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Invoice-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[inDate]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[invoiceTemplate]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[number]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[outDate]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[pdf.baseName]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[pdf.fileSize]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[pdf.mimeType]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[scheduler]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[status]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[taxRate]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[totalWithTax]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[total]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inDate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inDate[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inDate[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inDate[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "inDate[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inDate[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inDate[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inDate[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceTemplate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceTemplate[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceTemplate[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberSequence",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberSequence[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberSequence[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "number[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "outDate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outDate[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outDate[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outDate[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outDate[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "outDate[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outDate[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outDate[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf.baseName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf.baseName[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf.baseName[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf.baseName[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf.baseName[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf.baseName[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pdf.baseName[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf.fileSize",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pdf.fileSize[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pdf.fileSize[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf.fileSize[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf.fileSize[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf.fileSize[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf.fileSize[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf.fileSize[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf.mimeType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf.mimeType[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf.mimeType[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf.mimeType[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf.mimeType[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf.mimeType[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pdf.mimeType[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "scheduler",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "scheduler[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "scheduler[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "status[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "taxRate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "taxRate[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "taxRate[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "taxRate[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "taxRate[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "taxRate[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "taxRate[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "taxRate[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "total",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "totalWithTax",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "totalWithTax[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "totalWithTax[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "totalWithTax[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "totalWithTax[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "totalWithTax[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "totalWithTax[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "totalWithTax[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "total[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "total[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "total[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "total[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "total[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "total[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "total[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[inDate]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[number]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[outDate]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[pdf.baseName]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[pdf.fileSize]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[pdf.mimeType]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[status]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[taxRate]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[totalWithTax]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[total]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postInvoiceCollection",
                "summary": "Creates a Invoice resource.",
                "responses": {
                    "201": {
                        "description": "Invoice resource created",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "invoice",
                        "in": "body",
                        "description": "The new Invoice resource",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/invoices/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getInvoiceItem",
                "summary": "Retrieves a Invoice resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice resource response",
                        "schema": {
                            "$ref": "#/definitions/Invoice-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putInvoiceItem",
                "summary": "Replaces the Invoice resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invoice",
                        "in": "body",
                        "description": "The updated Invoice resource",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice resource updated",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteInvoiceItem",
                "summary": "Removes the Invoice resource.",
                "responses": {
                    "204": {
                        "description": "Invoice resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/invoices/{id}/pdf": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "#/definitions/Invoice_Pdf",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "tags": [
                    "Provider"
                ],
                "operationId": "/invoice_pdfInvoiceItem",
                "summary": "Retrieves a Invoice resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/languages": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getLanguageCollection",
                "summary": "Retrieves the collection of Language resources.",
                "responses": {
                    "200": {
                        "description": "Language collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Language-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[iden]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.ca]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.en]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.es]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.it]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/languages/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getLanguageItem",
                "summary": "Retrieves a Language resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Language resource response",
                        "schema": {
                            "$ref": "#/definitions/Language-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/locations": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getLocationCollection",
                "summary": "Retrieves the collection of Location resources.",
                "responses": {
                    "200": {
                        "description": "Location collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Location-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "description[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[description]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/match_list_patterns": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getMatchListPatternCollection",
                "summary": "Retrieves the collection of MatchListPattern resources.",
                "responses": {
                    "200": {
                        "description": "MatchListPattern collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MatchListPattern-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[description]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[numberCountry]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[numbervalue]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[regexp]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchList",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchList[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "numbervalue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numbervalue[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numbervalue[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numbervalue[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numbervalue[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numbervalue[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "numbervalue[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regexp",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regexp[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regexp[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regexp[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regexp[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regexp[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "regexp[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[numbervalue]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[regexp]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[type]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postMatchListPatternCollection",
                "summary": "Creates a MatchListPattern resource.",
                "responses": {
                    "201": {
                        "description": "MatchListPattern resource created",
                        "schema": {
                            "$ref": "#/definitions/MatchListPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "matchListPattern",
                        "in": "body",
                        "description": "The new MatchListPattern resource",
                        "schema": {
                            "$ref": "#/definitions/MatchListPattern"
                        }
                    }
                ]
            }
        },
        "/match_list_patterns/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getMatchListPatternItem",
                "summary": "Retrieves a MatchListPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MatchListPattern resource response",
                        "schema": {
                            "$ref": "#/definitions/MatchListPattern-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putMatchListPatternItem",
                "summary": "Replaces the MatchListPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "matchListPattern",
                        "in": "body",
                        "description": "The updated MatchListPattern resource",
                        "schema": {
                            "$ref": "#/definitions/MatchListPattern"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MatchListPattern resource updated",
                        "schema": {
                            "$ref": "#/definitions/MatchListPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteMatchListPatternItem",
                "summary": "Removes the MatchListPattern resource.",
                "responses": {
                    "204": {
                        "description": "MatchListPattern resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/match_lists": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getMatchListCollection",
                "summary": "Retrieves the collection of MatchList resources.",
                "responses": {
                    "200": {
                        "description": "MatchList collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MatchList-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postMatchListCollection",
                "summary": "Creates a MatchList resource.",
                "responses": {
                    "201": {
                        "description": "MatchList resource created",
                        "schema": {
                            "$ref": "#/definitions/MatchList"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "matchList",
                        "in": "body",
                        "description": "The new MatchList resource",
                        "schema": {
                            "$ref": "#/definitions/MatchList"
                        }
                    }
                ]
            }
        },
        "/match_lists/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getMatchListItem",
                "summary": "Retrieves a MatchList resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MatchList resource response",
                        "schema": {
                            "$ref": "#/definitions/MatchList-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putMatchListItem",
                "summary": "Replaces the MatchList resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "matchList",
                        "in": "body",
                        "description": "The updated MatchList resource",
                        "schema": {
                            "$ref": "#/definitions/MatchList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MatchList resource updated",
                        "schema": {
                            "$ref": "#/definitions/MatchList"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteMatchListItem",
                "summary": "Removes the MatchList resource.",
                "responses": {
                    "204": {
                        "description": "MatchList resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/music_on_holds": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getMusicOnHoldCollection",
                "summary": "Retrieves the collection of MusicOnHold resources.",
                "responses": {
                    "200": {
                        "description": "MusicOnHold collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MusicOnHold-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "exists[originalFile.baseName]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[originalFile.fileSize]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[originalFile.mimeType]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[status]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "originalFile.baseName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "originalFile.baseName[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "originalFile.baseName[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "originalFile.baseName[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "originalFile.baseName[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "originalFile.baseName[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "originalFile.baseName[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "originalFile.fileSize",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "originalFile.fileSize[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "originalFile.fileSize[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "originalFile.fileSize[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "originalFile.fileSize[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "originalFile.fileSize[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "originalFile.fileSize[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "originalFile.fileSize[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "originalFile.mimeType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "originalFile.mimeType[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "originalFile.mimeType[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "originalFile.mimeType[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "originalFile.mimeType[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "originalFile.mimeType[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "originalFile.mimeType[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "status[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[originalFile.baseName]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[originalFile.fileSize]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[originalFile.mimeType]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[status]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data",
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postMusicOnHoldCollection",
                "summary": "Creates a MusicOnHold resource.",
                "responses": {
                    "201": {
                        "description": "MusicOnHold resource created",
                        "schema": {
                            "$ref": "#/definitions/MusicOnHold"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "musicOnHold",
                        "in": "formData",
                        "description": "The new MusicOnHold resource",
                        "type": "string"
                    },
                    {
                        "name": "OriginalFile",
                        "in": "formData",
                        "type": "file",
                        "required": false
                    }
                ]
            }
        },
        "/music_on_holds/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getMusicOnHoldItem",
                "summary": "Retrieves a MusicOnHold resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MusicOnHold resource response",
                        "schema": {
                            "$ref": "#/definitions/MusicOnHold-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "multipart/form-data",
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putMusicOnHoldItem",
                "summary": "Replaces the MusicOnHold resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "musicOnHold",
                        "in": "formData",
                        "description": "The updated MusicOnHold resource",
                        "type": "string"
                    },
                    {
                        "name": "OriginalFile",
                        "in": "formData",
                        "type": "file",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MusicOnHold resource updated",
                        "schema": {
                            "$ref": "#/definitions/MusicOnHold"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteMusicOnHoldItem",
                "summary": "Removes the MusicOnHold resource.",
                "responses": {
                    "204": {
                        "description": "MusicOnHold resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/music_on_holds/{id}/encodedfile": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "#/definitions/MusicOnHold_EncodedFile",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "tags": [
                    "Provider"
                ],
                "operationId": "/musiconhold_encodedfileMusicOnHoldItem",
                "summary": "Retrieves a MusicOnHold resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/music_on_holds/{id}/originalfile": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "#/definitions/MusicOnHold_OriginalFile",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "tags": [
                    "Provider"
                ],
                "operationId": "/musiconhold_originalfileMusicOnHoldItem",
                "summary": "Retrieves a MusicOnHold resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/my/active_calls": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "My"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "type": "integer",
                        "required": false,
                        "description": "Company Id"
                    }
                ],
                "operationId": "get_my_active_callsActiveCallsItem",
                "summary": "Retrieves a ActiveCalls resource.",
                "responses": {
                    "200": {
                        "description": "ActiveCalls resource response",
                        "schema": {
                            "$ref": "#/definitions/ActiveCalls"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/my/profile": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "My"
                ],
                "parameters": [],
                "operationId": "get_my_profileProfileItem",
                "summary": "Retrieves a Profile resource.",
                "responses": {
                    "200": {
                        "description": "Profile resource response",
                        "schema": {
                            "$ref": "#/definitions/Profile"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/my/registration_summary": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "My"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "type": "integer",
                        "required": false,
                        "description": "Company Id"
                    }
                ],
                "operationId": "get_my_registration_summaryRegistrationSummaryItem",
                "summary": "Retrieves a RegistrationSummary resource.",
                "responses": {
                    "200": {
                        "description": "RegistrationSummary resource response",
                        "schema": {
                            "$ref": "#/definitions/RegistrationSummary"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/notification_template_contents": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getNotificationTemplateContentCollection",
                "summary": "Retrieves the collection of NotificationTemplateContent resources.",
                "responses": {
                    "200": {
                        "description": "NotificationTemplateContent collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NotificationTemplateContent-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "exists[fromAddress]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[fromName]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[language]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "fromAddress",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromAddress[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromAddress[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromAddress[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromAddress[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromAddress[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "fromAddress[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromName[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromName[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromName[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromName[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromName[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "fromName[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "notificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "notificationTemplate[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[fromAddress]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[fromName]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postNotificationTemplateContentCollection",
                "summary": "Creates a NotificationTemplateContent resource.",
                "responses": {
                    "201": {
                        "description": "NotificationTemplateContent resource created",
                        "schema": {
                            "$ref": "#/definitions/NotificationTemplateContent"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "notificationTemplateContent",
                        "in": "body",
                        "description": "The new NotificationTemplateContent resource",
                        "schema": {
                            "$ref": "#/definitions/NotificationTemplateContent"
                        }
                    }
                ]
            }
        },
        "/notification_template_contents/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getNotificationTemplateContentItem",
                "summary": "Retrieves a NotificationTemplateContent resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NotificationTemplateContent resource response",
                        "schema": {
                            "$ref": "#/definitions/NotificationTemplateContent-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putNotificationTemplateContentItem",
                "summary": "Replaces the NotificationTemplateContent resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "notificationTemplateContent",
                        "in": "body",
                        "description": "The updated NotificationTemplateContent resource",
                        "schema": {
                            "$ref": "#/definitions/NotificationTemplateContent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NotificationTemplateContent resource updated",
                        "schema": {
                            "$ref": "#/definitions/NotificationTemplateContent"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteNotificationTemplateContentItem",
                "summary": "Removes the NotificationTemplateContent resource.",
                "responses": {
                    "204": {
                        "description": "NotificationTemplateContent resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/notification_templates": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getNotificationTemplateCollection",
                "summary": "Retrieves the collection of NotificationTemplate resources.",
                "responses": {
                    "200": {
                        "description": "NotificationTemplate collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NotificationTemplate-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[type]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postNotificationTemplateCollection",
                "summary": "Creates a NotificationTemplate resource.",
                "responses": {
                    "201": {
                        "description": "NotificationTemplate resource created",
                        "schema": {
                            "$ref": "#/definitions/NotificationTemplate"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "notificationTemplate",
                        "in": "body",
                        "description": "The new NotificationTemplate resource",
                        "schema": {
                            "$ref": "#/definitions/NotificationTemplate"
                        }
                    }
                ]
            }
        },
        "/notification_templates/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getNotificationTemplateItem",
                "summary": "Retrieves a NotificationTemplate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NotificationTemplate resource response",
                        "schema": {
                            "$ref": "#/definitions/NotificationTemplate-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putNotificationTemplateItem",
                "summary": "Replaces the NotificationTemplate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "notificationTemplate",
                        "in": "body",
                        "description": "The updated NotificationTemplate resource",
                        "schema": {
                            "$ref": "#/definitions/NotificationTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NotificationTemplate resource updated",
                        "schema": {
                            "$ref": "#/definitions/NotificationTemplate"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteNotificationTemplateItem",
                "summary": "Removes the NotificationTemplate resource.",
                "responses": {
                    "204": {
                        "description": "NotificationTemplate resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/outgoing_ddi_rules": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getOutgoingDdiRuleCollection",
                "summary": "Retrieves the collection of OutgoingDdiRule resources.",
                "responses": {
                    "200": {
                        "description": "OutgoingDdiRule collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OutgoingDdiRule-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultAction",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultAction[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultAction[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultAction[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultAction[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultAction[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[forcedDdi]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "forcedDdi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "forcedDdi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "forcedDdi[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[defaultAction]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/outgoing_ddi_rules/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getOutgoingDdiRuleItem",
                "summary": "Retrieves a OutgoingDdiRule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OutgoingDdiRule resource response",
                        "schema": {
                            "$ref": "#/definitions/OutgoingDdiRule-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/outgoing_routings": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getOutgoingRoutingCollection",
                "summary": "Retrieves the collection of OutgoingRouting resources.",
                "responses": {
                    "200": {
                        "description": "OutgoingRouting collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OutgoingRouting-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "carrier",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carrier[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carrier[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "clidCountry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "clidCountry[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "clidCountry[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[carrier]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[company]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[routingMode]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[routingPatternGroup]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[routingPattern]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[routingTag]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[type]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "priority[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingMode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingMode[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingMode[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingMode[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingMode[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "routingMode[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingMode[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingPattern",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingPatternGroup",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingPatternGroup[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingPatternGroup[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "routingPattern[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingPattern[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "routingTag",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingTag[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingTag[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "stopper",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "type[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weight",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "weight[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weight[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weight[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weight[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weight[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weight[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[priority]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[routingMode]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[stopper]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[type]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[weight]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postOutgoingRoutingCollection",
                "summary": "Creates a OutgoingRouting resource.",
                "responses": {
                    "201": {
                        "description": "OutgoingRouting resource created",
                        "schema": {
                            "$ref": "#/definitions/OutgoingRouting"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "outgoingRouting",
                        "in": "body",
                        "description": "The new OutgoingRouting resource",
                        "schema": {
                            "$ref": "#/definitions/OutgoingRouting"
                        }
                    }
                ]
            }
        },
        "/outgoing_routings/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getOutgoingRoutingItem",
                "summary": "Retrieves a OutgoingRouting resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OutgoingRouting resource response",
                        "schema": {
                            "$ref": "#/definitions/OutgoingRouting-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putOutgoingRoutingItem",
                "summary": "Replaces the OutgoingRouting resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "outgoingRouting",
                        "in": "body",
                        "description": "The updated OutgoingRouting resource",
                        "schema": {
                            "$ref": "#/definitions/OutgoingRouting"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OutgoingRouting resource updated",
                        "schema": {
                            "$ref": "#/definitions/OutgoingRouting"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteOutgoingRoutingItem",
                "summary": "Removes the OutgoingRouting resource.",
                "responses": {
                    "204": {
                        "description": "OutgoingRouting resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/proxy_trunks": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getProxyTrunkCollection",
                "summary": "Retrieves the collection of ProxyTrunk resources.",
                "responses": {
                    "200": {
                        "description": "ProxyTrunk collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProxyTrunk-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "exists[name]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[ip]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/proxy_trunks/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getProxyTrunkItem",
                "summary": "Retrieves a ProxyTrunk resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProxyTrunk resource response",
                        "schema": {
                            "$ref": "#/definitions/ProxyTrunk-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/public_entities": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getPublicEntityCollection",
                "summary": "Retrieves the collection of PublicEntity resources.",
                "responses": {
                    "200": {
                        "description": "PublicEntity collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PublicEntity-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "exists[name.ca]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[name.en]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[name.es]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[name.it]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name.ca[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name.es[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[iden]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.ca]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.en]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.es]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.it]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/public_entities/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getPublicEntityItem",
                "summary": "Retrieves a PublicEntity resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PublicEntity resource response",
                        "schema": {
                            "$ref": "#/definitions/PublicEntity-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/rating_plan_groups": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRatingPlanGroupCollection",
                "summary": "Retrieves the collection of RatingPlanGroup resources.",
                "responses": {
                    "200": {
                        "description": "RatingPlanGroup collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RatingPlanGroup-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "currency",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currency[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currency[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "description.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.ca[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.ca[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.ca[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.ca[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.ca[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.en[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.en[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.en[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.en[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.en[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.es[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.es[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.es[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.es[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.es[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.it[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.it[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.it[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.it[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.it[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[currency]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description.ca]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description.en]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description.es]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description.it]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.ca]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.en]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.es]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.it]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postRatingPlanGroupCollection",
                "summary": "Creates a RatingPlanGroup resource.",
                "responses": {
                    "201": {
                        "description": "RatingPlanGroup resource created",
                        "schema": {
                            "$ref": "#/definitions/RatingPlanGroup"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "ratingPlanGroup",
                        "in": "body",
                        "description": "The new RatingPlanGroup resource",
                        "schema": {
                            "$ref": "#/definitions/RatingPlanGroup"
                        }
                    }
                ]
            }
        },
        "/rating_plan_groups/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRatingPlanGroupItem",
                "summary": "Retrieves a RatingPlanGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RatingPlanGroup resource response",
                        "schema": {
                            "$ref": "#/definitions/RatingPlanGroup-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putRatingPlanGroupItem",
                "summary": "Replaces the RatingPlanGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ratingPlanGroup",
                        "in": "body",
                        "description": "The updated RatingPlanGroup resource",
                        "schema": {
                            "$ref": "#/definitions/RatingPlanGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RatingPlanGroup resource updated",
                        "schema": {
                            "$ref": "#/definitions/RatingPlanGroup"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteRatingPlanGroupItem",
                "summary": "Removes the RatingPlanGroup resource.",
                "responses": {
                    "204": {
                        "description": "RatingPlanGroup resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/rating_plans": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRatingPlanCollection",
                "summary": "Retrieves the collection of RatingPlan resources.",
                "responses": {
                    "200": {
                        "description": "RatingPlan collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RatingPlan-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "destinationRateGroup",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "destinationRateGroup[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[friday]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[monday]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[saturday]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[sunday]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[thursday]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[timingType]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[tuesday]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[wednesday]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "friday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "friday[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "monday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "monday[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ratingPlanGroup",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ratingPlanGroup[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "saturday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "saturday[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sunday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sunday[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "thursday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "thursday[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "timeIn",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeIn[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeIn[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeIn[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeIn[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeIn[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeIn[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timingType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timingType[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timingType[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "timingType[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timingType[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timingType[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timingType[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tuesday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "tuesday[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "wednesday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "wednesday[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "weight",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weight[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weight[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weight[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weight[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weight[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weight[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[friday]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[monday]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[saturday]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[sunday]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[thursday]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[timeIn]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[timingType]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[tuesday]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[wednesday]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[weight]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postRatingPlanCollection",
                "summary": "Creates a RatingPlan resource.",
                "responses": {
                    "201": {
                        "description": "RatingPlan resource created",
                        "schema": {
                            "$ref": "#/definitions/RatingPlan"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "ratingPlan",
                        "in": "body",
                        "description": "The new RatingPlan resource",
                        "schema": {
                            "$ref": "#/definitions/RatingPlan"
                        }
                    }
                ]
            }
        },
        "/rating_plans/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRatingPlanItem",
                "summary": "Retrieves a RatingPlan resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RatingPlan resource response",
                        "schema": {
                            "$ref": "#/definitions/RatingPlan-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putRatingPlanItem",
                "summary": "Replaces the RatingPlan resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ratingPlan",
                        "in": "body",
                        "description": "The updated RatingPlan resource",
                        "schema": {
                            "$ref": "#/definitions/RatingPlan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RatingPlan resource updated",
                        "schema": {
                            "$ref": "#/definitions/RatingPlan"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteRatingPlanItem",
                "summary": "Removes the RatingPlan resource.",
                "responses": {
                    "204": {
                        "description": "RatingPlan resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/rating_profiles": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRatingProfileCollection",
                "summary": "Retrieves the collection of RatingProfile resources.",
                "responses": {
                    "200": {
                        "description": "RatingProfile collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RatingProfile-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "activationTime",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activationTime[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activationTime[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activationTime[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activationTime[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activationTime[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activationTime[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carrier",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carrier[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carrier[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[carrier]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[company]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[routingTag]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ratingPlanGroup",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ratingPlanGroup[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingTag",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingTag[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingTag[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[activationTime]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postRatingProfileCollection",
                "summary": "Creates a RatingProfile resource.",
                "responses": {
                    "201": {
                        "description": "RatingProfile resource created",
                        "schema": {
                            "$ref": "#/definitions/RatingProfile"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "ratingProfile",
                        "in": "body",
                        "description": "The new RatingProfile resource",
                        "schema": {
                            "$ref": "#/definitions/RatingProfile"
                        }
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/rating_profiles/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRatingProfileItem",
                "summary": "Retrieves a RatingProfile resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RatingProfile resource response",
                        "schema": {
                            "$ref": "#/definitions/RatingProfile-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putRatingProfileItem",
                "summary": "Replaces the RatingProfile resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ratingProfile",
                        "in": "body",
                        "description": "The updated RatingProfile resource",
                        "schema": {
                            "$ref": "#/definitions/RatingProfile"
                        }
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RatingProfile resource updated",
                        "schema": {
                            "$ref": "#/definitions/RatingProfile"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteRatingProfileItem",
                "summary": "Removes the RatingProfile resource.",
                "responses": {
                    "204": {
                        "description": "RatingProfile resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/residential_devices": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getResidentialDeviceCollection",
                "summary": "Retrieves the collection of ResidentialDevice resources.",
                "responses": {
                    "200": {
                        "description": "ResidentialDevice collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ResidentialDevice-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domainName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "multiContact",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "rtpEncryption",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[directConnectivity]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[multiContact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[rtpEncryption]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_pagination",
                        "in": "query",
                        "required": false,
                        "description": "Enable or disable pagination",
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postResidentialDeviceCollection",
                "summary": "Creates a ResidentialDevice resource.",
                "responses": {
                    "201": {
                        "description": "ResidentialDevice resource created",
                        "schema": {
                            "$ref": "#/definitions/ResidentialDevice"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "residentialDevice",
                        "in": "body",
                        "description": "The new ResidentialDevice resource",
                        "schema": {
                            "$ref": "#/definitions/ResidentialDevice"
                        }
                    }
                ]
            }
        },
        "/residential_devices/status": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "operationId": "get_status_collectionResidentialDeviceCollection",
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv",
                    "application/xml",
                    "text/xml",
                    "text/html",
                    "application/octet-stream"
                ],
                "summary": "Retrieves the collection of ResidentialDevice resources.",
                "responses": {
                    "200": {
                        "description": "ResidentialDevice collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ResidentialDevice-status"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.allowRecordingRemoval",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "company.balance",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "company.billingMethod",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.callCsvNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.country",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.countryName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.currency",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.currentDayUsage",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "company.defaultTimezone",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.domainUsers",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.externallyextraopts",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.faxNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.invoiceNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.ipfilter",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "company.language",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.maxCalls",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.maxDailyUsage",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.maxDailyUsageEmail",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.maxDailyUsageNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.nif",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.onDemandRecord",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.onDemandRecordCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.outgoingDdiRule",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.postalAddress",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.postalCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.province",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.showInvoices",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "company.town",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.voicemailNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domainName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[directConnectivity]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_pagination",
                        "in": "query",
                        "required": false,
                        "description": "Enable or disable pagination",
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/residential_devices/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getResidentialDeviceItem",
                "summary": "Retrieves a ResidentialDevice resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ResidentialDevice resource response",
                        "schema": {
                            "$ref": "#/definitions/ResidentialDevice-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putResidentialDeviceItem",
                "summary": "Replaces the ResidentialDevice resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "residentialDevice",
                        "in": "body",
                        "description": "The updated ResidentialDevice resource",
                        "schema": {
                            "$ref": "#/definitions/ResidentialDevice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ResidentialDevice resource updated",
                        "schema": {
                            "$ref": "#/definitions/ResidentialDevice"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteResidentialDeviceItem",
                "summary": "Removes the ResidentialDevice resource.",
                "responses": {
                    "204": {
                        "description": "ResidentialDevice resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/retail_accounts": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRetailAccountCollection",
                "summary": "Retrieves the collection of RetailAccount resources.",
                "responses": {
                    "200": {
                        "description": "RetailAccount collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RetailAccount-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domainName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "multiContact",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "rtpEncryption",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[directConnectivity]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[multiContact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[rtpEncryption]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_pagination",
                        "in": "query",
                        "required": false,
                        "description": "Enable or disable pagination",
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postRetailAccountCollection",
                "summary": "Creates a RetailAccount resource.",
                "responses": {
                    "201": {
                        "description": "RetailAccount resource created",
                        "schema": {
                            "$ref": "#/definitions/RetailAccount"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "retailAccount",
                        "in": "body",
                        "description": "The new RetailAccount resource",
                        "schema": {
                            "$ref": "#/definitions/RetailAccount"
                        }
                    }
                ]
            }
        },
        "/retail_accounts/status": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "operationId": "get_status_collectionRetailAccountCollection",
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv",
                    "application/xml",
                    "text/xml",
                    "text/html",
                    "application/octet-stream"
                ],
                "summary": "Retrieves the collection of RetailAccount resources.",
                "responses": {
                    "200": {
                        "description": "RetailAccount collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RetailAccount-status"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.allowRecordingRemoval",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "company.balance",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "company.billingMethod",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.callCsvNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.country",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.countryName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.currency",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.currentDayUsage",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "company.defaultTimezone",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.domainUsers",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.externallyextraopts",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.faxNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.invoiceNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.ipfilter",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "company.language",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.maxCalls",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.maxDailyUsage",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.maxDailyUsageEmail",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.maxDailyUsageNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.nif",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.onDemandRecord",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.onDemandRecordCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.outgoingDdiRule",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.postalAddress",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.postalCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.province",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.showInvoices",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "company.town",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.voicemailNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "directConnectivity[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domainName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "multiContact",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "rtpEncryption",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[directConnectivity]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[multiContact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[rtpEncryption]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_pagination",
                        "in": "query",
                        "required": false,
                        "description": "Enable or disable pagination",
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/retail_accounts/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRetailAccountItem",
                "summary": "Retrieves a RetailAccount resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RetailAccount resource response",
                        "schema": {
                            "$ref": "#/definitions/RetailAccount-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putRetailAccountItem",
                "summary": "Replaces the RetailAccount resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "retailAccount",
                        "in": "body",
                        "description": "The updated RetailAccount resource",
                        "schema": {
                            "$ref": "#/definitions/RetailAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RetailAccount resource updated",
                        "schema": {
                            "$ref": "#/definitions/RetailAccount"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteRetailAccountItem",
                "summary": "Removes the RetailAccount resource.",
                "responses": {
                    "204": {
                        "description": "RetailAccount resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/routing_pattern_groups": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRoutingPatternGroupCollection",
                "summary": "Retrieves the collection of RoutingPatternGroup resources.",
                "responses": {
                    "200": {
                        "description": "RoutingPatternGroup collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RoutingPatternGroup-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "description[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[description]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postRoutingPatternGroupCollection",
                "summary": "Creates a RoutingPatternGroup resource.",
                "responses": {
                    "201": {
                        "description": "RoutingPatternGroup resource created",
                        "schema": {
                            "$ref": "#/definitions/RoutingPatternGroup-withPatterns"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "routingPatternGroup",
                        "in": "body",
                        "description": "The new RoutingPatternGroup resource",
                        "schema": {
                            "$ref": "#/definitions/RoutingPatternGroup"
                        }
                    }
                ]
            }
        },
        "/routing_pattern_groups/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRoutingPatternGroupItem",
                "summary": "Retrieves a RoutingPatternGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RoutingPatternGroup resource response",
                        "schema": {
                            "$ref": "#/definitions/RoutingPatternGroup-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putRoutingPatternGroupItem",
                "summary": "Replaces the RoutingPatternGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "routingPatternGroup",
                        "in": "body",
                        "description": "The updated RoutingPatternGroup resource",
                        "schema": {
                            "$ref": "#/definitions/RoutingPatternGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RoutingPatternGroup resource updated",
                        "schema": {
                            "$ref": "#/definitions/RoutingPatternGroup-withPatterns"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteRoutingPatternGroupItem",
                "summary": "Removes the RoutingPatternGroup resource.",
                "responses": {
                    "204": {
                        "description": "RoutingPatternGroup resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/routing_pattern_groups_rel_patterns": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRoutingPatternGroupsRelPatternCollection",
                "summary": "Retrieves the collection of RoutingPatternGroupsRelPattern resources.",
                "responses": {
                    "200": {
                        "description": "RoutingPatternGroupsRelPattern collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RoutingPatternGroupsRelPattern-detailedCollection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "description.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingPattern",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingPattern.prefix",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingPatternGroup",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingPatternGroup.description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingPatternGroup.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingPatternGroup[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routingPattern[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postRoutingPatternGroupsRelPatternCollection",
                "summary": "Creates a RoutingPatternGroupsRelPattern resource.",
                "responses": {
                    "201": {
                        "description": "RoutingPatternGroupsRelPattern resource created",
                        "schema": {
                            "$ref": "#/definitions/RoutingPatternGroupsRelPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "routingPatternGroupsRelPattern",
                        "in": "body",
                        "description": "The new RoutingPatternGroupsRelPattern resource",
                        "schema": {
                            "$ref": "#/definitions/RoutingPatternGroupsRelPattern"
                        }
                    }
                ]
            }
        },
        "/routing_pattern_groups_rel_patterns/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRoutingPatternGroupsRelPatternItem",
                "summary": "Retrieves a RoutingPatternGroupsRelPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RoutingPatternGroupsRelPattern resource response",
                        "schema": {
                            "$ref": "#/definitions/RoutingPatternGroupsRelPattern-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putRoutingPatternGroupsRelPatternItem",
                "summary": "Replaces the RoutingPatternGroupsRelPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "routingPatternGroupsRelPattern",
                        "in": "body",
                        "description": "The updated RoutingPatternGroupsRelPattern resource",
                        "schema": {
                            "$ref": "#/definitions/RoutingPatternGroupsRelPattern"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RoutingPatternGroupsRelPattern resource updated",
                        "schema": {
                            "$ref": "#/definitions/RoutingPatternGroupsRelPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteRoutingPatternGroupsRelPatternItem",
                "summary": "Removes the RoutingPatternGroupsRelPattern resource.",
                "responses": {
                    "204": {
                        "description": "RoutingPatternGroupsRelPattern resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/routing_patterns": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRoutingPatternCollection",
                "summary": "Retrieves the collection of RoutingPattern resources.",
                "responses": {
                    "200": {
                        "description": "RoutingPattern collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RoutingPattern-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prefix",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prefix[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prefix[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prefix[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prefix[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prefix[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.ca]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.en]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.es]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.it]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[prefix]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postRoutingPatternCollection",
                "summary": "Creates a RoutingPattern resource.",
                "responses": {
                    "201": {
                        "description": "RoutingPattern resource created",
                        "schema": {
                            "$ref": "#/definitions/RoutingPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "routingPattern",
                        "in": "body",
                        "description": "The new RoutingPattern resource",
                        "schema": {
                            "$ref": "#/definitions/RoutingPattern"
                        }
                    }
                ]
            }
        },
        "/routing_patterns/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRoutingPatternItem",
                "summary": "Retrieves a RoutingPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RoutingPattern resource response",
                        "schema": {
                            "$ref": "#/definitions/RoutingPattern-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putRoutingPatternItem",
                "summary": "Replaces the RoutingPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "routingPattern",
                        "in": "body",
                        "description": "The updated RoutingPattern resource",
                        "schema": {
                            "$ref": "#/definitions/RoutingPattern"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RoutingPattern resource updated",
                        "schema": {
                            "$ref": "#/definitions/RoutingPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteRoutingPatternItem",
                "summary": "Removes the RoutingPattern resource.",
                "responses": {
                    "204": {
                        "description": "RoutingPattern resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/routing_tags": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRoutingTagCollection",
                "summary": "Retrieves the collection of RoutingTag resources.",
                "responses": {
                    "200": {
                        "description": "RoutingTag collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RoutingTag-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tag",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tag[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tag[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tag[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tag[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tag[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[tag]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postRoutingTagCollection",
                "summary": "Creates a RoutingTag resource.",
                "responses": {
                    "201": {
                        "description": "RoutingTag resource created",
                        "schema": {
                            "$ref": "#/definitions/RoutingTag"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "routingTag",
                        "in": "body",
                        "description": "The new RoutingTag resource",
                        "schema": {
                            "$ref": "#/definitions/RoutingTag"
                        }
                    }
                ]
            }
        },
        "/routing_tags/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRoutingTagItem",
                "summary": "Retrieves a RoutingTag resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RoutingTag resource response",
                        "schema": {
                            "$ref": "#/definitions/RoutingTag-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putRoutingTagItem",
                "summary": "Replaces the RoutingTag resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "routingTag",
                        "in": "body",
                        "description": "The updated RoutingTag resource",
                        "schema": {
                            "$ref": "#/definitions/RoutingTag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RoutingTag resource updated",
                        "schema": {
                            "$ref": "#/definitions/RoutingTag"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteRoutingTagItem",
                "summary": "Removes the RoutingTag resource.",
                "responses": {
                    "204": {
                        "description": "RoutingTag resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/services": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getServiceCollection",
                "summary": "Retrieves the collection of Service resources.",
                "responses": {
                    "200": {
                        "description": "Service collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Service-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "defaultCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultCode[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultCode[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultCode[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultCode[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultCode[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.ca[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.ca[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.ca[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.ca[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.ca[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.en[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.en[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.en[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.en[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.en[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.es[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.es[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.es[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.es[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.es[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.it[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.it[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.it[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.it[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description.it[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extraArgs",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[defaultCode]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description.ca]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description.en]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description.es]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description.it]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[extraArgs]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[iden]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.ca]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.en]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.es]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.it]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/services/unassigned": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Provider"
                ],
                "parameters": [
                    {
                        "name": "_includeId",
                        "in": "query",
                        "type": "integer",
                        "required": false,
                        "description": "Ensure certain service id is included"
                    }
                ],
                "operationId": "get_services_unassignedServiceCollection",
                "summary": "Retrieves the collection of Service resources.",
                "responses": {
                    "200": {
                        "description": "Service collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Service"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/services/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getServiceItem",
                "summary": "Retrieves a Service resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service resource response",
                        "schema": {
                            "$ref": "#/definitions/Service-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/special_numbers": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getSpecialNumberCollection",
                "summary": "Retrieves the collection of SpecialNumber resources.",
                "responses": {
                    "200": {
                        "description": "SpecialNumber collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SpecialNumber-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "country",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "disableCDR",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "disableCDR[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "disableCDR[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "disableCDR[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "disableCDR[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "disableCDR[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "disableCDR[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "global",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[disableCDR]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[number]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postSpecialNumberCollection",
                "summary": "Creates a SpecialNumber resource.",
                "responses": {
                    "201": {
                        "description": "SpecialNumber resource created",
                        "schema": {
                            "$ref": "#/definitions/SpecialNumber"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "specialNumber",
                        "in": "body",
                        "description": "The new SpecialNumber resource",
                        "schema": {
                            "$ref": "#/definitions/SpecialNumber"
                        }
                    }
                ]
            }
        },
        "/special_numbers/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getSpecialNumberItem",
                "summary": "Retrieves a SpecialNumber resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SpecialNumber resource response",
                        "schema": {
                            "$ref": "#/definitions/SpecialNumber-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putSpecialNumberItem",
                "summary": "Replaces the SpecialNumber resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "specialNumber",
                        "in": "body",
                        "description": "The updated SpecialNumber resource",
                        "schema": {
                            "$ref": "#/definitions/SpecialNumber"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SpecialNumber resource updated",
                        "schema": {
                            "$ref": "#/definitions/SpecialNumber"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteSpecialNumberItem",
                "summary": "Removes the SpecialNumber resource.",
                "responses": {
                    "204": {
                        "description": "SpecialNumber resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/terminals": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getTerminalCollection",
                "summary": "Retrieves the collection of Terminal resources.",
                "responses": {
                    "200": {
                        "description": "Terminal collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Terminal-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domain",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "domainName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[lastProvisionDate]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[mac]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastProvisionDate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastProvisionDate[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastProvisionDate[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastProvisionDate[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastProvisionDate[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "lastProvisionDate[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastProvisionDate[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastProvisionDate[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "mac",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "mac[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "mac[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "mac[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "mac[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "mac[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "mac[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[lastProvisionDate]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[mac]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_pagination",
                        "in": "query",
                        "required": false,
                        "description": "Enable or disable pagination",
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/terminals/status": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "operationId": "get_status_collectionTerminalCollection",
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv",
                    "application/xml",
                    "text/xml",
                    "text/html",
                    "application/octet-stream"
                ],
                "summary": "Retrieves the collection of Terminal resources.",
                "responses": {
                    "200": {
                        "description": "Terminal collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Terminal-status"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.allowRecordingRemoval",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "company.balance",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "company.billingMethod",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.callCsvNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.country",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.countryName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.currency",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.currentDayUsage",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "company.defaultTimezone",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.domainUsers",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.externallyextraopts",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.faxNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.invoiceNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.ipfilter",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "company.language",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.maxCalls",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.maxDailyUsage",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.maxDailyUsageEmail",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.maxDailyUsageNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.nif",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.onDemandRecord",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.onDemandRecordCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.outgoingDdiRule",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.postalAddress",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.postalCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.province",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.showInvoices",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "company.town",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company.type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company.voicemailNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domainName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_pagination",
                        "in": "query",
                        "required": false,
                        "description": "Enable or disable pagination",
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/timezones": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getTimezoneCollection",
                "summary": "Retrieves the collection of Timezone resources.",
                "responses": {
                    "200": {
                        "description": "Timezone collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Timezone-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "country",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tz",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tz[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tz[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tz[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tz[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tz[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[tz]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_pagination",
                        "in": "query",
                        "required": false,
                        "description": "Enable or disable pagination",
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/timezones/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getTimezoneItem",
                "summary": "Retrieves a Timezone resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Timezone resource response",
                        "schema": {
                            "$ref": "#/definitions/Timezone-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/token/exchange": {
            "post": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "type": "string",
                        "required": true,
                        "description": "Platform admin token"
                    },
                    {
                        "name": "username",
                        "in": "formData",
                        "type": "string",
                        "required": false,
                        "description": "Target brand admin user name"
                    },
                    {
                        "name": "brandId",
                        "in": "formData",
                        "type": "integer",
                        "required": false,
                        "description": "Target brand ID"
                    }
                ],
                "operationId": "post_auth_token_exchangeTokenCollection",
                "summary": "Creates a Token resource.",
                "responses": {
                    "201": {
                        "description": "Token resource created",
                        "schema": {
                            "$ref": "#/definitions/Token"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/transformation_rule_sets": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getTransformationRuleSetCollection",
                "summary": "Retrieves the collection of TransformationRuleSet resources.",
                "responses": {
                    "200": {
                        "description": "TransformationRuleSet collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransformationRuleSet-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "areaCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "areaCode[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "areaCode[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "areaCode[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "areaCode[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "areaCode[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "areaCode[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "description[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "editable",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[areaCode]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[description]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[internationalCode]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[nationalLen]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[trunkPrefix]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "internationalCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "internationalCode[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "internationalCode[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "internationalCode[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "internationalCode[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "internationalCode[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "internationalCode[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nationalLen",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "nationalLen[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "nationalLen[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nationalLen[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nationalLen[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nationalLen[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nationalLen[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nationalLen[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "trunkPrefix",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "trunkPrefix[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "trunkPrefix[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "trunkPrefix[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "trunkPrefix[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "trunkPrefix[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "trunkPrefix[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[areaCode]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[internationalCode]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.ca]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.en]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.es]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.it]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[nationalLen]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[trunkPrefix]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postTransformationRuleSetCollection",
                "summary": "Creates a TransformationRuleSet resource.",
                "responses": {
                    "201": {
                        "description": "TransformationRuleSet resource created",
                        "schema": {
                            "$ref": "#/definitions/TransformationRuleSet"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "transformationRuleSet",
                        "in": "body",
                        "description": "The new TransformationRuleSet resource",
                        "schema": {
                            "$ref": "#/definitions/TransformationRuleSet"
                        }
                    }
                ]
            }
        },
        "/transformation_rule_sets/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getTransformationRuleSetItem",
                "summary": "Retrieves a TransformationRuleSet resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TransformationRuleSet resource response",
                        "schema": {
                            "$ref": "#/definitions/TransformationRuleSet-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putTransformationRuleSetItem",
                "summary": "Replaces the TransformationRuleSet resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet",
                        "in": "body",
                        "description": "The updated TransformationRuleSet resource",
                        "schema": {
                            "$ref": "#/definitions/TransformationRuleSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TransformationRuleSet resource updated",
                        "schema": {
                            "$ref": "#/definitions/TransformationRuleSet"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteTransformationRuleSetItem",
                "summary": "Removes the TransformationRuleSet resource.",
                "responses": {
                    "204": {
                        "description": "TransformationRuleSet resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/transformation_rules": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getTransformationRuleCollection",
                "summary": "Retrieves the collection of TransformationRule resources.",
                "responses": {
                    "200": {
                        "description": "TransformationRule collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransformationRule-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[matchExpr]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[priority]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[replaceExpr]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchExpr",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchExpr[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchExpr[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchExpr[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchExpr[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchExpr[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "matchExpr[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "priority[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "priority[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "replaceExpr",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "replaceExpr[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "replaceExpr[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "replaceExpr[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "replaceExpr[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "replaceExpr[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "replaceExpr[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[matchExpr]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[priority]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[replaceExpr]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[type]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postTransformationRuleCollection",
                "summary": "Creates a TransformationRule resource.",
                "responses": {
                    "201": {
                        "description": "TransformationRule resource created",
                        "schema": {
                            "$ref": "#/definitions/TransformationRule"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "transformationRule",
                        "in": "body",
                        "description": "The new TransformationRule resource",
                        "schema": {
                            "$ref": "#/definitions/TransformationRule"
                        }
                    }
                ]
            }
        },
        "/transformation_rules/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getTransformationRuleItem",
                "summary": "Retrieves a TransformationRule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TransformationRule resource response",
                        "schema": {
                            "$ref": "#/definitions/TransformationRule-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putTransformationRuleItem",
                "summary": "Replaces the TransformationRule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "transformationRule",
                        "in": "body",
                        "description": "The updated TransformationRule resource",
                        "schema": {
                            "$ref": "#/definitions/TransformationRule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TransformationRule resource updated",
                        "schema": {
                            "$ref": "#/definitions/TransformationRule"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteTransformationRuleItem",
                "summary": "Removes the TransformationRule resource.",
                "responses": {
                    "204": {
                        "description": "TransformationRule resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/trusteds": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Kam"
                ],
                "operationId": "getTrustedCollection",
                "summary": "Retrieves the collection of Trusted resources.",
                "responses": {
                    "200": {
                        "description": "Trusted collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Trusted-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "description[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[description]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[srcIp]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "srcIp",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "srcIp[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "srcIp[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "srcIp[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "srcIp[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "srcIp[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "srcIp[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[srcIp]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Kam"
                ],
                "operationId": "postTrustedCollection",
                "summary": "Creates a Trusted resource.",
                "responses": {
                    "201": {
                        "description": "Trusted resource created",
                        "schema": {
                            "$ref": "#/definitions/Trusted"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "trusted",
                        "in": "body",
                        "description": "The new Trusted resource",
                        "schema": {
                            "$ref": "#/definitions/Trusted"
                        }
                    }
                ]
            }
        },
        "/trusteds/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Kam"
                ],
                "operationId": "getTrustedItem",
                "summary": "Retrieves a Trusted resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trusted resource response",
                        "schema": {
                            "$ref": "#/definitions/Trusted-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Kam"
                ],
                "operationId": "putTrustedItem",
                "summary": "Replaces the Trusted resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "trusted",
                        "in": "body",
                        "description": "The updated Trusted resource",
                        "schema": {
                            "$ref": "#/definitions/Trusted"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trusted resource updated",
                        "schema": {
                            "$ref": "#/definitions/Trusted"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Kam"
                ],
                "operationId": "deleteTrustedItem",
                "summary": "Removes the Trusted resource.",
                "responses": {
                    "204": {
                        "description": "Trusted resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getUserCollection",
                "summary": "Retrieves the collection of User resources.",
                "responses": {
                    "200": {
                        "description": "User collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "bossAssistant",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "bossAssistantWhiteList",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "bossAssistantWhiteList[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "bossAssistantWhiteList[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "bossAssistant[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "bossAssistant[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "email[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[email]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[extension]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[location]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[outgoingDdi]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[terminal]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "extension",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extension[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extension[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "lastname",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastname[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastname[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastname[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastname[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastname[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "location[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "location[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdiRule",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdiRule[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdiRule[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "outgoingDdi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "terminal",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "terminal[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "terminal[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timezone[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timezone[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[email]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[lastname]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/users/mass_import": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Provider"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "formData",
                        "type": "integer",
                        "required": true,
                        "description": "Company Id"
                    },
                    {
                        "name": "csv",
                        "in": "formData",
                        "type": "file",
                        "required": true,
                        "description": "*name, *lastname, email, terminal name,terminal password, terminal model, mac, extension, ddi country, ddi number, ddi provider"
                    }
                ],
                "operationId": "post_users_mass_importUsersMassImportCollection",
                "summary": "Creates a UsersMassImport resource.",
                "responses": {
                    "201": {
                        "description": "UsersMassImport resource created",
                        "schema": {
                            "$ref": "#/definitions/UsersMassImport"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/users_addresses": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Kam"
                ],
                "operationId": "getUsersAddressCollection",
                "summary": "Retrieves the collection of UsersAddress resources.",
                "responses": {
                    "200": {
                        "description": "UsersAddress collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UsersAddress-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "description[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[description]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sourceAddress",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sourceAddress[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sourceAddress[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sourceAddress[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sourceAddress[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sourceAddress[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[sourceAddress]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Kam"
                ],
                "operationId": "postUsersAddressCollection",
                "summary": "Creates a UsersAddress resource.",
                "responses": {
                    "201": {
                        "description": "UsersAddress resource created",
                        "schema": {
                            "$ref": "#/definitions/UsersAddress"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "usersAddress",
                        "in": "body",
                        "description": "The new UsersAddress resource",
                        "schema": {
                            "$ref": "#/definitions/UsersAddress"
                        }
                    }
                ]
            }
        },
        "/users_addresses/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Kam"
                ],
                "operationId": "getUsersAddressItem",
                "summary": "Retrieves a UsersAddress resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UsersAddress resource response",
                        "schema": {
                            "$ref": "#/definitions/UsersAddress-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Kam"
                ],
                "operationId": "putUsersAddressItem",
                "summary": "Replaces the UsersAddress resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "usersAddress",
                        "in": "body",
                        "description": "The updated UsersAddress resource",
                        "schema": {
                            "$ref": "#/definitions/UsersAddress"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UsersAddress resource updated",
                        "schema": {
                            "$ref": "#/definitions/UsersAddress"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Kam"
                ],
                "operationId": "deleteUsersAddressItem",
                "summary": "Removes the UsersAddress resource.",
                "responses": {
                    "204": {
                        "description": "UsersAddress resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/web_portals": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getWebPortalCollection",
                "summary": "Retrieves the collection of WebPortal resources.",
                "responses": {
                    "200": {
                        "description": "WebPortal collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WebPortal-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "exists[logo.baseName]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[logo.fileSize]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[logo.mimeType]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[name]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "id[exact]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "id[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.baseName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.baseName[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.baseName[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.baseName[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.baseName[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.baseName[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "logo.baseName[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.fileSize",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "logo.fileSize[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "logo.fileSize[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.fileSize[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.fileSize[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.fileSize[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.fileSize[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.fileSize[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.mimeType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.mimeType[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.mimeType[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.mimeType[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.mimeType[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo.mimeType[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "logo.mimeType[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[exists]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "urlType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "urlType[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "urlType[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "urlType[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "urlType[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "urlType[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "url[exact]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "url[end]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "url[neq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "url[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "url[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[logo.baseName]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[logo.fileSize]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[logo.mimeType]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[urlType]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[url]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data",
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postWebPortalCollection",
                "summary": "Creates a WebPortal resource.",
                "responses": {
                    "201": {
                        "description": "WebPortal resource created",
                        "schema": {
                            "$ref": "#/definitions/WebPortal"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "webPortal",
                        "in": "formData",
                        "description": "The new WebPortal resource",
                        "type": "string"
                    },
                    {
                        "name": "Logo",
                        "in": "formData",
                        "type": "file",
                        "required": false
                    }
                ]
            }
        },
        "/web_portals/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getWebPortalItem",
                "summary": "Retrieves a WebPortal resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "WebPortal resource response",
                        "schema": {
                            "$ref": "#/definitions/WebPortal-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "multipart/form-data",
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putWebPortalItem",
                "summary": "Replaces the WebPortal resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "webPortal",
                        "in": "formData",
                        "description": "The updated WebPortal resource",
                        "type": "string"
                    },
                    {
                        "name": "Logo",
                        "in": "formData",
                        "type": "file",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "WebPortal resource updated",
                        "schema": {
                            "$ref": "#/definitions/WebPortal"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteWebPortalItem",
                "summary": "Removes the WebPortal resource.",
                "responses": {
                    "204": {
                        "description": "WebPortal resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_rmAlso[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "/web_portals/{id}/logo": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "#/definitions/WebPortal_Logo",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "tags": [
                    "Provider"
                ],
                "operationId": "/webportal_logoWebPortalItem",
                "summary": "Retrieves a WebPortal resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        }
    },
    "security": [
        {
            "bearer": []
        }
    ],
    "securityDefinitions": {
        "bearer": {
            "type": "apiKey",
            "in": "header",
            "description": "Value for the Authorization header",
            "name": "Authorization"
        }
    },
    "definitions": {
        "ActiveCalls": {
            "type": "object",
            "properties": {
                "inbound": {
                    "description": "",
                    "type": "integer"
                },
                "outbound": {
                    "description": "",
                    "type": "integer"
                },
                "total": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Administrator": {
            "type": "object",
            "required": [
                "username",
                "pass",
                "email",
                "active",
                "restricted",
                "company"
            ],
            "properties": {
                "username": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "pass": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "email": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "active": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "restricted": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "name": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "lastname": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "timezone": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Administrator-collection": {
            "type": "object",
            "required": [
                "active",
                "restricted",
                "username",
                "email"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "active": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "restricted": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "username": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "lastname": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "email": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                }
            }
        },
        "Administrator-detailed": {
            "type": "object",
            "required": [
                "username",
                "pass",
                "email",
                "active",
                "restricted",
                "company"
            ],
            "properties": {
                "username": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "pass": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "email": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "active": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "restricted": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "name": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "lastname": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "timezone": {
                    "$ref": "#/definitions/Timezone"
                }
            }
        },
        "AdministratorRelPublicEntity": {
            "type": "object",
            "required": [
                "create",
                "read",
                "update",
                "delete",
                "administrator",
                "publicEntity"
            ],
            "properties": {
                "create": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "read": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "update": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "delete": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "administrator": {
                    "description": "",
                    "type": "integer"
                },
                "publicEntity": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "AdministratorRelPublicEntity-collection": {
            "type": "object",
            "required": [
                "create",
                "read",
                "update",
                "delete",
                "administrator",
                "publicEntity"
            ],
            "properties": {
                "create": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "read": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "update": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "delete": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "administrator": {
                    "description": "",
                    "type": "integer"
                },
                "publicEntity": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "AdministratorRelPublicEntity-detailed": {
            "type": "object",
            "required": [
                "create",
                "read",
                "update",
                "delete",
                "administrator",
                "publicEntity"
            ],
            "properties": {
                "create": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "read": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "update": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "delete": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "administrator": {
                    "$ref": "#/definitions/Administrator"
                },
                "publicEntity": {
                    "$ref": "#/definitions/PublicEntity"
                }
            }
        },
        "BalanceMovement": {
            "type": "object",
            "properties": {
                "amount": {
                    "default": 0,
                    "format": "float",
                    "description": "",
                    "example": "0.0000",
                    "type": "number"
                },
                "balance": {
                    "default": 0,
                    "format": "float",
                    "description": "",
                    "example": "0.0000",
                    "type": "number"
                },
                "createdOn": {
                    "default": "CURRENT_TIMESTAMP",
                    "format": "date-time",
                    "description": "",
                    "example": "CURRENT_TIMESTAMP",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "carrier": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "BalanceMovement-collection": {
            "type": "object",
            "properties": {
                "amount": {
                    "default": 0,
                    "format": "float",
                    "description": "",
                    "example": "0.0000",
                    "type": "number"
                },
                "balance": {
                    "default": 0,
                    "format": "float",
                    "description": "",
                    "example": "0.0000",
                    "type": "number"
                },
                "createdOn": {
                    "default": "CURRENT_TIMESTAMP",
                    "format": "date-time",
                    "description": "",
                    "example": "CURRENT_TIMESTAMP",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "carrier": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "BalanceMovement-detailed": {
            "type": "object",
            "properties": {
                "amount": {
                    "default": 0,
                    "format": "float",
                    "description": "",
                    "example": "0.0000",
                    "type": "number"
                },
                "balance": {
                    "default": 0,
                    "format": "float",
                    "description": "",
                    "example": "0.0000",
                    "type": "number"
                },
                "createdOn": {
                    "default": "CURRENT_TIMESTAMP",
                    "format": "date-time",
                    "description": "",
                    "example": "CURRENT_TIMESTAMP",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "carrier": {
                    "$ref": "#/definitions/Carrier"
                }
            }
        },
        "BalanceNotification": {
            "type": "object",
            "properties": {
                "toAddress": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "threshold": {
                    "default": 0,
                    "format": "float",
                    "description": "",
                    "example": "0.0000",
                    "type": "number"
                },
                "lastSent": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "carrier": {
                    "description": "",
                    "type": "integer"
                },
                "notificationTemplate": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "BalanceNotification-collection": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "toAddress": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "threshold": {
                    "default": 0,
                    "format": "float",
                    "description": "",
                    "example": "0.0000",
                    "type": "number"
                },
                "notificationTemplate": {
                    "description": "",
                    "type": "integer"
                },
                "lastSent": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                }
            }
        },
        "BalanceNotification-detailed": {
            "type": "object",
            "properties": {
                "toAddress": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "threshold": {
                    "default": 0,
                    "format": "float",
                    "description": "",
                    "example": "0.0000",
                    "type": "number"
                },
                "lastSent": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "carrier": {
                    "$ref": "#/definitions/Carrier"
                },
                "notificationTemplate": {
                    "$ref": "#/definitions/NotificationTemplate"
                }
            }
        },
        "BannedAddress-collection": {
            "type": "object",
            "properties": {
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "lastTimeBanned": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "blocker": {
                    "enum": [
                        "antiflood",
                        "ipfilter",
                        "antibruteforce"
                    ],
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "aor": {
                    "maxLength": 300,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "BannedAddress-detailed": {
            "type": "object",
            "properties": {
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "blocker": {
                    "enum": [
                        "antiflood",
                        "ipfilter",
                        "antibruteforce"
                    ],
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "aor": {
                    "maxLength": 300,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "lastTimeBanned": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "$ref": "#/definitions/Company"
                }
            }
        },
        "BillableCall": {
            "type": "object",
            "properties": {
                "callid": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "startTime": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "duration": {
                    "default": 0,
                    "format": "float",
                    "description": "",
                    "example": "0",
                    "type": "number"
                },
                "caller": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "callee": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "cost": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "price": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "carrierName": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "destinationName": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "ratingPlanName": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "endpointType": {
                    "enum": [
                        "RetailAccount",
                        "ResidentialDevice",
                        "User",
                        "Friend",
                        "Fax"
                    ],
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "endpointId": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "endpointName": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "direction": {
                    "default": "outbound",
                    "enum": [
                        "inbound",
                        "outbound"
                    ],
                    "description": "",
                    "example": "outbound",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "carrier": {
                    "description": "",
                    "type": "integer"
                },
                "destination": {
                    "description": "",
                    "type": "integer"
                },
                "ratingPlanGroup": {
                    "description": "",
                    "type": "integer"
                },
                "invoice": {
                    "description": "",
                    "type": "integer"
                },
                "ddi": {
                    "description": "",
                    "type": "integer"
                },
                "ddiProvider": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "duration",
                "direction"
            ]
        },
        "BillableCall-collection": {
            "type": "object",
            "properties": {
                "startTime": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "direction": {
                    "default": "outbound",
                    "enum": [
                        "inbound",
                        "outbound"
                    ],
                    "description": "",
                    "example": "outbound",
                    "type": "string"
                },
                "duration": {
                    "default": 0,
                    "format": "float",
                    "description": "",
                    "example": "0",
                    "type": "number"
                },
                "caller": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "callee": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "cost": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "price": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "callid": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "carrier": {
                    "description": "",
                    "type": "integer"
                },
                "ddiProvider": {
                    "description": "",
                    "type": "integer"
                },
                "invoice": {
                    "description": "",
                    "type": "integer"
                },
                "endpointType": {
                    "enum": [
                        "RetailAccount",
                        "ResidentialDevice",
                        "User",
                        "Friend",
                        "Fax"
                    ],
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "endpointId": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "endpointName": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "ddi": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "direction",
                "duration"
            ]
        },
        "BillableCall-detailed": {
            "type": "object",
            "properties": {
                "callid": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "startTime": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "duration": {
                    "default": 0,
                    "format": "float",
                    "description": "",
                    "example": "0",
                    "type": "number"
                },
                "caller": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "callee": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "cost": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "price": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "carrierName": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "destinationName": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "ratingPlanName": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "endpointType": {
                    "enum": [
                        "RetailAccount",
                        "ResidentialDevice",
                        "User",
                        "Friend",
                        "Fax"
                    ],
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "endpointId": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "endpointName": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "direction": {
                    "default": "outbound",
                    "enum": [
                        "inbound",
                        "outbound"
                    ],
                    "description": "",
                    "example": "outbound",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "carrier": {
                    "$ref": "#/definitions/Carrier"
                },
                "destination": {
                    "$ref": "#/definitions/Destination"
                },
                "ratingPlanGroup": {
                    "$ref": "#/definitions/RatingPlanGroup"
                },
                "invoice": {
                    "$ref": "#/definitions/Invoice"
                },
                "ddi": {
                    "$ref": "#/definitions/Ddi"
                },
                "ddiProvider": {
                    "$ref": "#/definitions/DdiProvider"
                }
            },
            "required": [
                "duration",
                "direction"
            ]
        },
        "BillableCall-rating": {
            "type": "object",
            "properties": {
                "price": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "cost": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "destinationName": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "ratingPlanName": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Brand": {
            "type": "object",
            "required": [
                "name",
                "language",
                "defaultTimezone",
                "currency"
            ],
            "properties": {
                "name": {
                    "maxLength": 75,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "logo": {
                    "$ref": "#/definitions/Brand_Logo"
                },
                "invoice": {
                    "$ref": "#/definitions/Brand_Invoice"
                },
                "language": {
                    "description": "",
                    "type": "integer"
                },
                "defaultTimezone": {
                    "description": "",
                    "type": "integer"
                },
                "currency": {
                    "description": "",
                    "type": "integer"
                },
                "voicemailNotificationTemplate": {
                    "description": "",
                    "type": "integer"
                },
                "faxNotificationTemplate": {
                    "description": "",
                    "type": "integer"
                },
                "invoiceNotificationTemplate": {
                    "description": "",
                    "type": "integer"
                },
                "callCsvNotificationTemplate": {
                    "description": "",
                    "type": "integer"
                },
                "maxDailyUsageNotificationTemplate": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Brand-collection": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 75,
                    "description": "",
                    "type": "string"
                },
                "invoice": {
                    "$ref": "#/definitions/Brand_Invoice"
                },
                "logo": {
                    "$ref": "#/definitions/Brand_Logo"
                }
            }
        },
        "Brand-detailed": {
            "type": "object",
            "required": [
                "name",
                "language",
                "defaultTimezone",
                "currency"
            ],
            "properties": {
                "name": {
                    "maxLength": 75,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "logo": {
                    "$ref": "#/definitions/Brand_Logo"
                },
                "invoice": {
                    "$ref": "#/definitions/Brand_Invoice"
                },
                "language": {
                    "$ref": "#/definitions/Language"
                },
                "defaultTimezone": {
                    "$ref": "#/definitions/Timezone"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "voicemailNotificationTemplate": {
                    "$ref": "#/definitions/NotificationTemplate"
                },
                "faxNotificationTemplate": {
                    "$ref": "#/definitions/NotificationTemplate"
                },
                "invoiceNotificationTemplate": {
                    "$ref": "#/definitions/NotificationTemplate"
                },
                "callCsvNotificationTemplate": {
                    "$ref": "#/definitions/NotificationTemplate"
                },
                "maxDailyUsageNotificationTemplate": {
                    "$ref": "#/definitions/NotificationTemplate"
                }
            }
        },
        "BrandService": {
            "type": "object",
            "required": [
                "code",
                "service"
            ],
            "properties": {
                "code": {
                    "maxLength": 3,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "service": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "BrandService-collection": {
            "type": "object",
            "required": [
                "code",
                "service"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "code": {
                    "maxLength": 3,
                    "description": "",
                    "type": "string"
                },
                "service": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "BrandService-detailed": {
            "type": "object",
            "required": [
                "code",
                "service"
            ],
            "properties": {
                "code": {
                    "maxLength": 3,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "service": {
                    "$ref": "#/definitions/Service"
                }
            }
        },
        "Brand_Invoice": {
            "type": "object",
            "required": [
                "nif",
                "postalAddress",
                "postalCode",
                "town",
                "province",
                "country"
            ],
            "properties": {
                "nif": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "postalAddress": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "postalCode": {
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "town": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "province": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "country": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "registryData": {
                    "maxLength": 1024,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Brand_Logo": {
            "type": "object",
            "properties": {
                "fileSize": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "mimeType": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "baseName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "CallCsvReport-collection": {
            "type": "object",
            "required": [
                "inDate",
                "outDate",
                "createdOn",
                "sentTo"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "inDate": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "outDate": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "csv": {
                    "$ref": "#/definitions/CallCsvReport_Csv"
                },
                "createdOn": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "sentTo": {
                    "default": "",
                    "maxLength": 250,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "callCsvScheduler": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "CallCsvReport-detailed": {
            "type": "object",
            "required": [
                "sentTo",
                "inDate",
                "outDate",
                "createdOn",
                "brand"
            ],
            "properties": {
                "sentTo": {
                    "default": "",
                    "maxLength": 250,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "inDate": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "outDate": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "createdOn": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "csv": {
                    "$ref": "#/definitions/CallCsvReport_Csv"
                },
                "brand": {
                    "$ref": "#/definitions/Brand"
                },
                "callCsvScheduler": {
                    "$ref": "#/definitions/CallCsvScheduler"
                }
            }
        },
        "CallCsvReport_Csv": {
            "type": "object",
            "properties": {
                "fileSize": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "mimeType": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "baseName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "CallCsvScheduler": {
            "type": "object",
            "required": [
                "name",
                "unit",
                "frequency",
                "email"
            ],
            "properties": {
                "name": {
                    "maxLength": 40,
                    "description": "",
                    "type": "string"
                },
                "unit": {
                    "default": "month",
                    "enum": [
                        "day",
                        "week",
                        "month"
                    ],
                    "maxLength": 30,
                    "description": "",
                    "example": "month",
                    "type": "string"
                },
                "frequency": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "callDirection": {
                    "default": "outbound",
                    "enum": [
                        "inbound",
                        "outbound"
                    ],
                    "description": "",
                    "example": "outbound",
                    "type": "string"
                },
                "email": {
                    "maxLength": 140,
                    "description": "",
                    "type": "string"
                },
                "lastExecution": {
                    "readOnly": true,
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "lastExecutionError": {
                    "readOnly": true,
                    "maxLength": 300,
                    "description": "",
                    "type": "string"
                },
                "nextExecution": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "callCsvNotificationTemplate": {
                    "description": "",
                    "type": "integer"
                },
                "ddi": {
                    "description": "",
                    "type": "integer"
                },
                "carrier": {
                    "description": "",
                    "type": "integer"
                },
                "retailAccount": {
                    "description": "",
                    "type": "integer"
                },
                "residentialDevice": {
                    "description": "",
                    "type": "integer"
                },
                "user": {
                    "description": "",
                    "type": "integer"
                },
                "fax": {
                    "description": "",
                    "type": "integer"
                },
                "friend": {
                    "description": "",
                    "type": "integer"
                },
                "ddiProvider": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "CallCsvScheduler-collection": {
            "type": "object",
            "required": [
                "name",
                "frequency",
                "unit",
                "email"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 40,
                    "description": "",
                    "type": "string"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "frequency": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "unit": {
                    "default": "month",
                    "enum": [
                        "day",
                        "week",
                        "month"
                    ],
                    "maxLength": 30,
                    "description": "",
                    "example": "month",
                    "type": "string"
                },
                "callDirection": {
                    "default": "outbound",
                    "enum": [
                        "inbound",
                        "outbound"
                    ],
                    "description": "",
                    "example": "outbound",
                    "type": "string"
                },
                "email": {
                    "maxLength": 140,
                    "description": "",
                    "type": "string"
                },
                "lastExecution": {
                    "readOnly": true,
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "lastExecutionError": {
                    "readOnly": true,
                    "maxLength": 300,
                    "description": "",
                    "type": "string"
                },
                "nextExecution": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                }
            }
        },
        "CallCsvScheduler-detailed": {
            "type": "object",
            "required": [
                "name",
                "unit",
                "frequency",
                "email"
            ],
            "properties": {
                "name": {
                    "maxLength": 40,
                    "description": "",
                    "type": "string"
                },
                "unit": {
                    "default": "month",
                    "enum": [
                        "day",
                        "week",
                        "month"
                    ],
                    "maxLength": 30,
                    "description": "",
                    "example": "month",
                    "type": "string"
                },
                "frequency": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "callDirection": {
                    "default": "outbound",
                    "enum": [
                        "inbound",
                        "outbound"
                    ],
                    "description": "",
                    "example": "outbound",
                    "type": "string"
                },
                "email": {
                    "maxLength": 140,
                    "description": "",
                    "type": "string"
                },
                "lastExecution": {
                    "readOnly": true,
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "lastExecutionError": {
                    "readOnly": true,
                    "maxLength": 300,
                    "description": "",
                    "type": "string"
                },
                "nextExecution": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "callCsvNotificationTemplate": {
                    "$ref": "#/definitions/NotificationTemplate"
                },
                "ddi": {
                    "$ref": "#/definitions/Ddi"
                },
                "carrier": {
                    "$ref": "#/definitions/Carrier"
                },
                "retailAccount": {
                    "$ref": "#/definitions/RetailAccount"
                },
                "residentialDevice": {
                    "$ref": "#/definitions/ResidentialDevice"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "fax": {
                    "$ref": "#/definitions/Fax"
                },
                "friend": {
                    "$ref": "#/definitions/Friend"
                },
                "ddiProvider": {
                    "$ref": "#/definitions/DdiProvider"
                }
            }
        },
        "Carrier": {
            "type": "object",
            "required": [
                "description",
                "name",
                "transformationRuleSet"
            ],
            "properties": {
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "name": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "externallyRated": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "balance": {
                    "default": 0,
                    "format": "float",
                    "description": "",
                    "example": "0.0000",
                    "type": "number"
                },
                "calculateCost": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "transformationRuleSet": {
                    "description": "",
                    "type": "integer"
                },
                "currency": {
                    "description": "",
                    "type": "integer"
                },
                "proxyTrunk": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Carrier-collection": {
            "type": "object",
            "required": [
                "description",
                "name",
                "transformationRuleSet"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "name": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "externallyRated": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "calculateCost": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "transformationRuleSet": {
                    "description": "",
                    "type": "integer"
                },
                "balance": {
                    "default": 0,
                    "format": "float",
                    "description": "",
                    "example": "0.0000",
                    "type": "number"
                },
                "proxyTrunk": {
                    "description": "",
                    "type": "integer"
                },
                "status": {
                    "description": ""
                }
            }
        },
        "Carrier-detailed": {
            "type": "object",
            "required": [
                "description",
                "name",
                "transformationRuleSet"
            ],
            "properties": {
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "name": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "externallyRated": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "balance": {
                    "default": 0,
                    "format": "float",
                    "description": "",
                    "example": "0.0000",
                    "type": "number"
                },
                "calculateCost": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "transformationRuleSet": {
                    "$ref": "#/definitions/TransformationRuleSet"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "proxyTrunk": {
                    "$ref": "#/definitions/ProxyTrunk"
                }
            }
        },
        "CarrierServer": {
            "type": "object",
            "properties": {
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "hostname": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "port": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "uriScheme": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "transport": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "sendPAI": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "sendRPID": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "authNeeded": {
                    "default": "no",
                    "description": "",
                    "example": "no",
                    "type": "string"
                },
                "authUser": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "authPassword": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "sipProxy": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "outboundProxy": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "fromUser": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "fromDomain": {
                    "maxLength": 190,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "carrier": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "authNeeded",
                "carrier"
            ]
        },
        "CarrierServer-collection": {
            "type": "object",
            "required": [
                "authNeeded"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "hostname": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "sipProxy": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "authNeeded": {
                    "default": "no",
                    "description": "",
                    "example": "no",
                    "type": "string"
                },
                "outboundProxy": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "description": ""
                }
            }
        },
        "CarrierServer-detailed": {
            "type": "object",
            "properties": {
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "hostname": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "port": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "uriScheme": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "transport": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "sendPAI": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "sendRPID": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "authNeeded": {
                    "default": "no",
                    "description": "",
                    "example": "no",
                    "type": "string"
                },
                "authUser": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "authPassword": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "sipProxy": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "outboundProxy": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "fromUser": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "fromDomain": {
                    "maxLength": 190,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "carrier": {
                    "$ref": "#/definitions/Carrier"
                }
            },
            "required": [
                "authNeeded",
                "carrier"
            ]
        },
        "CarrierServer-status": {
            "type": "object",
            "required": [
                "authNeeded"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "hostname": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "sipProxy": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "authNeeded": {
                    "default": "no",
                    "description": "",
                    "example": "no",
                    "type": "string"
                },
                "status": {
                    "description": ""
                }
            }
        },
        "Codec": {
            "type": "object",
            "required": [
                "type",
                "iden",
                "name"
            ],
            "properties": {
                "type": {
                    "default": "audio",
                    "enum": [
                        "audio",
                        "video"
                    ],
                    "maxLength": 10,
                    "description": "",
                    "example": "audio",
                    "type": "string"
                },
                "iden": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "Codec-collection": {
            "type": "object",
            "required": [
                "iden"
            ],
            "properties": {
                "iden": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "Codec-detailed": {
            "type": "object",
            "required": [
                "type",
                "iden",
                "name"
            ],
            "properties": {
                "type": {
                    "default": "audio",
                    "enum": [
                        "audio",
                        "video"
                    ],
                    "maxLength": 10,
                    "description": "",
                    "example": "audio",
                    "type": "string"
                },
                "iden": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "Company": {
            "type": "object",
            "required": [
                "type",
                "name",
                "nif",
                "maxCalls",
                "maxDailyUsage",
                "postalAddress",
                "postalCode",
                "town",
                "province",
                "countryName",
                "allowRecordingRemoval",
                "billingMethod",
                "country",
                "transformationRuleSet"
            ],
            "properties": {
                "type": {
                    "default": "vpbx",
                    "enum": [
                        "vpbx",
                        "retail",
                        "wholesale",
                        "residential"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "vpbx",
                    "type": "string"
                },
                "name": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "domainUsers": {
                    "maxLength": 190,
                    "description": "",
                    "type": "string"
                },
                "nif": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "maxCalls": {
                    "default": 0,
                    "minimum": 0,
                    "description": "",
                    "example": "0",
                    "type": "integer"
                },
                "maxDailyUsage": {
                    "default": 1000000,
                    "minimum": 0,
                    "description": "",
                    "example": "1000000",
                    "type": "integer"
                },
                "currentDayUsage": {
                    "default": 0,
                    "format": "float",
                    "description": "",
                    "example": "0.0000",
                    "type": "number"
                },
                "maxDailyUsageEmail": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "postalAddress": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "postalCode": {
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "town": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "province": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "countryName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "ipfilter": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "onDemandRecord": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "integer"
                },
                "allowRecordingRemoval": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "onDemandRecordCode": {
                    "maxLength": 3,
                    "description": "",
                    "type": "string"
                },
                "externallyextraopts": {
                    "maxLength": 65535,
                    "description": "",
                    "type": "string"
                },
                "billingMethod": {
                    "default": "postpaid",
                    "enum": [
                        "postpaid",
                        "prepaid",
                        "pseudoprepaid"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "postpaid",
                    "type": "string"
                },
                "balance": {
                    "readOnly": true,
                    "default": 0,
                    "format": "float",
                    "description": "",
                    "example": "0.0000",
                    "type": "number"
                },
                "showInvoices": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "language": {
                    "description": "",
                    "type": "integer"
                },
                "defaultTimezone": {
                    "description": "",
                    "type": "integer"
                },
                "country": {
                    "description": "",
                    "type": "integer"
                },
                "currency": {
                    "description": "",
                    "type": "integer"
                },
                "transformationRuleSet": {
                    "description": "",
                    "type": "integer"
                },
                "outgoingDdi": {
                    "description": "",
                    "type": "integer"
                },
                "outgoingDdiRule": {
                    "description": "",
                    "type": "integer"
                },
                "voicemailNotificationTemplate": {
                    "description": "",
                    "type": "integer"
                },
                "faxNotificationTemplate": {
                    "description": "",
                    "type": "integer"
                },
                "invoiceNotificationTemplate": {
                    "description": "",
                    "type": "integer"
                },
                "callCsvNotificationTemplate": {
                    "description": "",
                    "type": "integer"
                },
                "maxDailyUsageNotificationTemplate": {
                    "description": "",
                    "type": "integer"
                },
                "featureIds": {
                    "description": "Active feature ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "geoIpAllowedCountries": {
                    "description": "Country ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "routingTagIds": {
                    "description": "Routing tag ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "codecIds": {
                    "description": "Codec ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "Company-collection": {
            "type": "object",
            "required": [
                "name",
                "type",
                "nif",
                "billingMethod",
                "maxDailyUsage"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "type": {
                    "default": "vpbx",
                    "enum": [
                        "vpbx",
                        "retail",
                        "wholesale",
                        "residential"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "vpbx",
                    "type": "string"
                },
                "nif": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "billingMethod": {
                    "default": "postpaid",
                    "enum": [
                        "postpaid",
                        "prepaid",
                        "pseudoprepaid"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "postpaid",
                    "type": "string"
                },
                "currentDayUsage": {
                    "default": 0,
                    "format": "float",
                    "description": "",
                    "example": "0.0000",
                    "type": "number"
                },
                "maxDailyUsage": {
                    "default": 1000000,
                    "minimum": 0,
                    "description": "",
                    "example": "1000000",
                    "type": "integer"
                },
                "domainUsers": {
                    "maxLength": 190,
                    "description": "",
                    "type": "string"
                },
                "balance": {
                    "readOnly": true,
                    "default": 0,
                    "format": "float",
                    "description": "",
                    "example": "0.0000",
                    "type": "number"
                },
                "outgoingDdi": {
                    "description": "",
                    "type": "integer"
                },
                "featureIds": {
                    "description": "Active feature ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "geoIpAllowedCountries": {
                    "description": "Country ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "routingTagIds": {
                    "description": "Routing tag ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "codecIds": {
                    "description": "Codec ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "Company-detailed": {
            "type": "object",
            "required": [
                "type",
                "name",
                "nif",
                "maxCalls",
                "maxDailyUsage",
                "postalAddress",
                "postalCode",
                "town",
                "province",
                "countryName",
                "allowRecordingRemoval",
                "billingMethod",
                "country",
                "transformationRuleSet"
            ],
            "properties": {
                "type": {
                    "default": "vpbx",
                    "enum": [
                        "vpbx",
                        "retail",
                        "wholesale",
                        "residential"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "vpbx",
                    "type": "string"
                },
                "name": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "domainUsers": {
                    "maxLength": 190,
                    "description": "",
                    "type": "string"
                },
                "nif": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "maxCalls": {
                    "default": 0,
                    "minimum": 0,
                    "description": "",
                    "example": "0",
                    "type": "integer"
                },
                "maxDailyUsage": {
                    "default": 1000000,
                    "minimum": 0,
                    "description": "",
                    "example": "1000000",
                    "type": "integer"
                },
                "currentDayUsage": {
                    "default": 0,
                    "format": "float",
                    "description": "",
                    "example": "0.0000",
                    "type": "number"
                },
                "maxDailyUsageEmail": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "postalAddress": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "postalCode": {
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "town": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "province": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "countryName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "ipfilter": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "onDemandRecord": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "integer"
                },
                "allowRecordingRemoval": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "onDemandRecordCode": {
                    "maxLength": 3,
                    "description": "",
                    "type": "string"
                },
                "externallyextraopts": {
                    "maxLength": 65535,
                    "description": "",
                    "type": "string"
                },
                "billingMethod": {
                    "default": "postpaid",
                    "enum": [
                        "postpaid",
                        "prepaid",
                        "pseudoprepaid"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "postpaid",
                    "type": "string"
                },
                "balance": {
                    "readOnly": true,
                    "default": 0,
                    "format": "float",
                    "description": "",
                    "example": "0.0000",
                    "type": "number"
                },
                "showInvoices": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "language": {
                    "$ref": "#/definitions/Language"
                },
                "defaultTimezone": {
                    "$ref": "#/definitions/Timezone"
                },
                "country": {
                    "$ref": "#/definitions/Country"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "transformationRuleSet": {
                    "$ref": "#/definitions/TransformationRuleSet"
                },
                "outgoingDdi": {
                    "$ref": "#/definitions/Ddi"
                },
                "outgoingDdiRule": {
                    "$ref": "#/definitions/OutgoingDdiRule"
                },
                "voicemailNotificationTemplate": {
                    "$ref": "#/definitions/NotificationTemplate"
                },
                "faxNotificationTemplate": {
                    "$ref": "#/definitions/NotificationTemplate"
                },
                "invoiceNotificationTemplate": {
                    "$ref": "#/definitions/NotificationTemplate"
                },
                "callCsvNotificationTemplate": {
                    "$ref": "#/definitions/NotificationTemplate"
                },
                "maxDailyUsageNotificationTemplate": {
                    "$ref": "#/definitions/NotificationTemplate"
                },
                "featureIds": {
                    "description": "Active feature ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "geoIpAllowedCountries": {
                    "description": "Country ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "routingTagIds": {
                    "description": "Routing tag ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "codecIds": {
                    "description": "Codec ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "CompanyRelCodec": {
            "type": "object",
            "required": [
                "company",
                "codec"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "codec": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "CompanyRelCodec-collection": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "CompanyRelCodec-detailed": {
            "type": "object",
            "required": [
                "company",
                "codec"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "codec": {
                    "$ref": "#/definitions/Codec"
                }
            }
        },
        "Country": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "countryCode": {
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/Country_Name"
                },
                "zone": {
                    "$ref": "#/definitions/Country_Zone"
                }
            }
        },
        "Country-collection": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "code": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "countryCode": {
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "$ref": "#/definitions/Country_Name"
                }
            }
        },
        "Country-detailed": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "countryCode": {
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/Country_Name"
                },
                "zone": {
                    "$ref": "#/definitions/Country_Zone"
                }
            }
        },
        "Country_Name": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "es": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "ca": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "it": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Country_Zone": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "default": "",
                    "maxLength": 55,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "es": {
                    "default": "",
                    "maxLength": 55,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "ca": {
                    "default": "",
                    "maxLength": 55,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "it": {
                    "default": "",
                    "maxLength": 55,
                    "description": "",
                    "example": "",
                    "type": "string"
                }
            }
        },
        "Currency": {
            "type": "object",
            "required": [
                "iden",
                "symbol"
            ],
            "properties": {
                "iden": {
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "symbol": {
                    "maxLength": 5,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/Currency_Name"
                }
            }
        },
        "Currency-collection": {
            "type": "object",
            "required": [
                "iden",
                "symbol"
            ],
            "properties": {
                "iden": {
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "symbol": {
                    "maxLength": 5,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/Currency_Name"
                }
            }
        },
        "Currency-detailed": {
            "type": "object",
            "required": [
                "iden",
                "symbol"
            ],
            "properties": {
                "iden": {
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "symbol": {
                    "maxLength": 5,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/Currency_Name"
                }
            }
        },
        "Currency_Name": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "default": "",
                    "maxLength": 25,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "es": {
                    "default": "",
                    "maxLength": 25,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "ca": {
                    "default": "",
                    "maxLength": 25,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "it": {
                    "default": "",
                    "maxLength": 25,
                    "description": "",
                    "example": "",
                    "type": "string"
                }
            }
        },
        "Ddi": {
            "type": "object",
            "required": [
                "ddi",
                "company"
            ],
            "properties": {
                "ddi": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "ddie164": {
                    "readOnly": true,
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "ddiProvider": {
                    "description": "",
                    "type": "integer"
                },
                "country": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Ddi-collection": {
            "type": "object",
            "required": [
                "ddi",
                "company"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "country": {
                    "description": "",
                    "type": "integer"
                },
                "ddi": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "ddie164": {
                    "readOnly": true,
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "ddiProvider": {
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Ddi-detailed": {
            "type": "object",
            "required": [
                "ddi",
                "company"
            ],
            "properties": {
                "ddi": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "ddie164": {
                    "readOnly": true,
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "ddiProvider": {
                    "$ref": "#/definitions/DdiProvider"
                },
                "country": {
                    "$ref": "#/definitions/Country"
                }
            }
        },
        "DdiProvider": {
            "type": "object",
            "required": [
                "description",
                "name",
                "transformationRuleSet"
            ],
            "properties": {
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "name": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "externallyRated": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "transformationRuleSet": {
                    "description": "",
                    "type": "integer"
                },
                "proxyTrunk": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "DdiProvider-collection": {
            "type": "object",
            "required": [
                "name",
                "description",
                "transformationRuleSet"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "transformationRuleSet": {
                    "description": "",
                    "type": "integer"
                },
                "proxyTrunk": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "DdiProvider-detailed": {
            "type": "object",
            "required": [
                "description",
                "name",
                "transformationRuleSet"
            ],
            "properties": {
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "name": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "externallyRated": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "transformationRuleSet": {
                    "$ref": "#/definitions/TransformationRuleSet"
                },
                "proxyTrunk": {
                    "$ref": "#/definitions/ProxyTrunk"
                }
            }
        },
        "DdiProviderAddress": {
            "type": "object",
            "properties": {
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "ddiProvider": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "ddiProvider"
            ]
        },
        "DdiProviderAddress-collection": {
            "type": "object",
            "properties": {
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "DdiProviderAddress-detailed": {
            "type": "object",
            "properties": {
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "ddiProvider": {
                    "$ref": "#/definitions/DdiProvider"
                }
            },
            "required": [
                "ddiProvider"
            ]
        },
        "DdiProviderRegistration": {
            "type": "object",
            "required": [
                "username",
                "domain",
                "realm",
                "authUsername",
                "authPassword",
                "authProxy",
                "expires",
                "contactUsername",
                "ddiProvider"
            ],
            "properties": {
                "username": {
                    "default": "",
                    "maxLength": 64,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "domain": {
                    "default": "",
                    "maxLength": 190,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "realm": {
                    "default": "",
                    "maxLength": 64,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "authUsername": {
                    "default": "",
                    "maxLength": 64,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "authPassword": {
                    "default": "",
                    "maxLength": 64,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "authProxy": {
                    "default": "",
                    "maxLength": 64,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "expires": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "integer"
                },
                "multiDdi": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "contactUsername": {
                    "default": "",
                    "maxLength": 64,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "ddiProvider": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "DdiProviderRegistration-detailed": {
            "type": "object",
            "required": [
                "username",
                "domain",
                "realm",
                "authUsername",
                "authPassword",
                "authProxy",
                "expires",
                "contactUsername",
                "ddiProvider"
            ],
            "properties": {
                "username": {
                    "default": "",
                    "maxLength": 64,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "domain": {
                    "default": "",
                    "maxLength": 190,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "realm": {
                    "default": "",
                    "maxLength": 64,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "authUsername": {
                    "default": "",
                    "maxLength": 64,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "authPassword": {
                    "default": "",
                    "maxLength": 64,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "authProxy": {
                    "default": "",
                    "maxLength": 64,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "expires": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "integer"
                },
                "multiDdi": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "contactUsername": {
                    "default": "",
                    "maxLength": 64,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "ddiProvider": {
                    "$ref": "#/definitions/DdiProvider"
                }
            }
        },
        "DdiProviderRegistration-detailedCollection": {
            "type": "object",
            "required": [
                "username",
                "domain"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "username": {
                    "default": "",
                    "maxLength": 64,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "domain": {
                    "default": "",
                    "maxLength": 190,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/DdiProviderRegistrationStatus"
                }
            }
        },
        "DdiProviderRegistration-status": {
            "type": "object",
            "required": [
                "username",
                "domain"
            ],
            "properties": {
                "username": {
                    "default": "",
                    "maxLength": 64,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "domain": {
                    "default": "",
                    "maxLength": 190,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "status": {
                    "$ref": "#/definitions/DdiProviderRegistrationStatus"
                }
            }
        },
        "DdiProviderRegistrationStatus": {
            "type": "object",
            "properties": {
                "registered": {
                    "description": "",
                    "type": "boolean"
                },
                "inProgress": {
                    "description": "",
                    "type": "boolean"
                },
                "expires": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Destination": {
            "type": "object",
            "required": [
                "prefix"
            ],
            "properties": {
                "prefix": {
                    "maxLength": 24,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/Destination_Name"
                }
            }
        },
        "Destination-collection": {
            "type": "object",
            "required": [
                "prefix"
            ],
            "properties": {
                "prefix": {
                    "maxLength": 24,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/Destination_Name"
                }
            }
        },
        "Destination-detailed": {
            "type": "object",
            "required": [
                "prefix"
            ],
            "properties": {
                "prefix": {
                    "maxLength": 24,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/Destination_Name"
                }
            }
        },
        "DestinationRate": {
            "type": "object",
            "required": [
                "cost",
                "connectFee",
                "rateIncrement",
                "groupIntervalStart",
                "destinationRateGroup",
                "destination"
            ],
            "properties": {
                "cost": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "connectFee": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "rateIncrement": {
                    "maxLength": 16,
                    "description": "",
                    "type": "string"
                },
                "groupIntervalStart": {
                    "default": "0s",
                    "maxLength": 16,
                    "description": "",
                    "example": "0s",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "destinationRateGroup": {
                    "description": "",
                    "type": "integer"
                },
                "destination": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "DestinationRate-collection": {
            "type": "object",
            "required": [
                "cost",
                "connectFee",
                "rateIncrement",
                "groupIntervalStart",
                "destinationRateGroup",
                "destination"
            ],
            "properties": {
                "cost": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "connectFee": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "rateIncrement": {
                    "maxLength": 16,
                    "description": "",
                    "type": "string"
                },
                "groupIntervalStart": {
                    "default": "0s",
                    "maxLength": 16,
                    "description": "",
                    "example": "0s",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "destinationRateGroup": {
                    "description": "",
                    "type": "integer"
                },
                "destination": {
                    "description": "",
                    "type": "integer"
                },
                "currencySymbol": {
                    "readOnly": true,
                    "description": "Cost currency",
                    "type": "string"
                }
            }
        },
        "DestinationRate-detailed": {
            "type": "object",
            "required": [
                "cost",
                "connectFee",
                "rateIncrement",
                "groupIntervalStart",
                "destinationRateGroup",
                "destination"
            ],
            "properties": {
                "cost": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "connectFee": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "rateIncrement": {
                    "maxLength": 16,
                    "description": "",
                    "type": "string"
                },
                "groupIntervalStart": {
                    "default": "0s",
                    "maxLength": 16,
                    "description": "",
                    "example": "0s",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "destinationRateGroup": {
                    "$ref": "#/definitions/DestinationRateGroup"
                },
                "destination": {
                    "$ref": "#/definitions/Destination"
                },
                "currencySymbol": {
                    "readOnly": true,
                    "description": "Cost currency",
                    "type": "string"
                }
            }
        },
        "DestinationRateGroup": {
            "type": "object",
            "properties": {
                "status": {
                    "enum": [
                        "waiting",
                        "inProgress",
                        "imported",
                        "error"
                    ],
                    "maxLength": 20,
                    "description": "",
                    "type": "string"
                },
                "lastExecutionError": {
                    "maxLength": 300,
                    "description": "",
                    "type": "string"
                },
                "deductibleConnectionFee": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/DestinationRateGroup_Name"
                },
                "description": {
                    "$ref": "#/definitions/DestinationRateGroup_Description"
                },
                "file": {
                    "$ref": "#/definitions/DestinationRateGroup_File"
                },
                "currency": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "deductibleConnectionFee"
            ]
        },
        "DestinationRateGroup-collection": {
            "type": "object",
            "properties": {
                "status": {
                    "enum": [
                        "waiting",
                        "inProgress",
                        "imported",
                        "error"
                    ],
                    "maxLength": 20,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/DestinationRateGroup_Name"
                },
                "file": {
                    "$ref": "#/definitions/DestinationRateGroup_File"
                },
                "currency": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "DestinationRateGroup-detailed": {
            "type": "object",
            "properties": {
                "status": {
                    "enum": [
                        "waiting",
                        "inProgress",
                        "imported",
                        "error"
                    ],
                    "maxLength": 20,
                    "description": "",
                    "type": "string"
                },
                "lastExecutionError": {
                    "maxLength": 300,
                    "description": "",
                    "type": "string"
                },
                "deductibleConnectionFee": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/DestinationRateGroup_Name"
                },
                "description": {
                    "$ref": "#/definitions/DestinationRateGroup_Description"
                },
                "file": {
                    "$ref": "#/definitions/DestinationRateGroup_File"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                }
            },
            "required": [
                "deductibleConnectionFee"
            ]
        },
        "DestinationRateGroup_Description": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "es": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "ca": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "it": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "DestinationRateGroup_File": {
            "type": "object",
            "properties": {
                "fileSize": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "mimeType": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "baseName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "importerArguments": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "DestinationRateGroup_Name": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "es": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "ca": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "it": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Destination_Name": {
            "type": "object",
            "properties": {
                "en": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "es": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "ca": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "it": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "EncodedFile": {
            "type": "object",
            "properties": {
                "fileSize": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "mimeType": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "baseName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Extension": {
            "type": "object",
            "required": [
                "number",
                "company"
            ],
            "properties": {
                "number": {
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "routeType": {
                    "enum": [
                        "user",
                        "number",
                        "ivr",
                        "huntGroup",
                        "conferenceRoom",
                        "friend",
                        "queue",
                        "conditional",
                        "voicemail"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "numberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "friendValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "user": {
                    "description": "",
                    "type": "integer"
                },
                "numberCountry": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Extension-collection": {
            "type": "object",
            "required": [
                "number"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "number": {
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "routeType": {
                    "enum": [
                        "user",
                        "number",
                        "ivr",
                        "huntGroup",
                        "conferenceRoom",
                        "friend",
                        "queue",
                        "conditional",
                        "voicemail"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "numberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "friendValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "user": {
                    "description": "",
                    "type": "integer"
                },
                "numberCountry": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Extension-detailed": {
            "type": "object",
            "required": [
                "number",
                "company"
            ],
            "properties": {
                "number": {
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "routeType": {
                    "enum": [
                        "user",
                        "number",
                        "ivr",
                        "huntGroup",
                        "conferenceRoom",
                        "friend",
                        "queue",
                        "conditional",
                        "voicemail"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "numberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "friendValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "numberCountry": {
                    "$ref": "#/definitions/Country"
                }
            }
        },
        "Fax": {
            "type": "object",
            "required": [
                "name",
                "sendByEmail",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "email": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "sendByEmail": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "outgoingDdi": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Fax-collection": {
            "type": "object",
            "required": [
                "name",
                "sendByEmail"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "email": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "sendByEmail": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "outgoingDdi": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Feature": {
            "type": "object",
            "required": [
                "iden"
            ],
            "properties": {
                "iden": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/Feature_Name"
                }
            }
        },
        "Feature-collection": {
            "type": "object",
            "required": [
                "iden"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "iden": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "$ref": "#/definitions/Feature_Name"
                }
            }
        },
        "Feature-detailed": {
            "type": "object",
            "required": [
                "iden"
            ],
            "properties": {
                "iden": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/Feature_Name"
                }
            }
        },
        "Feature_Name": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "default": "",
                    "maxLength": 50,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "es": {
                    "default": "",
                    "maxLength": 50,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "ca": {
                    "default": "",
                    "maxLength": 50,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "it": {
                    "default": "",
                    "maxLength": 50,
                    "description": "",
                    "example": "",
                    "type": "string"
                }
            }
        },
        "FeaturesRelBrand-collection": {
            "type": "object",
            "required": [
                "feature"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "feature": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "FeaturesRelBrand-detailed": {
            "type": "object",
            "required": [
                "feature"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "feature": {
                    "$ref": "#/definitions/Feature"
                }
            }
        },
        "FeaturesRelCompany": {
            "type": "object",
            "required": [
                "company",
                "feature"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "feature": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "FeaturesRelCompany-collection": {
            "type": "object",
            "required": [
                "company",
                "feature"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "feature": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "FeaturesRelCompany-detailed": {
            "type": "object",
            "required": [
                "company",
                "feature"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "feature": {
                    "$ref": "#/definitions/Feature"
                }
            }
        },
        "FixedCost": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "cost": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "FixedCost-collection": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "cost": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                }
            }
        },
        "FixedCost-detailed": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "cost": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "FixedCostsRelInvoice": {
            "type": "object",
            "properties": {
                "quantity": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "fixedCost": {
                    "description": "",
                    "type": "integer"
                },
                "invoice": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "fixedCost",
                "invoice"
            ]
        },
        "FixedCostsRelInvoice-detailed": {
            "type": "object",
            "properties": {
                "quantity": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "fixedCost": {
                    "$ref": "#/definitions/FixedCost"
                },
                "invoice": {
                    "$ref": "#/definitions/Invoice"
                }
            },
            "required": [
                "fixedCost",
                "invoice"
            ]
        },
        "FixedCostsRelInvoice-detailedCollection": {
            "type": "object",
            "properties": {
                "quantity": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "fixedCost": {
                    "$ref": "#/definitions/FixedCost"
                },
                "invoice": {
                    "$ref": "#/definitions/Invoice"
                }
            },
            "required": [
                "fixedCost",
                "invoice"
            ]
        },
        "FixedCostsRelInvoiceScheduler": {
            "type": "object",
            "properties": {
                "quantity": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "default": "static",
                    "enum": [
                        "static",
                        "maxcalls",
                        "ddis"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "static",
                    "type": "string"
                },
                "ddisCountryMatch": {
                    "default": "all",
                    "enum": [
                        "all",
                        "national",
                        "international",
                        "specific"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "all",
                    "type": "string"
                },
                "ddisCountry": {
                    "description": "",
                    "type": "integer"
                },
                "fixedCost": {
                    "description": "",
                    "type": "integer"
                },
                "invoiceScheduler": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "type",
                "fixedCost",
                "invoiceScheduler"
            ]
        },
        "FixedCostsRelInvoiceScheduler-detailed": {
            "type": "object",
            "properties": {
                "quantity": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "default": "static",
                    "enum": [
                        "static",
                        "maxcalls",
                        "ddis"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "static",
                    "type": "string"
                },
                "ddisCountryMatch": {
                    "default": "all",
                    "enum": [
                        "all",
                        "national",
                        "international",
                        "specific"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "all",
                    "type": "string"
                },
                "ddisCountry": {
                    "$ref": "#/definitions/Country"
                },
                "fixedCost": {
                    "$ref": "#/definitions/FixedCost"
                },
                "invoiceScheduler": {
                    "$ref": "#/definitions/InvoiceScheduler"
                }
            },
            "required": [
                "type",
                "fixedCost",
                "invoiceScheduler"
            ]
        },
        "FixedCostsRelInvoiceScheduler-detailedCollection": {
            "type": "object",
            "properties": {
                "quantity": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "default": "static",
                    "enum": [
                        "static",
                        "maxcalls",
                        "ddis"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "static",
                    "type": "string"
                },
                "ddisCountryMatch": {
                    "default": "all",
                    "enum": [
                        "all",
                        "national",
                        "international",
                        "specific"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "all",
                    "type": "string"
                },
                "ddisCountry": {
                    "$ref": "#/definitions/Country"
                },
                "fixedCost": {
                    "$ref": "#/definitions/FixedCost"
                },
                "invoiceScheduler": {
                    "$ref": "#/definitions/InvoiceScheduler"
                }
            },
            "required": [
                "type",
                "fixedCost",
                "invoiceScheduler"
            ]
        },
        "Friend": {
            "type": "object",
            "required": [
                "name",
                "description",
                "priority",
                "allow",
                "directConnectivity",
                "ddiIn",
                "t38Passthrough",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "transport": {
                    "enum": [
                        "udp",
                        "tcp",
                        "tls"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "port": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "password": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "priority": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "integer"
                },
                "allow": {
                    "default": "alaw",
                    "maxLength": 200,
                    "description": "",
                    "example": "alaw",
                    "type": "string"
                },
                "fromUser": {
                    "maxLength": 190,
                    "description": "",
                    "type": "string"
                },
                "fromDomain": {
                    "maxLength": 190,
                    "description": "",
                    "type": "string"
                },
                "directConnectivity": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no",
                        "intervpbx"
                    ],
                    "maxLength": 20,
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "ddiIn": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "t38Passthrough": {
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "no",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "transformationRuleSet": {
                    "description": "",
                    "type": "integer"
                },
                "outgoingDdi": {
                    "description": "",
                    "type": "integer"
                },
                "language": {
                    "description": "",
                    "type": "integer"
                },
                "interCompany": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Friend-collection": {
            "type": "object",
            "required": [
                "name",
                "description",
                "priority",
                "directConnectivity"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "domain": {
                    "description": "",
                    "type": "integer"
                },
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "priority": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "integer"
                },
                "directConnectivity": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no",
                        "intervpbx"
                    ],
                    "maxLength": 20,
                    "description": "",
                    "example": "yes",
                    "type": "string"
                }
            }
        },
        "Friend-detailed": {
            "type": "object",
            "required": [
                "name",
                "description",
                "priority",
                "allow",
                "directConnectivity",
                "ddiIn",
                "t38Passthrough",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "transport": {
                    "enum": [
                        "udp",
                        "tcp",
                        "tls"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "port": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "password": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "priority": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "integer"
                },
                "allow": {
                    "default": "alaw",
                    "maxLength": 200,
                    "description": "",
                    "example": "alaw",
                    "type": "string"
                },
                "fromUser": {
                    "maxLength": 190,
                    "description": "",
                    "type": "string"
                },
                "fromDomain": {
                    "maxLength": 190,
                    "description": "",
                    "type": "string"
                },
                "directConnectivity": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no",
                        "intervpbx"
                    ],
                    "maxLength": 20,
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "ddiIn": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "t38Passthrough": {
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "no",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "transformationRuleSet": {
                    "$ref": "#/definitions/TransformationRuleSet"
                },
                "outgoingDdi": {
                    "$ref": "#/definitions/Ddi"
                },
                "language": {
                    "$ref": "#/definitions/Language"
                },
                "interCompany": {
                    "$ref": "#/definitions/Company"
                }
            }
        },
        "Friend-status": {
            "type": "object",
            "required": [
                "name",
                "company"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "domainName": {
                    "description": "Registration domain",
                    "type": "string"
                },
                "status": {
                    "description": "Registration status",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegistrationStatus"
                    }
                },
                "company": {
                    "$ref": "#/definitions/Company"
                }
            }
        },
        "Invoice": {
            "type": "object",
            "properties": {
                "number": {
                    "maxLength": 30,
                    "description": "",
                    "type": "string"
                },
                "inDate": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "outDate": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "total": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "taxRate": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "totalWithTax": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "status": {
                    "enum": [
                        "waiting",
                        "processing",
                        "created",
                        "error"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "statusMsg": {
                    "maxLength": 140,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "pdf": {
                    "$ref": "#/definitions/Invoice_Pdf"
                },
                "invoiceTemplate": {
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "numberSequence": {
                    "description": "",
                    "type": "integer"
                },
                "scheduler": {
                    "description": "",
                    "type": "integer"
                },
                "currency": {
                    "description": "Invoice currency",
                    "type": "string"
                }
            },
            "required": [
                "invoiceTemplate",
                "company"
            ]
        },
        "Invoice-collection": {
            "type": "object",
            "required": [
                "invoiceTemplate",
                "company"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "number": {
                    "maxLength": 30,
                    "description": "",
                    "type": "string"
                },
                "inDate": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "outDate": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "total": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "taxRate": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "totalWithTax": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "status": {
                    "enum": [
                        "waiting",
                        "processing",
                        "created",
                        "error"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "pdf": {
                    "$ref": "#/definitions/Invoice_Pdf"
                },
                "invoiceTemplate": {
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "scheduler": {
                    "description": "",
                    "type": "integer"
                },
                "currency": {
                    "description": "Invoice currency",
                    "type": "string"
                }
            }
        },
        "Invoice-detailed": {
            "type": "object",
            "properties": {
                "number": {
                    "maxLength": 30,
                    "description": "",
                    "type": "string"
                },
                "inDate": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "outDate": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "total": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "taxRate": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "totalWithTax": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "status": {
                    "enum": [
                        "waiting",
                        "processing",
                        "created",
                        "error"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "statusMsg": {
                    "maxLength": 140,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "pdf": {
                    "$ref": "#/definitions/Invoice_Pdf"
                },
                "invoiceTemplate": {
                    "$ref": "#/definitions/InvoiceTemplate"
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "numberSequence": {
                    "$ref": "#/definitions/InvoiceNumberSequence"
                },
                "scheduler": {
                    "$ref": "#/definitions/InvoiceScheduler"
                },
                "currency": {
                    "description": "Invoice currency",
                    "type": "string"
                }
            },
            "required": [
                "invoiceTemplate",
                "company"
            ]
        },
        "InvoiceNumberSequence": {
            "type": "object",
            "required": [
                "name",
                "prefix",
                "sequenceLength",
                "increment",
                "iteration",
                "version"
            ],
            "properties": {
                "name": {
                    "maxLength": 40,
                    "description": "",
                    "type": "string"
                },
                "prefix": {
                    "default": "",
                    "maxLength": 20,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "sequenceLength": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "increment": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "latestValue": {
                    "default": "",
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "iteration": {
                    "default": 0,
                    "minimum": 0,
                    "description": "",
                    "example": "0",
                    "type": "integer"
                },
                "version": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "integer"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "InvoiceNumberSequence-collection": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 40,
                    "description": "",
                    "type": "string"
                },
                "latestValue": {
                    "default": "",
                    "description": "",
                    "example": "",
                    "type": "string"
                }
            }
        },
        "InvoiceNumberSequence-detailed": {
            "type": "object",
            "required": [
                "name",
                "prefix",
                "sequenceLength",
                "increment",
                "iteration",
                "version"
            ],
            "properties": {
                "name": {
                    "maxLength": 40,
                    "description": "",
                    "type": "string"
                },
                "prefix": {
                    "default": "",
                    "maxLength": 20,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "sequenceLength": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "increment": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "latestValue": {
                    "default": "",
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "iteration": {
                    "default": 0,
                    "minimum": 0,
                    "description": "",
                    "example": "0",
                    "type": "integer"
                },
                "version": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "integer"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "InvoiceScheduler": {
            "type": "object",
            "required": [
                "name",
                "unit",
                "frequency",
                "email",
                "brand",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 40,
                    "description": "",
                    "type": "string"
                },
                "unit": {
                    "default": "month",
                    "enum": [
                        "week",
                        "month",
                        "year"
                    ],
                    "maxLength": 30,
                    "description": "",
                    "example": "month",
                    "type": "string"
                },
                "frequency": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "email": {
                    "maxLength": 140,
                    "description": "",
                    "type": "string"
                },
                "lastExecution": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "lastExecutionError": {
                    "maxLength": 300,
                    "description": "",
                    "type": "string"
                },
                "nextExecution": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "taxRate": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "invoiceTemplate": {
                    "description": "",
                    "type": "integer"
                },
                "brand": {
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "numberSequence": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "InvoiceScheduler-collection": {
            "type": "object",
            "required": [
                "name",
                "unit",
                "frequency",
                "brand",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 40,
                    "description": "",
                    "type": "string"
                },
                "unit": {
                    "default": "month",
                    "enum": [
                        "week",
                        "month",
                        "year"
                    ],
                    "maxLength": 30,
                    "description": "",
                    "example": "month",
                    "type": "string"
                },
                "frequency": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "lastExecution": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "nextExecution": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "brand": {
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "InvoiceScheduler-detailed": {
            "type": "object",
            "required": [
                "name",
                "unit",
                "frequency",
                "email",
                "brand",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 40,
                    "description": "",
                    "type": "string"
                },
                "unit": {
                    "default": "month",
                    "enum": [
                        "week",
                        "month",
                        "year"
                    ],
                    "maxLength": 30,
                    "description": "",
                    "example": "month",
                    "type": "string"
                },
                "frequency": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "email": {
                    "maxLength": 140,
                    "description": "",
                    "type": "string"
                },
                "lastExecution": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "lastExecutionError": {
                    "maxLength": 300,
                    "description": "",
                    "type": "string"
                },
                "nextExecution": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "taxRate": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "invoiceTemplate": {
                    "$ref": "#/definitions/InvoiceTemplate"
                },
                "brand": {
                    "$ref": "#/definitions/Brand"
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "numberSequence": {
                    "$ref": "#/definitions/InvoiceNumberSequence"
                }
            }
        },
        "InvoiceTemplate": {
            "type": "object",
            "required": [
                "name",
                "template"
            ],
            "properties": {
                "name": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 300,
                    "description": "",
                    "type": "string"
                },
                "template": {
                    "maxLength": 65535,
                    "description": "",
                    "type": "string"
                },
                "templateHeader": {
                    "maxLength": 65535,
                    "description": "",
                    "type": "string"
                },
                "templateFooter": {
                    "maxLength": 65535,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "global": {
                    "readOnly": true,
                    "description": "Global Special Number",
                    "type": "boolean"
                }
            }
        },
        "InvoiceTemplate-collection": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 300,
                    "description": "",
                    "type": "string"
                },
                "global": {
                    "readOnly": true,
                    "description": "Global Special Number",
                    "type": "boolean"
                }
            }
        },
        "InvoiceTemplate-detailed": {
            "type": "object",
            "required": [
                "name",
                "template"
            ],
            "properties": {
                "name": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 300,
                    "description": "",
                    "type": "string"
                },
                "template": {
                    "maxLength": 65535,
                    "description": "",
                    "type": "string"
                },
                "templateHeader": {
                    "maxLength": 65535,
                    "description": "",
                    "type": "string"
                },
                "templateFooter": {
                    "maxLength": 65535,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "global": {
                    "readOnly": true,
                    "description": "Global Special Number",
                    "type": "boolean"
                }
            }
        },
        "Invoice_Pdf": {
            "type": "object",
            "properties": {
                "fileSize": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "mimeType": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "baseName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Language": {
            "type": "object",
            "required": [
                "iden"
            ],
            "properties": {
                "iden": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/Language_Name"
                }
            }
        },
        "Language-collection": {
            "type": "object",
            "required": [
                "iden"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "iden": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "$ref": "#/definitions/Language_Name"
                }
            }
        },
        "Language-detailed": {
            "type": "object",
            "required": [
                "iden"
            ],
            "properties": {
                "iden": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/Language_Name"
                }
            }
        },
        "Language_Name": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "es": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "ca": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "it": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                }
            }
        },
        "Location": {
            "type": "object",
            "required": [
                "name",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 500,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Location-collection": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 500,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "MatchList": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "MatchList-collection": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "MatchList-detailed": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "MatchListPattern": {
            "type": "object",
            "properties": {
                "description": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "number",
                        "regexp"
                    ],
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "regexp": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "numbervalue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "matchList": {
                    "description": "",
                    "type": "integer"
                },
                "numberCountry": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "type",
                "matchList"
            ]
        },
        "MatchListPattern-collection": {
            "type": "object",
            "required": [
                "type",
                "matchList"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "description": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "number",
                        "regexp"
                    ],
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "regexp": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "numbervalue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "numberCountry": {
                    "description": "",
                    "type": "integer"
                },
                "matchList": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "MatchListPattern-detailed": {
            "type": "object",
            "properties": {
                "description": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "number",
                        "regexp"
                    ],
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "regexp": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "numbervalue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "matchList": {
                    "$ref": "#/definitions/MatchList"
                },
                "numberCountry": {
                    "$ref": "#/definitions/Country"
                }
            },
            "required": [
                "type",
                "matchList"
            ]
        },
        "MusicOnHold": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "pending",
                        "encoding",
                        "ready",
                        "error"
                    ],
                    "maxLength": 20,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "originalFile": {
                    "description": "",
                    "type": "integer"
                },
                "encodedFile": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "MusicOnHold-collection": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "pending",
                        "encoding",
                        "ready",
                        "error"
                    ],
                    "maxLength": 20,
                    "description": "",
                    "type": "string"
                },
                "originalFile": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "MusicOnHold-detailed": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "pending",
                        "encoding",
                        "ready",
                        "error"
                    ],
                    "maxLength": 20,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "originalFile": {
                    "$ref": "#/definitions/OriginalFile"
                },
                "encodedFile": {
                    "$ref": "#/definitions/EncodedFile"
                }
            }
        },
        "NotificationTemplate": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "name": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "voicemail",
                        "fax",
                        "limit",
                        "lowbalance",
                        "invoice",
                        "callCsv",
                        "maxDailyUsage"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "NotificationTemplate-collection": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "voicemail",
                        "fax",
                        "limit",
                        "lowbalance",
                        "invoice",
                        "callCsv",
                        "maxDailyUsage"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "NotificationTemplate-detailed": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "name": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "voicemail",
                        "fax",
                        "limit",
                        "lowbalance",
                        "invoice",
                        "callCsv",
                        "maxDailyUsage"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "NotificationTemplateContent": {
            "type": "object",
            "properties": {
                "fromName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "fromAddress": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "subject": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "body": {
                    "maxLength": 65535,
                    "description": "",
                    "type": "string"
                },
                "bodyType": {
                    "default": "text/plain",
                    "enum": [
                        "text/plain",
                        "text/html"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "text/plain",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "notificationTemplate": {
                    "description": "",
                    "type": "integer"
                },
                "language": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "subject",
                "body",
                "bodyType",
                "notificationTemplate"
            ]
        },
        "NotificationTemplateContent-collection": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "fromName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "fromAddress": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "language": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "NotificationTemplateContent-detailed": {
            "type": "object",
            "properties": {
                "fromName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "fromAddress": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "subject": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "body": {
                    "maxLength": 65535,
                    "description": "",
                    "type": "string"
                },
                "bodyType": {
                    "default": "text/plain",
                    "enum": [
                        "text/plain",
                        "text/html"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "text/plain",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "notificationTemplate": {
                    "$ref": "#/definitions/NotificationTemplate"
                },
                "language": {
                    "$ref": "#/definitions/Language"
                }
            },
            "required": [
                "subject",
                "body",
                "bodyType",
                "notificationTemplate"
            ]
        },
        "OriginalFile": {
            "type": "object",
            "properties": {
                "fileSize": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "mimeType": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "baseName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "OutgoingDdiRule": {
            "type": "object",
            "required": [
                "name",
                "defaultAction",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "defaultAction": {
                    "enum": [
                        "keep",
                        "force"
                    ],
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "forcedDdi": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "OutgoingDdiRule-collection": {
            "type": "object",
            "required": [
                "name",
                "defaultAction"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "defaultAction": {
                    "enum": [
                        "keep",
                        "force"
                    ],
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "forcedDdi": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "OutgoingDdiRule-detailed": {
            "type": "object",
            "required": [
                "name",
                "defaultAction",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "defaultAction": {
                    "enum": [
                        "keep",
                        "force"
                    ],
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "forcedDdi": {
                    "$ref": "#/definitions/Ddi"
                }
            }
        },
        "OutgoingRouting": {
            "type": "object",
            "properties": {
                "type": {
                    "default": "group",
                    "enum": [
                        "pattern",
                        "group",
                        "fax"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "group",
                    "type": "string"
                },
                "priority": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "weight": {
                    "default": 1,
                    "minimum": 0,
                    "description": "",
                    "example": "1",
                    "type": "integer"
                },
                "routingMode": {
                    "default": "static",
                    "enum": [
                        "static",
                        "lcr",
                        "block"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "static",
                    "type": "string"
                },
                "prefix": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "stopper": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "forceClid": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "clid": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "carrier": {
                    "description": "",
                    "type": "integer"
                },
                "routingPattern": {
                    "description": "",
                    "type": "integer"
                },
                "routingPatternGroup": {
                    "description": "",
                    "type": "integer"
                },
                "routingTag": {
                    "description": "",
                    "type": "integer"
                },
                "clidCountry": {
                    "description": "",
                    "type": "integer"
                },
                "carrierIds": {
                    "description": "Carriers on LCR route type",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "required": [
                "priority",
                "weight",
                "stopper"
            ]
        },
        "OutgoingRouting-collection": {
            "type": "object",
            "required": [
                "priority",
                "weight",
                "stopper"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "default": "group",
                    "enum": [
                        "pattern",
                        "group",
                        "fax"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "group",
                    "type": "string"
                },
                "priority": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "weight": {
                    "default": 1,
                    "minimum": 0,
                    "description": "",
                    "example": "1",
                    "type": "integer"
                },
                "routingMode": {
                    "default": "static",
                    "enum": [
                        "static",
                        "lcr",
                        "block"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "static",
                    "type": "string"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "routingTag": {
                    "description": "",
                    "type": "integer"
                },
                "carrier": {
                    "description": "",
                    "type": "integer"
                },
                "stopper": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "routingPattern": {
                    "description": "",
                    "type": "integer"
                },
                "routingPatternGroup": {
                    "description": "",
                    "type": "integer"
                },
                "carrierIds": {
                    "description": "Carriers on LCR route type",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "OutgoingRouting-detailed": {
            "type": "object",
            "properties": {
                "type": {
                    "default": "group",
                    "enum": [
                        "pattern",
                        "group",
                        "fax"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "group",
                    "type": "string"
                },
                "priority": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "weight": {
                    "default": 1,
                    "minimum": 0,
                    "description": "",
                    "example": "1",
                    "type": "integer"
                },
                "routingMode": {
                    "default": "static",
                    "enum": [
                        "static",
                        "lcr",
                        "block"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "static",
                    "type": "string"
                },
                "prefix": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "stopper": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "forceClid": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "clid": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "carrier": {
                    "$ref": "#/definitions/Carrier"
                },
                "routingPattern": {
                    "$ref": "#/definitions/RoutingPattern"
                },
                "routingPatternGroup": {
                    "$ref": "#/definitions/RoutingPatternGroup"
                },
                "routingTag": {
                    "$ref": "#/definitions/RoutingTag"
                },
                "clidCountry": {
                    "$ref": "#/definitions/Country"
                },
                "carrierIds": {
                    "description": "Carriers on LCR route type",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "required": [
                "priority",
                "weight",
                "stopper"
            ]
        },
        "Profile": {
            "type": "object",
            "properties": {
                "restricted": {
                    "description": "",
                    "type": "boolean"
                },
                "acls": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProfileAcl"
                    }
                }
            }
        },
        "ProfileAcl": {
            "type": "object",
            "properties": {
                "iden": {
                    "description": "",
                    "type": "string"
                },
                "create": {
                    "description": "",
                    "type": "boolean"
                },
                "read": {
                    "description": "",
                    "type": "boolean"
                },
                "update": {
                    "description": "",
                    "type": "boolean"
                },
                "delete": {
                    "description": "",
                    "type": "boolean"
                }
            }
        },
        "ProxyTrunk": {
            "type": "object",
            "properties": {
                "name": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                }
            },
            "required": [
                "ip"
            ]
        },
        "ProxyTrunk-collection": {
            "type": "object",
            "required": [
                "ip"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "ProxyTrunk-detailed": {
            "type": "object",
            "properties": {
                "name": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                }
            },
            "required": [
                "ip"
            ]
        },
        "PublicEntity": {
            "type": "object",
            "required": [
                "iden",
                "platform",
                "brand",
                "client"
            ],
            "properties": {
                "iden": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "fqdn": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "platform": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "brand": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "client": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/PublicEntity_Name"
                }
            }
        },
        "PublicEntity-collection": {
            "type": "object",
            "required": [
                "iden"
            ],
            "properties": {
                "iden": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/PublicEntity_Name"
                }
            }
        },
        "PublicEntity-detailed": {
            "type": "object",
            "required": [
                "iden",
                "platform",
                "brand",
                "client"
            ],
            "properties": {
                "iden": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "fqdn": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "platform": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "brand": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "client": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/PublicEntity_Name"
                }
            }
        },
        "PublicEntity_Name": {
            "type": "object",
            "properties": {
                "en": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "es": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "ca": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "it": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "RatingPlan": {
            "type": "object",
            "required": [
                "weight",
                "timeIn",
                "ratingPlanGroup",
                "destinationRateGroup"
            ],
            "properties": {
                "weight": {
                    "default": 10,
                    "format": "float",
                    "description": "",
                    "example": "10.00",
                    "type": "number"
                },
                "timingType": {
                    "default": "always",
                    "enum": [
                        "always",
                        "custom"
                    ],
                    "maxLength": 10,
                    "description": "",
                    "example": "always",
                    "type": "string"
                },
                "timeIn": {
                    "format": "time",
                    "description": "",
                    "type": "string"
                },
                "monday": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "tuesday": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "wednesday": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "thursday": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "friday": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "saturday": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "sunday": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "ratingPlanGroup": {
                    "description": "",
                    "type": "integer"
                },
                "destinationRateGroup": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "RatingPlan-collection": {
            "type": "object",
            "required": [
                "weight",
                "timeIn",
                "ratingPlanGroup",
                "destinationRateGroup"
            ],
            "properties": {
                "weight": {
                    "default": 10,
                    "format": "float",
                    "description": "",
                    "example": "10.00",
                    "type": "number"
                },
                "timingType": {
                    "default": "always",
                    "enum": [
                        "always",
                        "custom"
                    ],
                    "maxLength": 10,
                    "description": "",
                    "example": "always",
                    "type": "string"
                },
                "timeIn": {
                    "format": "time",
                    "description": "",
                    "type": "string"
                },
                "monday": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "tuesday": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "wednesday": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "thursday": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "friday": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "saturday": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "sunday": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "ratingPlanGroup": {
                    "description": "",
                    "type": "integer"
                },
                "destinationRateGroup": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "RatingPlan-detailed": {
            "type": "object",
            "required": [
                "weight",
                "timeIn",
                "ratingPlanGroup",
                "destinationRateGroup"
            ],
            "properties": {
                "weight": {
                    "default": 10,
                    "format": "float",
                    "description": "",
                    "example": "10.00",
                    "type": "number"
                },
                "timingType": {
                    "default": "always",
                    "enum": [
                        "always",
                        "custom"
                    ],
                    "maxLength": 10,
                    "description": "",
                    "example": "always",
                    "type": "string"
                },
                "timeIn": {
                    "format": "time",
                    "description": "",
                    "type": "string"
                },
                "monday": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "tuesday": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "wednesday": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "thursday": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "friday": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "saturday": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "sunday": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "ratingPlanGroup": {
                    "$ref": "#/definitions/RatingPlanGroup"
                },
                "destinationRateGroup": {
                    "$ref": "#/definitions/DestinationRateGroup"
                }
            }
        },
        "RatingPlanGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/RatingPlanGroup_Name"
                },
                "description": {
                    "$ref": "#/definitions/RatingPlanGroup_Description"
                },
                "currency": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "RatingPlanGroup-collection": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/RatingPlanGroup_Name"
                },
                "currency": {
                    "description": "",
                    "type": "integer"
                },
                "description": {
                    "$ref": "#/definitions/RatingPlanGroup_Description"
                }
            }
        },
        "RatingPlanGroup-detailed": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/RatingPlanGroup_Name"
                },
                "description": {
                    "$ref": "#/definitions/RatingPlanGroup_Description"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                }
            }
        },
        "RatingPlanGroup_Description": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "es": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "ca": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "it": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "RatingPlanGroup_Name": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "es": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "ca": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "it": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "RatingProfile": {
            "type": "object",
            "required": [
                "activationTime",
                "ratingPlanGroup"
            ],
            "properties": {
                "activationTime": {
                    "default": "CURRENT_TIMESTAMP",
                    "format": "date-time",
                    "description": "",
                    "example": "CURRENT_TIMESTAMP",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "carrier": {
                    "description": "",
                    "type": "integer"
                },
                "ratingPlanGroup": {
                    "description": "",
                    "type": "integer"
                },
                "routingTag": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "RatingProfile-collection": {
            "type": "object",
            "required": [
                "activationTime",
                "ratingPlanGroup"
            ],
            "properties": {
                "activationTime": {
                    "default": "CURRENT_TIMESTAMP",
                    "format": "date-time",
                    "description": "",
                    "example": "CURRENT_TIMESTAMP",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "carrier": {
                    "description": "",
                    "type": "integer"
                },
                "ratingPlanGroup": {
                    "description": "",
                    "type": "integer"
                },
                "routingTag": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "RatingProfile-detailed": {
            "type": "object",
            "required": [
                "activationTime",
                "ratingPlanGroup"
            ],
            "properties": {
                "activationTime": {
                    "default": "CURRENT_TIMESTAMP",
                    "format": "date-time",
                    "description": "",
                    "example": "CURRENT_TIMESTAMP",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "carrier": {
                    "$ref": "#/definitions/Carrier"
                },
                "ratingPlanGroup": {
                    "$ref": "#/definitions/RatingPlanGroup"
                },
                "routingTag": {
                    "$ref": "#/definitions/RoutingTag"
                }
            }
        },
        "RegistrationStatus": {
            "type": "object",
            "properties": {
                "contact": {
                    "description": "",
                    "type": "string"
                },
                "publicContact": {
                    "description": "",
                    "type": "boolean"
                },
                "received": {
                    "description": "",
                    "type": "string"
                },
                "publicReceived": {
                    "description": "",
                    "type": "boolean"
                },
                "expires": {
                    "description": "",
                    "type": "string"
                },
                "userAgent": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "RegistrationSummary": {
            "type": "object",
            "properties": {
                "active": {
                    "description": "",
                    "type": "integer"
                },
                "total": {
                    "description": "",
                    "type": "integer"
                },
                "percent": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "ResidentialDevice": {
            "type": "object",
            "required": [
                "name",
                "description",
                "allow",
                "directConnectivity",
                "ddiIn",
                "maxCalls",
                "t38Passthrough",
                "rtpEncryption",
                "multiContact",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "transport": {
                    "enum": [
                        "udp",
                        "tcp",
                        "tls"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "port": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "password": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "allow": {
                    "default": "alaw",
                    "maxLength": 200,
                    "description": "",
                    "example": "alaw",
                    "type": "string"
                },
                "fromDomain": {
                    "maxLength": 190,
                    "description": "",
                    "type": "string"
                },
                "directConnectivity": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "ddiIn": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "maxCalls": {
                    "default": 1,
                    "minimum": 0,
                    "description": "",
                    "example": "1",
                    "type": "integer"
                },
                "t38Passthrough": {
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "no",
                    "type": "string"
                },
                "rtpEncryption": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "multiContact": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "transformationRuleSet": {
                    "description": "",
                    "type": "integer"
                },
                "outgoingDdi": {
                    "description": "",
                    "type": "integer"
                },
                "language": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "ResidentialDevice-collection": {
            "type": "object",
            "required": [
                "name",
                "description",
                "directConnectivity",
                "company",
                "rtpEncryption",
                "multiContact"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "domainName": {
                    "description": "Registration domain",
                    "type": "string"
                },
                "directConnectivity": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "status": {
                    "description": "Registration status",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegistrationStatus"
                    }
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "rtpEncryption": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "multiContact": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                }
            }
        },
        "ResidentialDevice-detailed": {
            "type": "object",
            "required": [
                "name",
                "description",
                "allow",
                "directConnectivity",
                "ddiIn",
                "maxCalls",
                "t38Passthrough",
                "rtpEncryption",
                "multiContact",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "transport": {
                    "enum": [
                        "udp",
                        "tcp",
                        "tls"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "port": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "password": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "allow": {
                    "default": "alaw",
                    "maxLength": 200,
                    "description": "",
                    "example": "alaw",
                    "type": "string"
                },
                "fromDomain": {
                    "maxLength": 190,
                    "description": "",
                    "type": "string"
                },
                "directConnectivity": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "ddiIn": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "maxCalls": {
                    "default": 1,
                    "minimum": 0,
                    "description": "",
                    "example": "1",
                    "type": "integer"
                },
                "t38Passthrough": {
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "no",
                    "type": "string"
                },
                "rtpEncryption": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "multiContact": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "transformationRuleSet": {
                    "$ref": "#/definitions/TransformationRuleSet"
                },
                "outgoingDdi": {
                    "$ref": "#/definitions/Ddi"
                },
                "language": {
                    "$ref": "#/definitions/Language"
                }
            }
        },
        "ResidentialDevice-status": {
            "type": "object",
            "required": [
                "name",
                "directConnectivity",
                "company"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "domainName": {
                    "description": "Registration domain",
                    "type": "string"
                },
                "directConnectivity": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "status": {
                    "description": "Registration status",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegistrationStatus"
                    }
                },
                "company": {
                    "$ref": "#/definitions/Company"
                }
            }
        },
        "RetailAccount": {
            "type": "object",
            "required": [
                "name",
                "description",
                "directConnectivity",
                "ddiIn",
                "t38Passthrough",
                "rtpEncryption",
                "multiContact",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "transport": {
                    "enum": [
                        "udp",
                        "tcp",
                        "tls"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "port": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "password": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "fromDomain": {
                    "maxLength": 190,
                    "description": "",
                    "type": "string"
                },
                "directConnectivity": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "ddiIn": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "t38Passthrough": {
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "no",
                    "type": "string"
                },
                "rtpEncryption": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "multiContact": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "transformationRuleSet": {
                    "description": "",
                    "type": "integer"
                },
                "outgoingDdi": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "RetailAccount-collection": {
            "type": "object",
            "required": [
                "name",
                "directConnectivity",
                "description",
                "company",
                "rtpEncryption",
                "multiContact"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "domainName": {
                    "description": "Registration domain",
                    "type": "string"
                },
                "directConnectivity": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "status": {
                    "description": "Registration status",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegistrationStatus"
                    }
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "rtpEncryption": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "multiContact": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                }
            }
        },
        "RetailAccount-detailed": {
            "type": "object",
            "required": [
                "name",
                "description",
                "directConnectivity",
                "ddiIn",
                "t38Passthrough",
                "rtpEncryption",
                "multiContact",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "transport": {
                    "enum": [
                        "udp",
                        "tcp",
                        "tls"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "port": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "password": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "fromDomain": {
                    "maxLength": 190,
                    "description": "",
                    "type": "string"
                },
                "directConnectivity": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "ddiIn": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "t38Passthrough": {
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "no",
                    "type": "string"
                },
                "rtpEncryption": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "multiContact": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "transformationRuleSet": {
                    "$ref": "#/definitions/TransformationRuleSet"
                },
                "outgoingDdi": {
                    "$ref": "#/definitions/Ddi"
                },
                "status": {
                    "description": "Registration status",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegistrationStatus"
                    }
                }
            }
        },
        "RetailAccount-status": {
            "type": "object",
            "required": [
                "name",
                "directConnectivity",
                "description",
                "company",
                "rtpEncryption",
                "multiContact"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "domainName": {
                    "description": "Registration domain",
                    "type": "string"
                },
                "directConnectivity": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "status": {
                    "description": "Registration status",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegistrationStatus"
                    }
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "rtpEncryption": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "multiContact": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                }
            }
        },
        "RoutingPattern": {
            "type": "object",
            "required": [
                "prefix"
            ],
            "properties": {
                "prefix": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/RoutingPattern_Name"
                },
                "description": {
                    "$ref": "#/definitions/RoutingPattern_Description"
                }
            }
        },
        "RoutingPattern-collection": {
            "type": "object",
            "required": [
                "prefix"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "prefix": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "$ref": "#/definitions/RoutingPattern_Name"
                }
            }
        },
        "RoutingPattern-detailed": {
            "type": "object",
            "required": [
                "prefix"
            ],
            "properties": {
                "prefix": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/RoutingPattern_Name"
                },
                "description": {
                    "$ref": "#/definitions/RoutingPattern_Description"
                }
            }
        },
        "RoutingPatternGroup": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "RoutingPatternGroup-collection": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "patternIds": {
                    "description": "Binded routing patterns",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "RoutingPatternGroup-detailed": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "patternIds": {
                    "description": "Binded routing patterns",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "RoutingPatternGroup-withPatterns": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "patternIds": {
                    "description": "Binded routing patterns",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "RoutingPatternGroupsRelPattern": {
            "type": "object",
            "required": [
                "routingPattern",
                "routingPatternGroup"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "routingPattern": {
                    "description": "",
                    "type": "integer"
                },
                "routingPatternGroup": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "RoutingPatternGroupsRelPattern-detailed": {
            "type": "object",
            "required": [
                "routingPattern",
                "routingPatternGroup"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "routingPattern": {
                    "$ref": "#/definitions/RoutingPattern"
                },
                "routingPatternGroup": {
                    "$ref": "#/definitions/RoutingPatternGroup"
                }
            }
        },
        "RoutingPatternGroupsRelPattern-detailedCollection": {
            "type": "object",
            "required": [
                "routingPattern",
                "routingPatternGroup"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "routingPattern": {
                    "$ref": "#/definitions/RoutingPattern"
                },
                "routingPatternGroup": {
                    "$ref": "#/definitions/RoutingPatternGroup"
                }
            }
        },
        "RoutingPattern_Description": {
            "type": "object",
            "properties": {
                "en": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "es": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "ca": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "it": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "RoutingPattern_Name": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "es": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "ca": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "it": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "RoutingTag": {
            "type": "object",
            "required": [
                "name",
                "tag"
            ],
            "properties": {
                "name": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "tag": {
                    "maxLength": 15,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "RoutingTag-collection": {
            "type": "object",
            "required": [
                "name",
                "tag"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "tag": {
                    "maxLength": 15,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "RoutingTag-detailed": {
            "type": "object",
            "required": [
                "name",
                "tag"
            ],
            "properties": {
                "name": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "tag": {
                    "maxLength": 15,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "Service": {
            "type": "object",
            "required": [
                "iden",
                "defaultCode",
                "extraArgs"
            ],
            "properties": {
                "iden": {
                    "default": "",
                    "maxLength": 50,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "defaultCode": {
                    "maxLength": 3,
                    "description": "",
                    "type": "string"
                },
                "extraArgs": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/Service_Name"
                },
                "description": {
                    "$ref": "#/definitions/Service_Description"
                }
            }
        },
        "Service-collection": {
            "type": "object",
            "required": [
                "iden",
                "defaultCode",
                "extraArgs"
            ],
            "properties": {
                "iden": {
                    "default": "",
                    "maxLength": 50,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "defaultCode": {
                    "maxLength": 3,
                    "description": "",
                    "type": "string"
                },
                "extraArgs": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "name": {
                    "$ref": "#/definitions/Service_Name"
                },
                "description": {
                    "$ref": "#/definitions/Service_Description"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "Service-detailed": {
            "type": "object",
            "required": [
                "iden",
                "defaultCode",
                "extraArgs"
            ],
            "properties": {
                "iden": {
                    "default": "",
                    "maxLength": 50,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "defaultCode": {
                    "maxLength": 3,
                    "description": "",
                    "type": "string"
                },
                "extraArgs": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/Service_Name"
                },
                "description": {
                    "$ref": "#/definitions/Service_Description"
                }
            }
        },
        "Service_Description": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "default": "",
                    "maxLength": 255,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "es": {
                    "default": "",
                    "maxLength": 255,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "ca": {
                    "default": "",
                    "maxLength": 255,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "it": {
                    "default": "",
                    "maxLength": 255,
                    "description": "",
                    "example": "",
                    "type": "string"
                }
            }
        },
        "Service_Name": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "default": "",
                    "maxLength": 50,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "es": {
                    "default": "",
                    "maxLength": 50,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "ca": {
                    "default": "",
                    "maxLength": 50,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "it": {
                    "default": "",
                    "maxLength": 50,
                    "description": "",
                    "example": "",
                    "type": "string"
                }
            }
        },
        "SpecialNumber": {
            "type": "object",
            "required": [
                "number",
                "disableCDR",
                "country"
            ],
            "properties": {
                "number": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "disableCDR": {
                    "default": 1,
                    "minimum": 0,
                    "description": "",
                    "example": "1",
                    "type": "integer"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "country": {
                    "description": "",
                    "type": "integer"
                },
                "global": {
                    "readOnly": true,
                    "description": "Global Special Number",
                    "type": "boolean"
                }
            }
        },
        "SpecialNumber-collection": {
            "type": "object",
            "required": [
                "number",
                "disableCDR",
                "country"
            ],
            "properties": {
                "number": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "disableCDR": {
                    "default": 1,
                    "minimum": 0,
                    "description": "",
                    "example": "1",
                    "type": "integer"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "country": {
                    "description": "",
                    "type": "integer"
                },
                "global": {
                    "readOnly": true,
                    "description": "Global Special Number",
                    "type": "boolean"
                }
            }
        },
        "SpecialNumber-detailed": {
            "type": "object",
            "required": [
                "number",
                "disableCDR",
                "country"
            ],
            "properties": {
                "number": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "disableCDR": {
                    "default": 1,
                    "minimum": 0,
                    "description": "",
                    "example": "1",
                    "type": "integer"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "country": {
                    "$ref": "#/definitions/Country"
                },
                "global": {
                    "readOnly": true,
                    "description": "Global Special Number",
                    "type": "boolean"
                }
            }
        },
        "Terminal": {
            "type": "object",
            "required": [
                "name",
                "disallow",
                "allowAudio",
                "directMediaMethod",
                "password",
                "t38Passthrough",
                "rtpEncryption",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "disallow": {
                    "default": "all",
                    "maxLength": 200,
                    "description": "",
                    "example": "all",
                    "type": "string"
                },
                "allowAudio": {
                    "default": "alaw",
                    "maxLength": 200,
                    "description": "",
                    "example": "alaw",
                    "type": "string"
                },
                "allowVideo": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "directMediaMethod": {
                    "default": "update",
                    "enum": [
                        "update",
                        "invite",
                        "reinvite"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "update",
                    "type": "string"
                },
                "password": {
                    "default": "",
                    "maxLength": 25,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "mac": {
                    "maxLength": 12,
                    "description": "",
                    "type": "string"
                },
                "lastProvisionDate": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "t38Passthrough": {
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "no",
                    "type": "string"
                },
                "rtpEncryption": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Terminal-collection": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "mac": {
                    "maxLength": 12,
                    "description": "",
                    "type": "string"
                },
                "lastProvisionDate": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "domain": {
                    "description": "",
                    "type": "integer"
                },
                "domainName": {
                    "description": "Registration domain",
                    "type": "string"
                },
                "status": {
                    "description": "Registration status",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegistrationStatus"
                    }
                }
            }
        },
        "Terminal-status": {
            "type": "object",
            "required": [
                "name",
                "company"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "domainName": {
                    "description": "Registration domain",
                    "type": "string"
                },
                "status": {
                    "description": "Registration status",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegistrationStatus"
                    }
                },
                "company": {
                    "$ref": "#/definitions/Company"
                }
            }
        },
        "Timezone": {
            "type": "object",
            "required": [
                "tz"
            ],
            "properties": {
                "tz": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "comment": {
                    "default": "",
                    "maxLength": 150,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "label": {
                    "$ref": "#/definitions/Timezone_Label"
                },
                "country": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Timezone-collection": {
            "type": "object",
            "required": [
                "tz"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "tz": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Timezone-detailed": {
            "type": "object",
            "required": [
                "tz"
            ],
            "properties": {
                "tz": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "comment": {
                    "default": "",
                    "maxLength": 150,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "label": {
                    "$ref": "#/definitions/Timezone_Label"
                },
                "country": {
                    "$ref": "#/definitions/Country"
                }
            }
        },
        "Timezone_Label": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "default": "",
                    "maxLength": 20,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "es": {
                    "default": "",
                    "maxLength": 20,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "ca": {
                    "default": "",
                    "maxLength": 20,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "it": {
                    "default": "",
                    "maxLength": 20,
                    "description": "",
                    "example": "",
                    "type": "string"
                }
            }
        },
        "Token": {
            "type": "object",
            "properties": {
                "token": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "TransformationRule": {
            "type": "object",
            "required": [
                "type",
                "description",
                "transformationRuleSet"
            ],
            "properties": {
                "type": {
                    "enum": [
                        "callerin",
                        "calleein",
                        "callerout",
                        "calleeout"
                    ],
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "maxLength": 64,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "priority": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "matchExpr": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "replaceExpr": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "transformationRuleSet": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "TransformationRule-collection": {
            "type": "object",
            "required": [
                "type",
                "description"
            ],
            "properties": {
                "type": {
                    "enum": [
                        "callerin",
                        "calleein",
                        "callerout",
                        "calleeout"
                    ],
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "maxLength": 64,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "priority": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "matchExpr": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "replaceExpr": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "TransformationRule-detailed": {
            "type": "object",
            "required": [
                "type",
                "description",
                "transformationRuleSet"
            ],
            "properties": {
                "type": {
                    "enum": [
                        "callerin",
                        "calleein",
                        "callerout",
                        "calleeout"
                    ],
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "maxLength": 64,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "priority": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "matchExpr": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "replaceExpr": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "transformationRuleSet": {
                    "$ref": "#/definitions/TransformationRuleSet"
                }
            }
        },
        "TransformationRuleSet": {
            "type": "object",
            "properties": {
                "description": {
                    "maxLength": 250,
                    "description": "",
                    "type": "string"
                },
                "internationalCode": {
                    "default": "00",
                    "maxLength": 10,
                    "description": "",
                    "example": "00",
                    "type": "string"
                },
                "trunkPrefix": {
                    "default": "",
                    "maxLength": 5,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "areaCode": {
                    "default": "",
                    "maxLength": 5,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "nationalLen": {
                    "default": 9,
                    "minimum": 0,
                    "description": "",
                    "example": "9",
                    "type": "integer"
                },
                "generateRules": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/TransformationRuleSet_Name"
                },
                "country": {
                    "description": "",
                    "type": "integer"
                },
                "editable": {
                    "description": "",
                    "type": "boolean"
                }
            }
        },
        "TransformationRuleSet-collection": {
            "type": "object",
            "properties": {
                "description": {
                    "maxLength": 250,
                    "description": "",
                    "type": "string"
                },
                "internationalCode": {
                    "default": "00",
                    "maxLength": 10,
                    "description": "",
                    "example": "00",
                    "type": "string"
                },
                "trunkPrefix": {
                    "default": "",
                    "maxLength": 5,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "areaCode": {
                    "default": "",
                    "maxLength": 5,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "nationalLen": {
                    "default": 9,
                    "minimum": 0,
                    "description": "",
                    "example": "9",
                    "type": "integer"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/TransformationRuleSet_Name"
                },
                "editable": {
                    "description": "",
                    "type": "boolean"
                }
            }
        },
        "TransformationRuleSet-detailed": {
            "type": "object",
            "properties": {
                "description": {
                    "maxLength": 250,
                    "description": "",
                    "type": "string"
                },
                "internationalCode": {
                    "default": "00",
                    "maxLength": 10,
                    "description": "",
                    "example": "00",
                    "type": "string"
                },
                "trunkPrefix": {
                    "default": "",
                    "maxLength": 5,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "areaCode": {
                    "default": "",
                    "maxLength": 5,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "nationalLen": {
                    "default": 9,
                    "minimum": 0,
                    "description": "",
                    "example": "9",
                    "type": "integer"
                },
                "generateRules": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "$ref": "#/definitions/TransformationRuleSet_Name"
                },
                "country": {
                    "$ref": "#/definitions/Country"
                },
                "editable": {
                    "description": "",
                    "type": "boolean"
                }
            }
        },
        "TransformationRuleSet_Name": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "es": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "ca": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "it": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Trusted": {
            "type": "object",
            "properties": {
                "srcIp": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "proto": {
                    "maxLength": 4,
                    "description": "",
                    "type": "string"
                },
                "fromPattern": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "ruriPattern": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "tag": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "priority": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "integer"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "priority",
                "company"
            ]
        },
        "Trusted-collection": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "srcIp": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Trusted-detailed": {
            "type": "object",
            "properties": {
                "srcIp": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "proto": {
                    "maxLength": 4,
                    "description": "",
                    "type": "string"
                },
                "fromPattern": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "ruriPattern": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "tag": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "priority": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "integer"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "$ref": "#/definitions/Company"
                }
            },
            "required": [
                "priority",
                "company"
            ]
        },
        "User": {
            "type": "object",
            "required": [
                "name",
                "lastname",
                "doNotDisturb",
                "isBoss",
                "active",
                "maxCalls",
                "externalIpCalls",
                "rejectCallMethod",
                "multiContact",
                "gsQRCode",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "lastname": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "email": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "pass": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "doNotDisturb": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "isBoss": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "active": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "maxCalls": {
                    "default": 0,
                    "minimum": 0,
                    "description": "",
                    "example": "0",
                    "type": "integer"
                },
                "externalIpCalls": {
                    "default": "0",
                    "enum": [
                        "0",
                        "1",
                        "2",
                        "3"
                    ],
                    "maxLength": 1,
                    "description": "",
                    "example": "0",
                    "type": "string"
                },
                "rejectCallMethod": {
                    "default": "rfc",
                    "enum": [
                        "rfc",
                        "486",
                        "600"
                    ],
                    "maxLength": 3,
                    "description": "",
                    "example": "rfc",
                    "type": "string"
                },
                "multiContact": {
                    "default": 1,
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "gsQRCode": {
                    "default": 0,
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "bossAssistant": {
                    "description": "",
                    "type": "integer"
                },
                "bossAssistantWhiteList": {
                    "description": "",
                    "type": "integer"
                },
                "transformationRuleSet": {
                    "description": "",
                    "type": "integer"
                },
                "language": {
                    "description": "",
                    "type": "integer"
                },
                "terminal": {
                    "description": "",
                    "type": "integer"
                },
                "extension": {
                    "description": "",
                    "type": "integer"
                },
                "timezone": {
                    "description": "",
                    "type": "integer"
                },
                "outgoingDdi": {
                    "description": "",
                    "type": "integer"
                },
                "outgoingDdiRule": {
                    "description": "",
                    "type": "integer"
                },
                "location": {
                    "description": "",
                    "type": "integer"
                },
                "oldPass": {
                    "description": "required in order to update user password",
                    "type": "string"
                }
            }
        },
        "User-collection": {
            "type": "object",
            "required": [
                "name",
                "lastname",
                "company"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "lastname": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "terminal": {
                    "description": "",
                    "type": "integer"
                },
                "extension": {
                    "description": "",
                    "type": "integer"
                },
                "outgoingDdi": {
                    "description": "",
                    "type": "integer"
                },
                "status": {
                    "description": "Registration status",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegistrationStatus"
                    }
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "email": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "location": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "UsersAddress": {
            "type": "object",
            "required": [
                "sourceAddress",
                "company"
            ],
            "properties": {
                "sourceAddress": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "UsersAddress-collection": {
            "type": "object",
            "required": [
                "sourceAddress",
                "company"
            ],
            "properties": {
                "sourceAddress": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "UsersAddress-detailed": {
            "type": "object",
            "required": [
                "sourceAddress",
                "company"
            ],
            "properties": {
                "sourceAddress": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "company": {
                    "$ref": "#/definitions/Company"
                }
            }
        },
        "UsersMassImport": {
            "type": "object",
            "properties": {
                "success": {
                    "description": "",
                    "type": "boolean"
                },
                "errorMsg": {
                    "description": "",
                    "type": "string"
                },
                "failed": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "WebPortal": {
            "type": "object",
            "required": [
                "url",
                "urlType"
            ],
            "properties": {
                "url": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "klearTheme": {
                    "default": "",
                    "maxLength": 200,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "urlType": {
                    "enum": [
                        "god",
                        "brand",
                        "admin",
                        "user"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "default": "",
                    "maxLength": 200,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "userTheme": {
                    "default": "",
                    "maxLength": 200,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "logo": {
                    "$ref": "#/definitions/WebPortal_Logo"
                }
            }
        },
        "WebPortal-collection": {
            "type": "object",
            "required": [
                "url",
                "urlType"
            ],
            "properties": {
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "url": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "default": "",
                    "maxLength": 200,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "urlType": {
                    "enum": [
                        "god",
                        "brand",
                        "admin",
                        "user"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "logo": {
                    "$ref": "#/definitions/WebPortal_Logo"
                }
            }
        },
        "WebPortal-detailed": {
            "type": "object",
            "required": [
                "url",
                "urlType"
            ],
            "properties": {
                "url": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "klearTheme": {
                    "default": "",
                    "maxLength": 200,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "urlType": {
                    "enum": [
                        "god",
                        "brand",
                        "admin",
                        "user"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "default": "",
                    "maxLength": 200,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "userTheme": {
                    "default": "",
                    "maxLength": 200,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer",
                    "readOnly": true
                },
                "logo": {
                    "$ref": "#/definitions/WebPortal_Logo"
                }
            }
        },
        "WebPortal_Logo": {
            "type": "object",
            "properties": {
                "fileSize": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "mimeType": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "baseName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                }
            }
        }
    }
}
