########################################
## Raw
########################################
Ivoz\Provider\Domain\Model\BillableCall\BillableCall:
  itemOperations:
    get: ~
    put_billable_call_rate_by_callid:
      method: 'PUT'
      depth: 0
      path: '/billable_calls/{callid}/rate'
      route_name: 'put_billable_call_rate_by_callid'
      swagger_context:
        consumes:
        - 'application/json'
        produces:
        - 'application/json'
        tags:
        - Provider
        parameters:
        - name: callid
          in: path
          type: string
          required: true
          description: 'callid'
        - name: rating
          in: body
          required: true
          description: The rating values
          schema:
            $ref: "#/definitions/BillableCall-rating"
  collectionOperations:
    get:
      swagger_context:
        produces:
        - 'application/json'
        - 'application/ld+json'
        - 'text/csv'
  attributes:
    pagination_client_enabled: true
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'

Ivoz\Provider\Domain\Model\Ddi\Ddi:
  itemOperations: []
  collectionOperations: []
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'

Ivoz\Provider\Domain\Model\DdiProvider\DdiProvider:
  itemOperations: []
  collectionOperations: []
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'

Ivoz\Provider\Domain\Model\BannedAddress\BannedAddress:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      ROLE_SUPER_ADMIN:
        brand:
          isNull: ~
    write_access_control:
      ROLE_SUPER_ADMIN:
        raw: "FALSE"

Ivoz\Provider\Domain\Model\Brand\Brand:
  itemOperations:
    get:
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\Brand\BrandDto::CONTEXT_DETAILED
    put:
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\Brand\BrandDto::CONTEXT_WITH_FEATURES
    delete: ~
  collectionOperations:
    get: ~
    post:
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\Brand\BrandDto::CONTEXT_WITH_FEATURES
      depth: 1
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    normalization_context:
      groups: [
        !php/const Ivoz\Provider\Domain\Model\Brand\BrandDto::CONTEXT_WITH_FEATURES
      ]

Ivoz\Provider\Domain\Model\Brand\Invoice:
Ivoz\Provider\Domain\Model\Brand\Logo:
Ivoz\Provider\Domain\Model\Administrator\Administrator:
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      ROLE_SUPER_ADMIN:
        id:
          neq: "0"
        internal:
          neq: "1"
        company:
          isNull: ~
    write_access_control:
      ROLE_SUPER_ADMIN:
        raw: "id > 0 or id === null"

Ivoz\Provider\Domain\Model\Currency\Currency:
  itemOperations: []
  collectionOperations:
    get: ~
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    write_access_control:
      ROLE_SUPER_ADMIN:
        raw: "FALSE"
Ivoz\Provider\Domain\Model\Currency\Name: ~

Ivoz\Provider\Domain\Model\AdministratorRelPublicEntity\AdministratorRelPublicEntity:
  itemOperations:
    get:
      depth: 1
    put: ~
  collectionOperations:
    get:
      depth: 1
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles'
    read_access_control:
      ROLE_SUPER_ADMIN:
        inherited:
          administrator: 'Ivoz\Provider\Domain\Model\Administrator\Administrator'
          publicEntity:  'Ivoz\Provider\Domain\Model\PublicEntity\PublicEntity'

Ivoz\Provider\Domain\Model\ApplicationServer\ApplicationServer:
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
Ivoz\Provider\Domain\Model\BrandService\BrandService:
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'

Ivoz\Provider\Domain\Model\WebPortal\WebPortal:
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
Ivoz\Provider\Domain\Model\WebPortal\Logo: ~

Ivoz\Provider\Domain\Model\Carrier\Carrier:
  itemOperations: []
  collectionOperations: []
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'

Ivoz\Provider\Domain\Model\Company\Company:
  itemOperations: []
  collectionOperations: []
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'

Ivoz\Provider\Domain\Model\Country\Name:
Ivoz\Provider\Domain\Model\Country\Zone:
Ivoz\Provider\Domain\Model\Country\Country:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    pagination_client_enabled: true
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'

Ivoz\Provider\Domain\Model\Destination\Destination:
  itemOperations: []
  collectionOperations: []
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'

Ivoz\Provider\Domain\Model\Domain\Domain:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'

Ivoz\Provider\Domain\Model\Feature\Feature:
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
Ivoz\Provider\Domain\Model\Feature\Name: ~

Ivoz\Provider\Domain\Model\FeaturesRelBrand\FeaturesRelBrand:
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
Ivoz\Provider\Domain\Model\Language\Language:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
Ivoz\Provider\Domain\Model\Language\Name: ~

Ivoz\Provider\Domain\Model\Invoice\Invoice:
  itemOperations: []
  collectionOperations: []
Ivoz\Provider\Domain\Model\Invoice\Pdf: ~

Ivoz\Provider\Domain\Model\MediaRelaySet\MediaRelaySet:
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    write_access_control:
      ROLE_SUPER_ADMIN:
        raw: "id !== 0"
Ivoz\Provider\Domain\Model\ProxyTrunk\ProxyTrunk:
  itemOperations:
    get: ~
    put: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'

Ivoz\Provider\Domain\Model\ProxyTrunksRelBrand\ProxyTrunksRelBrand:
  itemOperations:
    get:
      depth: 1
    put: ~
    delete: ~
  collectionOperations:
    get:
      depth: 1
    post: ~
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'

Ivoz\Provider\Domain\Model\ProxyUser\ProxyUser:
  itemOperations:
    get: ~
    put: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'

Ivoz\Provider\Domain\Model\PublicEntity\PublicEntity:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles'
    read_access_control:
      ROLE_SUPER_ADMIN:
        platform:
          eq: 1
Ivoz\Provider\Domain\Model\PublicEntity\Name: ~

Ivoz\Provider\Domain\Model\RatingPlanGroup\RatingPlanGroup:
  itemOperations: []
  collectionOperations: []
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'

Ivoz\Provider\Domain\Model\Service\Service:
  itemOperations:
    get: ~
    put: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
Ivoz\Provider\Domain\Model\Service\Name: ~
Ivoz\Provider\Domain\Model\Service\Description: ~

Ivoz\Provider\Domain\Model\SpecialNumber\SpecialNumber:
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      ROLE_SUPER_ADMIN:
        brand:
          isNull: ~

Ivoz\Provider\Domain\Model\TerminalManufacturer\TerminalManufacturer:
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
Ivoz\Provider\Domain\Model\TerminalModel\TerminalModel:
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'

Ivoz\Provider\Domain\Model\Timezone\Timezone:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    pagination_client_enabled: true
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
Ivoz\Provider\Domain\Model\Timezone\Label: ~

Ivoz\Provider\Domain\Model\InvoiceTemplate\InvoiceTemplate:
  attributes:
    access_control: '"ROLE_SUPER_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      ROLE_SUPER_ADMIN:
        brand:
          isNull: ~
