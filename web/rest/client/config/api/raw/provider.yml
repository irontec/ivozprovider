########################################
## Raw
########################################
Ivoz\Provider\Domain\Model\BillableCall\BillableCall:
  # custom normalizer: Service\BillableCallNormalizer
  itemOperations:
    get: ~
  collectionOperations:
    get:
      swagger_context:
        produces:
          - 'application/json'
          - 'application/ld+json'
          - 'text/csv'
  attributes:
    pagination_client_enabled: true
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    write_access_control:
      ROLE_COMPANY_ADMIN:
        raw: 'FALSE'
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\Calendar\Calendar:
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.isVpbxAdmin()
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\CalendarPeriod\CalendarPeriod:
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      ROLE_COMPANY_ADMIN:
        inherited:
          calendar: 'Ivoz\Provider\Domain\Model\Calendar\Calendar'
    write_access_control:
      ROLE_COMPANY_ADMIN:
        - and:
          - inherited:
              calendar: 'Ivoz\Provider\Domain\Model\Calendar\Calendar'
        - or:
          - inheritedOrNull:
              voicemail: 'Ivoz\Provider\Domain\Model\Voicemail\Voicemail'
        - or:
          - inheritedOrNull:
              extension: 'Ivoz\Provider\Domain\Model\Extension\Extension'
        - or:
          - inheritedOrNull:
              locution: 'Ivoz\Provider\Domain\Model\Locution\Locution'
    swagger_context:
      required:
      - calendar

Ivoz\Provider\Domain\Model\CalendarPeriodsRelSchedule\CalendarPeriodsRelSchedule:
  collectionOperations:
    post:
      depth: 1
    get:
      depth: 1
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\CalendarPeriodsRelSchedule\CalendarPeriodsRelScheduleDto::CONTEXT_DETAILED_COLLECTION
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\CalendarPeriodsRelSchedule\CalendarPeriodsRelScheduleDto::CONTEXT_DETAILED_COLLECTION
        ]
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      ROLE_COMPANY_ADMIN:
        inherited:
          schedule: 'Ivoz\Provider\Domain\Model\Schedule\Schedule'
    write_access_control:
      inherited:
        calendarPeriod: 'Ivoz\Provider\Domain\Model\CalendarPeriod\CalendarPeriod'
        schedule: 'Ivoz\Provider\Domain\Model\Schedule\Schedule'
    swagger_context:
      required:
      - calendarPeriod
      - schedule

Ivoz\Provider\Domain\Model\CallAcl\CallAcl:
  itemOperations:
    get:
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\CallAcl\CallAclDto::CONTEXT_WITH_MATCHLIST
    put: ~
    delete: ~
  collectionOperations: ~
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.isVpbxAdmin()
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\CallAclRelMatchList\CallAclRelMatchList:
  collectionOperations:
    post: ~
    get:
      depth: 1
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\CallAclRelMatchList\CallAclRelMatchListDto::CONTEXT_DETAILED_COLLECTION
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\CallAclRelMatchList\CallAclRelMatchListDto::CONTEXT_DETAILED_COLLECTION
        ]
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      inherited:
        callAcl: 'Ivoz\Provider\Domain\Model\CallAcl\CallAcl'
    write_access_control:
      inherited:
        callAcl: 'Ivoz\Provider\Domain\Model\CallAcl\CallAcl'
        matchList: 'Ivoz\Provider\Domain\Model\MatchList\MatchList'
    swagger_context:
      required:
      - callAcl
      - matchList

Ivoz\Provider\Domain\Model\CallCsvScheduler\CallCsvScheduler:
  properties:
    lastExecution:
      attributes:
        swagger_context:
          readOnly: true
    lastExecutionError:
      attributes:
        swagger_context:
          readOnly: true
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
        brand:
          isNull: ~
    write_access_control:
      ROLE_COMPANY_ADMIN:
      - and:
        - company:
            eq: "user.getCompany().getId()"
        - carrier:
            isNull: ~
      - or:
        - inheritedOrNull:
            callCsvNotificationTemplate: 'Ivoz\Provider\Domain\Model\NotificationTemplate\NotificationTemplate'
      - or:
        - inheritedOrNull:
            ddi: 'Ivoz\Provider\Domain\Model\Ddi\Ddi'
      - or:
        - inheritedOrNull:
            retailAccount: 'Ivoz\Provider\Domain\Model\RetailAccount\RetailAccount'
      - or:
        - inheritedOrNull:
            residentialDevice: 'Ivoz\Provider\Domain\Model\ResidentialDevice\ResidentialDevice'
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\CallCsvReport\CallCsvReport:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    write_access_control:
      ROLE_COMPANY_ADMIN:
        raw: 'FALSE'
    swagger_context:
      required:
      - company
Ivoz\Provider\Domain\Model\CallCsvReport\Csv: ~

Ivoz\Provider\Domain\Model\CallForwardSetting\CallForwardSetting:
  itemOperations:
    get: ~
    put: ~
    delete: ~

  collectionOperations:
    get: ~
    post: ~
  attributes:
    access_control: '("ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod()))'
    read_access_control:
      ROLE_COMPANY_ADMIN:
      - or:
        - inherited:
            user: 'Ivoz\Provider\Domain\Model\User\User'
        - inherited:
            residentialDevice: 'Ivoz\Provider\Domain\Model\ResidentialDevice\ResidentialDevice'
        - inherited:
            friend: 'Ivoz\Provider\Domain\Model\Friend\Friend'
        - inherited:
            retailAccount: 'Ivoz\Provider\Domain\Model\RetailAccount\RetailAccount'
    write_access_control:
      ROLE_COMPANY_ADMIN:
      - or:
        - inheritedOrNull:
            user: 'Ivoz\Provider\Domain\Model\User\User'
      - or:
        - inheritedOrNull:
            residentialDevice: 'Ivoz\Provider\Domain\Model\ResidentialDevice\ResidentialDevice'
      - or:
        - inheritedOrNull:
            friend: 'Ivoz\Provider\Domain\Model\Friend\Friend'
      - or:
        - inheritedOrNull:
            retailAccount: 'Ivoz\Provider\Domain\Model\RetailAccount\RetailAccount'
      - or:
        - inheritedOrNull:
            extension: 'Ivoz\Provider\Domain\Model\Extension\Extension'
      - or:
        - inheritedOrNull:
            voicemail: 'Ivoz\Provider\Domain\Model\Voicemail\Voicemail'

Ivoz\Provider\Domain\Model\Company\Company:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  properties:
    name:
      attributes:
        swagger_context:
          readOnly: true
    domainUsers:
      attributes:
        swagger_context:
          readOnly: true
    nif:
      attributes:
        swagger_context:
          readOnly: true
    onDemandRecordCode:
      attributes:
        swagger_context:
          readOnly: true
    balance:
      attributes:
        swagger_context:
          readOnly: true
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      ROLE_COMPANY_ADMIN:
        id:
          eq: "user.getCompany().getId()"
    write_access_control:
      ROLE_COMPANY_ADMIN:
      - and:
        - id:
            eq: "user.getCompany().getId()"
      - or:
        - inheritedOrNull:
            outgoingDdi: 'Ivoz\Provider\Domain\Model\Ddi\Ddi'
      - or:
        - inheritedOrNull:
            outgoingDdiRule: 'Ivoz\Provider\Domain\Model\OutgoingDdiRule\OutgoingDdiRule'

Ivoz\Provider\Domain\Model\CompanyService\CompanyService:
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.isVpbxAdmin()
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\ConditionalRoute\ConditionalRoute:
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.isVpbxAdmin()
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    write_access_control:
      ROLE_COMPANY_ADMIN:
      - and:
        - company:
            eq: "user.getCompany().getId()"
      - or:
        - inheritedOrNull:
            extension: 'Ivoz\Provider\Domain\Model\Extension\Extension'
      - or:
        - inheritedOrNull:
            huntGroup: 'Ivoz\Provider\Domain\Model\HuntGroup\HuntGroup'
      - or:
        - inheritedOrNull:
            user: 'Ivoz\Provider\Domain\Model\User\User'
      - or:
        - inheritedOrNull:
            queue: 'Ivoz\Provider\Domain\Model\Queue\Queue'
      - or:
        - inheritedOrNull:
            locution: 'Ivoz\Provider\Domain\Model\Locution\Locution'
      - or:
        - inheritedOrNull:
            conferenceRoom: 'Ivoz\Provider\Domain\Model\ConferenceRoom\ConferenceRoom'
      - or:
        - inheritedOrNull:
            ivr: 'Ivoz\Provider\Domain\Model\Ivr\Ivr'
      - or:
        - inheritedOrNull:
            voicemail: 'Ivoz\Provider\Domain\Model\Voicemail\Voicemail'
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\ConditionalRoutesCondition\ConditionalRoutesCondition:
  itemOperations:
    get:
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\ConditionalRoutesCondition\ConditionalRoutesConditionDto::CONTEXT_DETAILED
    put:
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\ConditionalRoutesCondition\ConditionalRoutesConditionDto::CONTEXT_WITH_INVERSE_RELATIONSHIPS
    delete: ~
  collectionOperations:
    get: ~
    post:
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\ConditionalRoutesCondition\ConditionalRoutesConditionDto::CONTEXT_WITH_INVERSE_RELATIONSHIPS
      depth: 1
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    normalization_context:
      groups: [
        !php/const Ivoz\Provider\Domain\Model\ConditionalRoutesCondition\ConditionalRoutesConditionDto::CONTEXT_WITH_INVERSE_RELATIONSHIPS
      ]
    read_access_control:
      inherited:
        conditionalRoute: 'Ivoz\Provider\Domain\Model\ConditionalRoute\ConditionalRoute'
    write_access_control:
    - and:
      - inherited:
          conditionalRoute: 'Ivoz\Provider\Domain\Model\ConditionalRoute\ConditionalRoute'
    - or:
      - inheritedOrNull:
          extension: 'Ivoz\Provider\Domain\Model\Extension\Extension'
    - or:
      - inheritedOrNull:
          huntGroup: 'Ivoz\Provider\Domain\Model\HuntGroup\HuntGroup'
    - or:
      - inheritedOrNull:
          user: 'Ivoz\Provider\Domain\Model\User\User'
    - or:
      - inheritedOrNull:
          queue: 'Ivoz\Provider\Domain\Model\Queue\Queue'
    - or:
      - inheritedOrNull:
          locution: 'Ivoz\Provider\Domain\Model\Locution\Locution'
    - or:
      - inheritedOrNull:
          conferenceRoom: 'Ivoz\Provider\Domain\Model\ConferenceRoom\ConferenceRoom'
    swagger_context:
      required:
      - conditionalRoute

Ivoz\Provider\Domain\Model\ConditionalRoutesConditionsRelMatchlist\ConditionalRoutesConditionsRelMatchlist:
  itemOperations:
    get: ~
    delete: ~
  collectionOperations:
    get:
      depth: 1
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\ConditionalRoutesConditionsRelMatchlist\ConditionalRoutesConditionsRelMatchlistDto::CONTEXT_DETAILED_COLLECTION
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\ConditionalRoutesConditionsRelMatchlist\ConditionalRoutesConditionsRelMatchlistDto::CONTEXT_DETAILED_COLLECTION
        ]
    post:
      depth: 1
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      inherited:
        matchlist: 'Ivoz\Provider\Domain\Model\MatchList\MatchList'
    write_access_control:
      inherited:
        matchlist: 'Ivoz\Provider\Domain\Model\MatchList\MatchList'
        condition: 'Ivoz\Provider\Domain\Model\ConditionalRoutesCondition\ConditionalRoutesCondition'
    swagger_context:
      required:
      - matchlist
      - condition

Ivoz\Provider\Domain\Model\ConditionalRoutesConditionsRelSchedule\ConditionalRoutesConditionsRelSchedule:
  itemOperations:
    get: ~
    delete: ~
  collectionOperations:
    get:
      depth: 1
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\ConditionalRoutesConditionsRelSchedule\ConditionalRoutesConditionsRelScheduleDto::CONTEXT_DETAILED_COLLECTION
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\ConditionalRoutesConditionsRelSchedule\ConditionalRoutesConditionsRelScheduleDto::CONTEXT_DETAILED_COLLECTION
        ]
    post:
      depth: 1
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      inherited:
        schedule: 'Ivoz\Provider\Domain\Model\Schedule\Schedule'
    write_access_control:
      inherited:
        condition: 'Ivoz\Provider\Domain\Model\ConditionalRoutesCondition\ConditionalRoutesCondition'
        schedule: 'Ivoz\Provider\Domain\Model\Schedule\Schedule'
    swagger_context:
      required:
      - condition
      - schedule

Ivoz\Provider\Domain\Model\ConditionalRoutesConditionsRelCalendar\ConditionalRoutesConditionsRelCalendar:
  itemOperations:
    get: ~
    delete: ~
  collectionOperations:
    get:
      depth: 1
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\ConditionalRoutesConditionsRelCalendar\ConditionalRoutesConditionsRelCalendarDto::CONTEXT_DETAILED_COLLECTION
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\ConditionalRoutesConditionsRelCalendar\ConditionalRoutesConditionsRelCalendarDto::CONTEXT_DETAILED_COLLECTION
        ]
    post:
      depth: 1
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      inherited:
        calendar: 'Ivoz\Provider\Domain\Model\Calendar\Calendar'
    write_access_control:
      inherited:
        condition: 'Ivoz\Provider\Domain\Model\ConditionalRoutesCondition\ConditionalRoutesCondition'
        calendar: 'Ivoz\Provider\Domain\Model\Calendar\Calendar'
    swagger_context:
      required:
      - condition
      - calendar

Ivoz\Provider\Domain\Model\ConditionalRoutesConditionsRelRouteLock\ConditionalRoutesConditionsRelRouteLock:
  itemOperations:
    get: ~
    delete: ~
  collectionOperations:
    get:
      depth: 1
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\ConditionalRoutesConditionsRelRouteLock\ConditionalRoutesConditionsRelRouteLockDto::CONTEXT_DETAILED_COLLECTION
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\ConditionalRoutesConditionsRelRouteLock\ConditionalRoutesConditionsRelRouteLockDto::CONTEXT_DETAILED_COLLECTION
        ]
    post:
      depth: 1
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      inherited:
        routeLock: 'Ivoz\Provider\Domain\Model\RouteLock\RouteLock'
    write_access_control:
      inherited:
        condition: 'Ivoz\Provider\Domain\Model\ConditionalRoutesCondition\ConditionalRoutesCondition'
        routeLock: 'Ivoz\Provider\Domain\Model\RouteLock\RouteLock'
    swagger_context:
      required:
      - condition
      - routeLock

Ivoz\Provider\Domain\Model\ConferenceRoom\ConferenceRoom:
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.isVpbxAdmin()
      && user.companyHasFeature('conferences')
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\Country\Name:
Ivoz\Provider\Domain\Model\Country\Zone:
Ivoz\Provider\Domain\Model\Country\Country:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    pagination_client_enabled: true
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'

Ivoz\Provider\Domain\Model\Ddi\Ddi:
  itemOperations:
    get: ~
    put: ~
  collectionOperations:
    get: ~
  properties:
    ddie164:
      attributes:
        swagger_context:
          readOnly: true
    ddi:
      attributes:
        swagger_context:
          readOnly: true
    country:
      attributes:
        swagger_context:
          readOnly: true
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && (user.isVpbxAdmin() || user.isResidentialAdmin() || user.isRetailAdmin())
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      company:
        eq: "user.getCompany().getId()"
    write_access_control:
      ROLE_COMPANY_ADMIN:
      - and:
        - company:
            eq: "user.getCompany().getId()"
      - or:
        - inheritedOrNull:
            user: 'Ivoz\Provider\Domain\Model\User\User'
      - or:
        - inheritedOrNull:
            ivr: 'Ivoz\Provider\Domain\Model\Ivr\Ivr'
      - or:
        - inheritedOrNull:
            huntGroup: 'Ivoz\Provider\Domain\Model\HuntGroup\HuntGroup'
      - or:
        - inheritedOrNull:
            fax: 'Ivoz\Provider\Domain\Model\Fax\Fax'
      - or:
        - inheritedOrNull:
            conferenceRoom: 'Ivoz\Provider\Domain\Model\ConferenceRoom\ConferenceRoom'
      - or:
        - inheritedOrNull:
            queue: 'Ivoz\Provider\Domain\Model\Queue\Queue'
      - or:
        - inheritedOrNull:
            retailAccount: 'Ivoz\Provider\Domain\Model\RetailAccount\RetailAccount'
      - or:
        - inheritedOrNull:
            residentialDevice: 'Ivoz\Provider\Domain\Model\ResidentialDevice\ResidentialDevice'
      - or:
        - inheritedOrNull:
            conditionalRoute: 'Ivoz\Provider\Domain\Model\ConditionalRoute\ConditionalRoute'
      - or:
        - inheritedOrNull:
            externalCallFilter: 'Ivoz\Provider\Domain\Model\ExternalCallFilter\ExternalCallFilter'
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\Domain\Domain:
  itemOperations: []
  collectionOperations: []
  attributes:
    access_control: 'FALSE'

Ivoz\Provider\Domain\Model\Extension\Extension:
  itemOperations:
    get:
      method: 'GET'
      path: '/extensions/{id}'
      requirements:
        id: '\d+'
    put: ~
    delete: ~
  collectionOperations:
    get: ~
    get_extensions_unassigned:
      method: 'GET'
      path: 'extensions/unassigned'
      route_name: 'get_extensions_unassigned'
      pagination_enabled: false
      swagger_context:
        produces:
          - 'application/json'
        tags:
          - Provider
        parameters:
          - name: _includeId
            in: query
            type: integer
            required: false
            description: 'Ensure certain extension id is included'
          - name: _properties
            in: query
            type: array
            required: false
            items:
              type: string
            collectionFormat: 'multi'
            description: "Allows you to reduce the response to contain only the properties you need"
    post: ~
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.isVpbxAdmin()
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    write_access_control:
      ROLE_COMPANY_ADMIN:
      - and:
        - company:
            eq: "user.getCompany().getId()"
      - or:
        - inheritedOrNull:
            huntGroup: 'Ivoz\Provider\Domain\Model\HuntGroup\HuntGroup'
      - or:
        - inheritedOrNull:
            user: 'Ivoz\Provider\Domain\Model\User\User'
      - or:
        - inheritedOrNull:
            queue: 'Ivoz\Provider\Domain\Model\Queue\Queue'
      - or:
        - inheritedOrNull:
            conditionalRoute: 'Ivoz\Provider\Domain\Model\ConditionalRoute\ConditionalRoute'
      - or:
        - inheritedOrNull:
            ivr: 'Ivoz\Provider\Domain\Model\Ivr\Ivr'
      - or:
        - inheritedOrNull:
            conferenceRoom: 'Ivoz\Provider\Domain\Model\ConferenceRoom\ConferenceRoom'
      - or:
        - inheritedOrNull:
            voicemail: 'Ivoz\Provider\Domain\Model\Voicemail\Voicemail'
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\ExternalCallFilter\ExternalCallFilter:
  itemOperations:
    get:
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\ExternalCallFilter\ExternalCallFilterDto::CONTEXT_DETAILED
    put:
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\ExternalCallFilter\ExternalCallFilterDto::CONTEXT_WITH_INVERSE_RELATIONSHIPS
    delete: ~
  collectionOperations:
    get: ~
    post:
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\ExternalCallFilter\ExternalCallFilterDto::CONTEXT_WITH_INVERSE_RELATIONSHIPS
      depth: 1
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && (user.isVpbxAdmin() || user.isResidentialAdmin())
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    normalization_context:
      groups: [
        !php/const Ivoz\Provider\Domain\Model\ExternalCallFilter\ExternalCallFilterDto::CONTEXT_WITH_INVERSE_RELATIONSHIPS
      ]
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    write_access_control:
      ROLE_COMPANY_ADMIN:
      - and:
        - company:
            eq: "user.getCompany().getId()"
      - or:
        - inheritedOrNull:
            welcomeLocution: 'Ivoz\Provider\Domain\Model\Locution\Locution'
      - or:
        - inheritedOrNull:
            outOfScheduleLocution: 'Ivoz\Provider\Domain\Model\Locution\Locution'
      - or:
        - inheritedOrNull:
            holidayExtension: 'Ivoz\Provider\Domain\Model\Extension\Extension'
      - or:
        - inheritedOrNull:
            outOfScheduleExtension: 'Ivoz\Provider\Domain\Model\Extension\Extension'
      - or:
        - inheritedOrNull:
            holidayVoicemail: 'Ivoz\Provider\Domain\Model\Voicemail\Voicemail'
      - or:
        - inheritedOrNull:
            outOfScheduleVoicemail: 'Ivoz\Provider\Domain\Model\Voicemail\Voicemail'
      - or:
        - inheritedOrNull:
            holidayLocution: 'Ivoz\Provider\Domain\Model\Locution\Locution'
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\ExternalCallFilterBlackList\ExternalCallFilterBlackList:
  collectionOperations:
    get:
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\ExternalCallFilterBlackList\ExternalCallFilterBlackListDto::CONTEXT_DETAILED_COLLECTION
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\ExternalCallFilterBlackList\ExternalCallFilterBlackListDto::CONTEXT_DETAILED_COLLECTION
        ]
      depth: 1
    post:
      depth: 1
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      inherited:
        filter: 'Ivoz\Provider\Domain\Model\ExternalCallFilter\ExternalCallFilter'
    write_access_control:
      inherited:
        filter: 'Ivoz\Provider\Domain\Model\ExternalCallFilter\ExternalCallFilter'
        matchlist: 'Ivoz\Provider\Domain\Model\MatchList\MatchList'
    swagger_context:
      required:
      - filter
      - matchlist

Ivoz\Provider\Domain\Model\ExternalCallFilterRelCalendar\ExternalCallFilterRelCalendar:
  collectionOperations:
    get:
      depth: 1
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\ExternalCallFilterRelCalendar\ExternalCallFilterRelCalendarDto::CONTEXT_DETAILED_COLLECTION
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\ExternalCallFilterRelCalendar\ExternalCallFilterRelCalendarDto::CONTEXT_DETAILED_COLLECTION
        ]
    post:
      depth: 1
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      inherited:
        filter: 'Ivoz\Provider\Domain\Model\ExternalCallFilter\ExternalCallFilter'
    write_access_control:
      inherited:
        filter: 'Ivoz\Provider\Domain\Model\ExternalCallFilter\ExternalCallFilter'
        calendar: 'Ivoz\Provider\Domain\Model\Calendar\Calendar'
    swagger_context:
      required:
      - filter
      - calendar

Ivoz\Provider\Domain\Model\ExternalCallFilterRelSchedule\ExternalCallFilterRelSchedule:
  collectionOperations:
    get:
      depth: 1
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\ExternalCallFilterRelSchedule\ExternalCallFilterRelScheduleDto::CONTEXT_DETAILED_COLLECTION
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\ExternalCallFilterRelSchedule\ExternalCallFilterRelScheduleDto::CONTEXT_DETAILED_COLLECTION
        ]
    post:
      depth: 1
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      inherited:
        filter: 'Ivoz\Provider\Domain\Model\ExternalCallFilter\ExternalCallFilter'
    write_access_control:
      inherited:
        filter: 'Ivoz\Provider\Domain\Model\ExternalCallFilter\ExternalCallFilter'
        schedule: 'Ivoz\Provider\Domain\Model\Schedule\Schedule'
    swagger_context:
      required:
      - filter
      - schedule

Ivoz\Provider\Domain\Model\ExternalCallFilterWhiteList\ExternalCallFilterWhiteList:
  collectionOperations:
    get:
      depth: 1
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\ExternalCallFilterWhiteList\ExternalCallFilterWhiteListDto::CONTEXT_DETAILED_COLLECTION
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\ExternalCallFilterWhiteList\ExternalCallFilterWhiteListDto::CONTEXT_DETAILED_COLLECTION
        ]
    post:
      depth: 1
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      inherited:
        filter: 'Ivoz\Provider\Domain\Model\ExternalCallFilter\ExternalCallFilter'
    write_access_control:
      inherited:
        filter: 'Ivoz\Provider\Domain\Model\ExternalCallFilter\ExternalCallFilter'
        matchlist: 'Ivoz\Provider\Domain\Model\MatchList\MatchList'
    swagger_context:
      required:
      - filter
      - matchlist

Ivoz\Provider\Domain\Model\FaxesInOut\FaxesInOut:
  itemOperations:
    get: ~
    delete: ~
  collectionOperations:
    get: ~
    post: ~
  properties:
    calldate:
      attributes:
        swagger_context:
          readOnly: true
    status:
      attributes:
        swagger_context:
          readOnly: true
    src:
      attributes:
        swagger_context:
          readOnly: true
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      inherited:
        fax: 'Ivoz\Provider\Domain\Model\Fax\Fax'
    write_access_control:
      inherited:
        fax: 'Ivoz\Provider\Domain\Model\Fax\Fax'
      type:
        eq: '"Out"'
    delete_access_control:
      inherited:
        fax: 'Ivoz\Provider\Domain\Model\Fax\Fax'
    swagger_context:
      required:
      - fax
Ivoz\Provider\Domain\Model\FaxesInOut\File: ~

Ivoz\Provider\Domain\Model\Fax\Fax:
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.companyHasFeature('faxes')
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    write_access_control:
      ROLE_COMPANY_ADMIN:
      - and:
        - company:
            eq: "user.getCompany().getId()"
      - or:
        - inheritedOrNull:
            outgoingDdi: 'Ivoz\Provider\Domain\Model\Ddi\Ddi'
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\Feature\Feature:
  itemOperations: []
  collectionOperations: []

Ivoz\Provider\Domain\Model\FeaturesRelCompany\FeaturesRelCompany:
  itemOperations:
    get: ~
  collectionOperations:
    get:
      depth: 1
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\FeaturesRelCompany\FeaturesRelCompanyDto::CONTEXT_DETAILED_COLLECTION
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\FeaturesRelCompany\FeaturesRelCompanyDto::CONTEXT_DETAILED_COLLECTION
        ]
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    write_access_control:
      ROLE_COMPANY_ADMIN:
        raw: 'FALSE'
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\Friend\Friend:
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.isVpbxAdmin()
      && user.companyHasFeature('friends')
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    write_access_control:
    - and:
      - company:
          eq: "user.getCompany().getId()"
    - or:
      - inheritedOrNull:
          interCompany: 'Ivoz\Provider\Domain\Model\Company\Company'
    - or:
      - inheritedOrNull:
          callAcl: 'Ivoz\Provider\Domain\Model\CallAcl\CallAcl'
    - or:
      - inheritedOrNull:
          outgoingDdi: 'Ivoz\Provider\Domain\Model\Ddi\Ddi'
    - or:
      - inheritedOrNull:
          transformationRuleSet: 'Ivoz\Provider\Domain\Model\TransformationRuleSet\TransformationRuleSet'
    swagger_context:
      required:
      - company
  itemOperations:
    get: ~
    get_status_item:
      method: 'GET'
      path: 'friends/{id}/status'
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\Friend\FriendDto::CONTEXT_STATUS
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\Friend\FriendDto::CONTEXT_STATUS
        ]
    put: ~
    delete: ~
  collectionOperations:
    get: ~
    get_status_collection:
      method: 'GET'
      path: 'friends/status'
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\Friend\FriendDto::CONTEXT_STATUS
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\Friend\FriendDto::CONTEXT_STATUS
        ]
    post: ~

Ivoz\Provider\Domain\Model\FriendsPattern\FriendsPattern:
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      inherited:
        friend: 'Ivoz\Provider\Domain\Model\Friend\Friend'
    swagger_context:
      required:
      - friend

Ivoz\Provider\Domain\Model\HolidayDate\HolidayDate:
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      inherited:
        calendar: 'Ivoz\Provider\Domain\Model\Calendar\Calendar'
    write_access_control:
      ROLE_COMPANY_ADMIN:
      - and:
        - inherited:
            calendar: 'Ivoz\Provider\Domain\Model\Calendar\Calendar'
      - or:
        - inheritedOrNull:
            extension: 'Ivoz\Provider\Domain\Model\Extension\Extension'
      - or:
        - inheritedOrNull:
            voicemail: 'Ivoz\Provider\Domain\Model\Voicemail\Voicemail'
      - or:
        - inheritedOrNull:
            locution: 'Ivoz\Provider\Domain\Model\Locution\Locution'
    swagger_context:
      required:
      - calendar

Ivoz\Provider\Domain\Model\HuntGroup\HuntGroup:
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.isVpbxAdmin()
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      company:
        eq: "user.getCompany().getId()"
    write_access_control:
      ROLE_COMPANY_ADMIN:
      - and:
        - company:
            eq: "user.getCompany().getId()"
      - or:
        - inheritedOrNull:
            noAnswerLocution: 'Ivoz\Provider\Domain\Model\Locution\Locution'
      - or:
        - inheritedOrNull:
            noAnswerExtension: 'Ivoz\Provider\Domain\Model\Extension\Extension'
      - or:
        - inheritedOrNull:
            noAnswerVoicemail: 'Ivoz\Provider\Domain\Model\Voicemail\Voicemail'
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\HuntGroupMember\HuntGroupMember:
  collectionOperations:
    get:
      depth: 1
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\HuntGroupMember\HuntGroupMemberDto::CONTEXT_DETAILED_COLLECTION
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\HuntGroupMember\HuntGroupMemberDto::CONTEXT_DETAILED_COLLECTION
        ]
    post:
      depth: 1
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      inherited:
        huntGroup: 'Ivoz\Provider\Domain\Model\HuntGroup\HuntGroup'
    write_access_control:
      - and:
        - inherited:
            huntGroup: 'Ivoz\Provider\Domain\Model\HuntGroup\HuntGroup'
      - or:
        - inheritedOrNull:
            user: 'Ivoz\Provider\Domain\Model\User\User'
    swagger_context:
      required:
      - user
      - huntGroup

Ivoz\Provider\Domain\Model\Invoice\Invoice:
  itemOperations: []
  collectionOperations:
    get: ~
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.getCompany().getShowInvoices()
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    write_access_control:
      ROLE_COMPANY_ADMIN:
        raw: 'FALSE'
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\Invoice\Pdf: ~

Ivoz\Provider\Domain\Model\IvrEntry\IvrEntry:
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      inherited:
        ivr: 'Ivoz\Provider\Domain\Model\Ivr\Ivr'
    write_access_control:
      ROLE_COMPANY_ADMIN:
      - and:
        - inherited:
            ivr: 'Ivoz\Provider\Domain\Model\Ivr\Ivr'
      - or:
        - inheritedOrNull:
            extension: 'Ivoz\Provider\Domain\Model\Extension\Extension'
      - or:
        - inheritedOrNull:
            welcomeLocution: 'Ivoz\Provider\Domain\Model\Locution\Locution'
      - or:
        - inheritedOrNull:
            conditionalRoute: 'Ivoz\Provider\Domain\Model\ConditionalRoute\ConditionalRoute'
      - or:
        - inheritedOrNull:
            voicemail: 'Ivoz\Provider\Domain\Model\Voicemail\Voicemail'
    swagger_context:
      required:
      - ivr

Ivoz\Provider\Domain\Model\Ivr\Ivr:
  itemOperations:
    get:
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\Ivr\IvrDto::CONTEXT_DETAILED
    put:
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\Ivr\IvrDto::CONTEXT_WITH_EXCLUDED_EXTENSIONS
    delete: ~
  collectionOperations:
    get: ~
    post:
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\Ivr\IvrDto::CONTEXT_WITH_EXCLUDED_EXTENSIONS
      depth: 1
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.isVpbxAdmin()
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    normalization_context:
      groups: [
        !php/const Ivoz\Provider\Domain\Model\Ivr\IvrDto::CONTEXT_WITH_EXCLUDED_EXTENSIONS
      ]
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    write_access_control:
      ROLE_COMPANY_ADMIN:
      - and:
        - company:
            eq: "user.getCompany().getId()"
      - or:
        - inheritedOrNull:
            errorExtension: 'Ivoz\Provider\Domain\Model\Extension\Extension'
      - or:
        - inheritedOrNull:
            errorLocution: 'Ivoz\Provider\Domain\Model\Locution\Locution'
      - or:
        - inheritedOrNull:
            welcomeLocution: 'Ivoz\Provider\Domain\Model\Locution\Locution'
      - or:
        - inheritedOrNull:
            noInputLocution: 'Ivoz\Provider\Domain\Model\Locution\Locution'
      - or:
        - inheritedOrNull:
            successLocution: 'Ivoz\Provider\Domain\Model\Locution\Locution'
      - or:
        - inheritedOrNull:
            noInputVoicemail: 'Ivoz\Provider\Domain\Model\Voicemail\Voicemail'
      - or:
        - inheritedOrNull:
            errorVoicemail: 'Ivoz\Provider\Domain\Model\Voicemail\Voicemail'
      - or:
        - inheritedOrNull:
            noInputExtension: 'Ivoz\Provider\Domain\Model\Extension\Extension'
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\IvrExcludedExtension\IvrExcludedExtension:
  collectionOperations:
    get:
      depth: 1
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\IvrExcludedExtension\IvrExcludedExtensionDto::CONTEXT_DETAILED_COLLECTION
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\IvrExcludedExtension\IvrExcludedExtensionDto::CONTEXT_DETAILED_COLLECTION
        ]
    post:
      depth: 1
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      inherited:
        ivr: 'Ivoz\Provider\Domain\Model\Ivr\Ivr'
    write_access_control:
      inherited:
        ivr: 'Ivoz\Provider\Domain\Model\Ivr\Ivr'
        extension: 'Ivoz\Provider\Domain\Model\Extension\Extension'
    swagger_context:
      required:
      - ivr
      - extension

Ivoz\Provider\Domain\Model\Language\Language:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
Ivoz\Provider\Domain\Model\Language\Name:

Ivoz\Provider\Domain\Model\Location\Location:
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.isVpbxAdmin()
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\Locution\Locution:
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.isVpbxAdmin()
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\Locution\OriginalFile: ~
Ivoz\Provider\Domain\Model\Locution\EncodedFile: ~

Ivoz\Provider\Domain\Model\NotificationTemplate\NotificationTemplate:
  itemOperations: []
  collectionOperations: []
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      ROLE_COMPANY_ADMIN:
      - or:
        - brand:
            eq: "user.getCompany().getBrand().getId()"
        - brand:
            isNull: ~

Ivoz\Provider\Domain\Model\MatchList\MatchList:
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.isVpbxAdmin()
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        or:
        - brand:
            eq: "user.getCompany().getBrand().getId()"
        - company:
            eq: "user.getCompany().getId()"
    write_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"

Ivoz\Provider\Domain\Model\MatchListPattern\MatchListPattern:
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      inherited:
        matchList: 'Ivoz\Provider\Domain\Model\MatchList\MatchList'
    write_access_control:
      matchList:
        in: 'matchListRepository.getIdsByCompanyId(user.getCompany().getId())'
    swagger_context:
      required:
      - matchList

Ivoz\Provider\Domain\Model\MusicOnHold\MusicOnHold:
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.isVpbxAdmin()
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\MusicOnHold\OriginalFile: ~
Ivoz\Provider\Domain\Model\MusicOnHold\EncodedFile: ~


Ivoz\Provider\Domain\Model\OutgoingDdiRule\OutgoingDdiRule:
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.isVpbxAdmin()
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    write_access_control:
    - and:
      - company:
          eq: "user.getCompany().getId()"
    - or:
      - inheritedOrNull:
          forcedDdi: 'Ivoz\Provider\Domain\Model\Ddi\Ddi'
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\OutgoingDdiRulesPattern\OutgoingDdiRulesPattern:
  collectionOperations:
    get:
      depth: 1
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\OutgoingDdiRulesPattern\OutgoingDdiRulesPatternDto::CONTEXT_DETAILED_COLLECTION
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\OutgoingDdiRulesPattern\OutgoingDdiRulesPatternDto::CONTEXT_DETAILED_COLLECTION
        ]
    post:
      depth: 1
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      inherited:
        outgoingDdiRule: 'Ivoz\Provider\Domain\Model\OutgoingDdiRule\OutgoingDdiRule'
    write_access_control:
    - and:
      - inherited:
          outgoingDdiRule: 'Ivoz\Provider\Domain\Model\OutgoingDdiRule\OutgoingDdiRule'
    - or:
      - inheritedOrNull:
          matchList: 'Ivoz\Provider\Domain\Model\MatchList\MatchList'
    - or:
      - inheritedOrNull:
          forcedDdi: 'Ivoz\Provider\Domain\Model\Ddi\Ddi'
    swagger_context:
      required:
      - outgoingDdiRule

Ivoz\Provider\Domain\Model\PickUpGroup\PickUpGroup:
  itemOperations:
    get:
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\PickUpGroup\PickUpGroupDto::CONTEXT_DETAILED
    put:
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\PickUpGroup\PickUpGroupDto::CONTEXT_WITH_USERS
    delete: ~
  collectionOperations:
    get:
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\PickUpGroup\PickUpGroupDto::CONTEXT_COLLECTION
    post:
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\PickUpGroup\PickUpGroupDto::CONTEXT_WITH_USERS
      depth: 1
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.isVpbxAdmin()
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    normalization_context:
      groups: [
        !php/const Ivoz\Provider\Domain\Model\PickUpGroup\PickUpGroupDto::CONTEXT_WITH_USERS
      ]
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\PickUpRelUser\PickUpRelUser:
  collectionOperations:
    get:
      depth: 1
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\PickUpRelUser\PickUpRelUserDto::CONTEXT_DETAILED_COLLECTION
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\PickUpRelUser\PickUpRelUserDto::CONTEXT_DETAILED_COLLECTION
        ]
    post:
      depth: 1
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      inherited:
        pickUpGroup: 'Ivoz\Provider\Domain\Model\PickUpGroup\PickUpGroup'
    write_access_control:
      inherited:
        user: 'Ivoz\Provider\Domain\Model\User\User'
        pickUpGroup: 'Ivoz\Provider\Domain\Model\PickUpGroup\PickUpGroup'
    swagger_context:
      required:
      - user
      - pickUpGroup

Ivoz\Provider\Domain\Model\QueueMember\QueueMember:
  collectionOperations:
    get:
      depth: 1
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\QueueMember\QueueMemberDto::CONTEXT_DETAILED_COLLECTION
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\QueueMember\QueueMemberDto::CONTEXT_DETAILED_COLLECTION
        ]
    post:
      depth: 1
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      inherited:
        queue: 'Ivoz\Provider\Domain\Model\Queue\Queue'
    write_access_control:
      inherited:
        user: 'Ivoz\Provider\Domain\Model\User\User'
        queue: 'Ivoz\Provider\Domain\Model\Queue\Queue'
    swagger_context:
      required:
      - user
      - queue

Ivoz\Provider\Domain\Model\Queue\Queue:
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.isVpbxAdmin()
      && user.companyHasFeature('queues')
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      company:
        eq: "user.getCompany().getId()"
    write_access_control:
      ROLE_COMPANY_ADMIN:
      - and:
        - company:
            eq: "user.getCompany().getId()"
      - or:
        - inheritedOrNull:
            periodicAnnounceLocution: 'Ivoz\Provider\Domain\Model\Locution\Locution'
      - or:
        - inheritedOrNull:
            timeoutLocution: 'Ivoz\Provider\Domain\Model\Locution\Locution'
      - or:
        - inheritedOrNull:
            timeoutExtension: 'Ivoz\Provider\Domain\Model\Extension\Extension'
      - or:
        - inheritedOrNull:
            timeoutVoicemail: 'Ivoz\Provider\Domain\Model\Voicemail\Voicemail'
      - or:
        - inheritedOrNull:
            fullLocution: 'Ivoz\Provider\Domain\Model\Locution\Locution'
      - or:
        - inheritedOrNull:
            fullExtension: 'Ivoz\Provider\Domain\Model\Extension\Extension'
      - or:
        - inheritedOrNull:
            fullVoicemail: 'Ivoz\Provider\Domain\Model\Voicemail\Voicemail'
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\RatingPlanGroup\RatingPlanGroup:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.brandHasFeature('billing')
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        id:
          in: 'ratingProfileRepository.getRatingPlanGroupIdsByCompany(user.getCompany().getId())'
        brand:
          eq: "user.getCompany().getBrand().getId()"
    write_access_control:
      ROLE_COMPANY_ADMIN:
        raw: 'FALSE'
Ivoz\Provider\Domain\Model\RatingPlanGroup\Name: ~
Ivoz\Provider\Domain\Model\RatingPlanGroup\Description: ~

Ivoz\Provider\Domain\Model\RatingProfile\RatingProfile:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.brandHasFeature('billing')
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
      && user.getCompany().getShowInvoices()
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    write_access_control:
      ROLE_COMPANY_ADMIN:
        raw: 'FALSE'
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\Recording\Recording:
  itemOperations:
    get: ~
    delete: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.companyHasFeature('recordings')
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    swagger_context:
      required:
      - company
Ivoz\Provider\Domain\Model\Recording\RecordedFile: ~

Ivoz\Provider\Domain\Model\ResidentialDevice\ResidentialDevice:
  properties:
    name:
      attributes:
        swagger_context:
          readOnly: true
  attributes:
    access_control: >-
        "ROLE_COMPANY_ADMIN" in roles
        && user.isResidentialAdmin()
        && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    write_access_control:
    - and:
      - company:
          eq: "user.getCompany().getId()"
    - or:
      - inheritedOrNull:
          outgoingDdi: 'Ivoz\Provider\Domain\Model\Ddi\Ddi'
    - or:
      - inheritedOrNull:
          transformationRuleSet: 'Ivoz\Provider\Domain\Model\TransformationRuleSet\TransformationRuleSet'
    swagger_context:
      required:
      - company
  itemOperations:
    get: ~
    get_status_item:
      method: 'GET'
      path: 'residential_devices/{id}/status'
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\ResidentialDevice\ResidentialDeviceDto::CONTEXT_STATUS
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\ResidentialDevice\ResidentialDeviceDto::CONTEXT_STATUS
        ]
    put: ~
  collectionOperations:
    get: ~
    get_status_collection:
      method: 'GET'
      path: 'residential_devices/status'
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\ResidentialDevice\ResidentialDeviceDto::CONTEXT_STATUS
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\ResidentialDevice\ResidentialDeviceDto::CONTEXT_STATUS
        ]

Ivoz\Provider\Domain\Model\RetailAccount\RetailAccount:
  properties:
    name:
      attributes:
        swagger_context:
          readOnly: true
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.isRetailAdmin()
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    write_access_control:
    - and:
      - company:
          eq: "user.getCompany().getId()"
    - or:
      - inheritedOrNull:
          outgoingDdi: 'Ivoz\Provider\Domain\Model\Ddi\Ddi'
    - or:
      - inheritedOrNull:
          transformationRuleSet: 'Ivoz\Provider\Domain\Model\TransformationRuleSet\TransformationRuleSet'
  itemOperations:
    get: ~
    get_status_item:
      method: 'GET'
      path: 'retail_accounts/{id}/status'
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\RetailAccount\RetailAccountDto::CONTEXT_STATUS
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\RetailAccount\RetailAccountDto::CONTEXT_STATUS
        ]
    put: ~
  collectionOperations:
    get: ~
    get_status_collection:
      method: 'GET'
      path: 'retail_accounts/status'
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\RetailAccount\RetailAccountDto::CONTEXT_STATUS
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\RetailAccount\RetailAccountDto::CONTEXT_STATUS
        ]

Ivoz\Provider\Domain\Model\RouteLock\RouteLock:
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.isVpbxAdmin()
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\RoutingTag\RoutingTag:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        id:
          in: 'companyRelRoutingTagRepository.getRoutingTagIdsByCompany(user.getCompany().getId())'
        brand:
          eq: "user.getCompany().getBrand().getId()"
    write_access_control:
      ROLE_COMPANY_ADMIN:
        raw: 'FALSE'

Ivoz\Provider\Domain\Model\Schedule\Schedule:
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.isVpbxAdmin()
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\Service\Service:
  itemOperations:
    get:
      method: 'GET'
      path: '/services/{id}'
      requirements:
        id: '\d+'
  collectionOperations:
    get: ~
    get_services_unassigned:
      method: 'GET'
      path: '/services/unassigned'
      route_name: 'get_services_unassigned'
      pagination_enabled: false
      swagger_context:
        produces:
          - 'application/json'
        tags:
          - Provider
        parameters:
          - name: _includeId
            in: query
            type: integer
            required: false
            description: 'Ensure certain service id is included'
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        id:
          in: 'brandServiceRepository.getServiceIdsByBrand(user.getCompany().getBrand().getId())'
    write_access_control:
      ROLE_COMPANY_ADMIN:
        raw: 'FALSE'
Ivoz\Provider\Domain\Model\Service\Name: ~
Ivoz\Provider\Domain\Model\Service\Description: ~

Ivoz\Provider\Domain\Model\Terminal\Terminal:
  itemOperations:
    get:
      method: 'GET'
      path: '/terminals/{id}'
      requirements:
        id: '\d+'
    get_status_item:
      method: 'GET'
      path: 'terminals/{id}/status'
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\Terminal\TerminalDto::CONTEXT_STATUS
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\Terminal\TerminalDto::CONTEXT_STATUS
        ]
    put: ~
    delete: ~
  collectionOperations:
    get_status_collection:
      method: 'GET'
      path: 'terminals/status'
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\Terminal\TerminalDto::CONTEXT_STATUS
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\Terminal\TerminalDto::CONTEXT_STATUS
        ]
    get_terminals_unassigned:
      method: 'GET'
      path: 'terminals/unassigned'
      route_name: 'get_terminals_unassigned'
      pagination_enabled: false
      swagger_context:
        produces:
          - 'application/json'
        tags:
          - Provider
        parameters:
          - name: _includeId
            in: query
            type: integer
            required: false
            description: 'Ensure certain terminal id is included'
          - name: _properties
            in: query
            type: array
            required: false
            items:
              type: string
            collectionFormat: 'multi'
            description: "Allows you to reduce the response to contain only the properties you need"
    get: ~
    post: ~
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.isVpbxAdmin()
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    swagger_context:
      required:
      - company
  properties:
    lastProvisionDate:
      attributes:
        swagger_context:
          readOnly: true

Ivoz\Provider\Domain\Model\TerminalModel\TerminalModel:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    write_access_control:
      ROLE_COMPANY_ADMIN:
        raw: 'FALSE'

Ivoz\Provider\Domain\Model\Timezone\Timezone:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    pagination_client_enabled: true
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    write_access_control:
      ROLE_COMPANY_ADMIN:
        raw: 'FALSE'
Ivoz\Provider\Domain\Model\Timezone\Label: ~

Ivoz\Provider\Domain\Model\TransformationRuleSet\TransformationRuleSet:
  access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      ROLE_COMPANY_ADMIN:
      - or:
        - brand:
            eq: "user.getCompany().getBrand().getId()"
        - brand:
            isNull: ~
    write_access_control:
      ROLE_COMPANY_ADMIN:
        raw: 'FALSE'
Ivoz\Provider\Domain\Model\TransformationRuleSet\Name: ~

Ivoz\Provider\Domain\Model\User\User:
  itemOperations:
    get:
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\User\UserDto::CONTEXT_DETAILED
    put:
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\User\UserDto::CONTEXT_WITH_PICKUP_GROUPS
    delete: ~
  collectionOperations:
    get: ~
    get_hunt_group_users_available:
      method: 'GET'
      path: '/hunt_groups/{id}/users_available'
      requirements:
        id: '\d+'
      route_name: 'get_hunt_group_users_available'
      pagination_enabled: false
      swagger_context:
        produces:
          - 'application/json'
        tags:
          - Provider
        parameters:
          - name: id
            in: path
            type: integer
            required: true
            description: 'Hunt group id'
          - name: _includeId
            in: query
            type: integer
            required: false
            description: 'Ensure certain user id is included'
          - name: _properties
            in: query
            type: array
            required: false
            items:
              type: string
            collectionFormat: 'multi'
            description: "Allows you to reduce the response to contain only the properties you need"
    post:
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\User\UserDto::CONTEXT_WITH_PICKUP_GROUPS
      depth: 1
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && user.isVpbxAdmin()
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    write_access_control:
      ROLE_COMPANY_ADMIN:
      - and:
        - company:
            eq: "user.getCompany().getId()"
      - or:
        - inheritedOrNull:
            callAcl: 'Ivoz\Provider\Domain\Model\CallAcl\CallAcl'
      - or:
        - inheritedOrNull:
            bossAssistant: 'Ivoz\Provider\Domain\Model\User\User'
      - or:
        - inheritedOrNull:
            outgoingDdiRule: 'Ivoz\Provider\Domain\Model\OutgoingDdiRule\OutgoingDdiRule'
      - or:
        - inheritedOrNull:
            bossAssistantWhiteList: 'Ivoz\Provider\Domain\Model\MatchList\MatchList'
      - or:
        - inheritedOrNull:
            terminal: 'Ivoz\Provider\Domain\Model\Terminal\Terminal'
      - or:
        - inheritedOrNull:
            extension: 'Ivoz\Provider\Domain\Model\Extension\Extension'
      - or:
        - inheritedOrNull:
            outgoingDdi: 'Ivoz\Provider\Domain\Model\Ddi\Ddi'
      - or:
        - inheritedOrNull:
            location: 'Ivoz\Provider\Domain\Model\Location\Location'
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\Voicemail\Voicemail:
  attributes:
    access_control: >-
      "ROLE_COMPANY_ADMIN" in roles
      && (user.isVpbxAdmin() || user.isResidentialAdmin())
      && user.hasAccessPrivileges(_api_resource_class, request.getMethod())
    read_access_control:
      ROLE_COMPANY_ADMIN:
        company:
          eq: "user.getCompany().getId()"
    write_access_control:
    - and:
      - company:
          eq: "user.getCompany().getId()"
      - or:
        - inheritedOrNull:
            user: 'Ivoz\Provider\Domain\Model\User\User'
      - or:
        - inheritedOrNull:
            residentialDevice: 'Ivoz\Provider\Domain\Model\ResidentialDevice\ResidentialDevice'
      - or:
        - inheritedOrNull:
            locution: 'Ivoz\Provider\Domain\Model\Locution\Locution'
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\VoicemailMessage\VoicemailMessage:
  itemOperations:
    get: ~
    delete: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles && user.hasAccessPrivileges(_api_resource_class, request.getMethod())'
    read_access_control:
      inherited:
        voicemail: 'Ivoz\Provider\Domain\Model\Voicemail\Voicemail'
    write_access_control:
      inherited:
        voicemail: 'Ivoz\Provider\Domain\Model\Voicemail\Voicemail'

Ivoz\Provider\Domain\Model\VoicemailMessage\RecordingFile: ~
