########################################
## Raw
########################################

Ivoz\Provider\Domain\Model\CallForwardSetting\CallForwardSetting:
  itemOperations:
    get: ~
    put: ~
    delete: ~
    post_my_call_forward_settings:
      access_control: '"ROLE_COMPANY_USER" in roles'
      method: 'POST'
      path: '/my/call_forward_settings'
      route_name: 'post_my_call_forward_settings'
      swagger_context:
        consumes: ["application/ld+json"]
        produces:
        - 'application/json'
        - 'application/ld+json'
        tags:
        - My
        parameters:
        - name: 'CallForwardSetting'
          in: 'body'
          description: 'The updated CallForwardSetting resource'
          schema:
            $ref: '#/definitions/CallForwardSetting'
  collectionOperations:
    get_my_call_forward_settings:
      depth: 1
      access_control: '"ROLE_COMPANY_USER" in roles'
      method: 'GET'
      path: '/my/call_forward_settings'
      route_name: 'get_my_call_forward_settings'
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\CallForwardSetting\CallForwardSettingDto::CONTEXT_DETAILED_COLLECTION
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\CallForwardSetting\CallForwardSettingDto::CONTEXT_DETAILED_COLLECTION
        ]
      swagger_context:
        produces:
        - 'application/json'
        - 'application/ld+json'
        tags:
        - My
  attributes:
    access_control: '"ROLE_COMPANY_USER" in roles'

Ivoz\Provider\Domain\Model\Country\Name:
Ivoz\Provider\Domain\Model\Country\Zone:
Ivoz\Provider\Domain\Model\Country\Country:
  itemOperations:
    get_my_company_country:
      access_control: '"ROLE_COMPANY_USER" in roles'
      method: 'GET'
      path: '/my/company_country'
      route_name: 'get_my_company_country'
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\Country\CountryDto::CONTEXT_DETAILED
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\Country\CountryDto::CONTEXT_DETAILED
        ]
      swagger_context:
        produces:
        - 'application/json'
        - 'application/ld+json'
        tags:
        - My
        parameters: []
  collectionOperations:
    get: ~
  attributes:
    pagination_client_enabled: true
    access_control: '"ROLE_COMPANY_USER" in roles'

Ivoz\Provider\Domain\Model\Extension\Extension:
  itemOperations: []
  collectionOperations:
    get_my_company_extensions:
      method: 'GET'
      path: '/my/extensions'
      route_name: 'get_my_company_extensions'
      normalization_context:
      - collection
      swagger_context:
        produces:
        - 'application/json'
        - 'application/ld+json'
        tags:
        - My
        parameters: []
  attributes:
    access_control: '"ROLE_COMPANY_USER" in roles'
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\Voicemail\Voicemail:
  itemOperations:
    get: ~
    put: ~
  collectionOperations:
    get_my_company_voicemails:
      method: 'GET'
      path: '/my/voicemail'
      route_name: 'get_my_company_voicemails'
      normalization_context:
      - collection
      swagger_context:
        produces:
        - 'application/json'
        - 'application/ld+json'
        tags:
        - My
        parameters: []
    get_my_voicemails:
      method: 'GET'
      path: '/voicemails'
      route_name: 'get_my_voicemails'
      swagger_context:
        produces:
        - 'application/json' 
        responses:
          200:
            description: 'Voicemails retrieved successfully'
            schema:
              type: array
              items:
                $ref: '#/definitions/Voicemail'
  properties:
    name:
      attributes:
        swagger_context:
          readOnly: true
    email:
      attributes:
        swagger_context:
          readOnly: true
  attributes:
    access_control: '"ROLE_COMPANY_USER" in roles'
    read_access_control:
      ROLE_COMPANY_USER:
        - or:
          - user:
              eq: "user.getId()"
          - id:
              in: "voicemailRelUserRepository.getVoicemailIdsByUser(user)"
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\VoicemailMessage\VoicemailMessage:
  itemOperations:
    get: ~
    delete: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: '"ROLE_COMPANY_USER" in roles'
    read_access_control:
      ROLE_COMPANY_USER:
        - or:
          - voicemail:
              in: "voicemailRepository.getVoicemailsIdsByUser(user)"
          - voicemail:
              in: "voicemailRelUserRepository.getVoicemailIdsByUser(user)"

Ivoz\Provider\Domain\Model\VoicemailMessage\RecordingFile: ~

Ivoz\Provider\Domain\Model\Timezone\Timezone:
  itemOperations: []
  collectionOperations:
    get: ~
  attributes:
    pagination_client_enabled: true
    access_control: '"ROLE_COMPANY_USER" in roles'

Ivoz\Provider\Domain\Model\User\User:
  itemOperations:
    get_my_profile:
      depth: 1
      method: 'GET'
      path: '/my/profile'
      route_name: 'get_my_profile'
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\User\UserDto::CONTEXT_MY_PROFILE
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\User\UserDto::CONTEXT_MY_PROFILE
        ]
      swagger_context:
        produces:
        - 'application/json'
        - 'application/ld+json'
        tags:
        - My
        parameters: []
    put_my_profile:
      attributes:
        depth: 1
      method: 'PUT'
      path: '/my/profile'
      route_name: 'put_my_profile'
      operation_normalization_context: !php/const Ivoz\Provider\Domain\Model\User\UserDto::CONTEXT_PUT_MY_PROFILE
      denormalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\User\UserDto::CONTEXT_PUT_MY_PROFILE
        ]
      normalization_context:
        groups: [
          !php/const Ivoz\Provider\Domain\Model\User\UserDto::CONTEXT_MY_PROFILE
        ]
      swagger_context:
        tags:
        - My
        consumes: ["application/ld+json"]
        parameters:
        - name: 'user'
          in: 'body'
          description: 'The updated User resource'
          schema:
            $ref: '#/definitions/User-updateMyProfile'
  collectionOperations:
    get_my_company_assistants:
      method: 'GET'
      path: '/my/company_assistants'
      route_name: 'get_my_company_assistants'
      swagger_context:
        produces:
        - 'application/json'
        - 'application/ld+json'
        tags:
        - My
        parameters: []
    get_my_company_voicemails:
      method: 'GET'
      path: '/my/company_voicemails'
      route_name: 'get_my_company_voicemails'
      swagger_context:
        produces:
        - 'application/json'
        - 'application/ld+json'
        tags:
        - My
        parameters: []
  attributes:
    access_control: '"ROLE_COMPANY_USER" in roles'
    swagger_context:
      required:
      - company

Ivoz\Provider\Domain\Model\WebPortal\WebTheme:
  itemOperations:
    get_my_theme:
      method: 'GET'
      path: '/my/theme'
      route_name: 'get_my_theme'
      pagination_enabled: false
      swagger_context:
        produces:
          - 'application/json'
        tags:
          - My
    get_my_logo:
      method: 'GET'
      path: '/my/logo/{id}/{name}'
      route_name: 'get_my_logo'
      pagination_enabled: false
      swagger_context:
        produces:
          - 'application/octet-stream'
        parameters:
          - name: id
            in: path
            type: integer
            required: true
            description: 'web portal id'
          - name: name
            in: path
            type: string
            required: true
            description: 'image name'
        tags:
          - My
  collectionOperations: []


Ivoz\Provider\Domain\Model\UsersCdr\UsersCdr:
  attributes:
    pagination_client_enabled: true
    access_control: '"ROLE_COMPANY_USER" in roles'
    read_access_control:
      ROLE_COMPANY_USER:
        company:
          eq: "user.getCompany().getId()"
  itemOperations:
    get: ~
  collectionOperations:
    get:
      swagger_context:
        produces:
        - 'application/json'
        - 'application/ld+json'
        - 'text/csv'
    get_my_call_history:
      method: 'GET'
      path: '/my/call_history'
      route_name: 'get_my_call_history'
      swagger_context:
        produces:
        - 'application/json'
        - 'application/ld+json'
        - 'text/csv'
        tags:
        - My

Ivoz\Provider\Domain\Model\FaxesInOut\FaxesInOut:
  itemOperations:
    get: ~
    delete: ~
  collectionOperations:
    get: ~
    post: ~
    post_fax_resend:
      method: 'POST'
      path: '/faxes_in_outs/{id}/resend'
      requirements:
        id: '\d+'
      route_name: 'post_fax_resend'
      swagger_context:
        summary: 'Resend failed fax'
        tags:
          - Provider
        parameters:
          - name: id
            in: path
            type: integer
            required: true
          - in: body
        responses:
          200:
            description: "Fax successfully resent"
          404:
            description: "Entity not found"
          400:
            description: "Bad request"
  properties:
    calldate:
      attributes:
        swagger_context:
          readOnly: true
    status:
      attributes:
        swagger_context:
          readOnly: true
    src:
      attributes:
        swagger_context:
          readOnly: true
  attributes:
    access_control: '"ROLE_COMPANY_USER" in roles'
    order:
      calldate: ASC
    read_access_control:
      inherited:
        fax: 'Ivoz\Provider\Domain\Model\Fax\Fax'
    write_access_control:
      inherited:
        fax: 'Ivoz\Provider\Domain\Model\Fax\Fax'
      type:
        eq: '"Out"'
    delete_access_control: ~
    swagger_context:
      required:
        - fax
Ivoz\Provider\Domain\Model\FaxesInOut\File: ~

Ivoz\Provider\Domain\Model\Fax\Fax:
  itemOperations:
    get: ~
  collectionOperations:
    get: ~
  attributes:
    access_control: '"ROLE_COMPANY_USER" in roles'
    order:
      name: ASC
    read_access_control:
      ROLE_COMPANY_USER:
        company:
          eq: "user.getCompany().getId()"
        id:
          in: "faxesRelUserRepository.getFaxesIdsByUser(user)"
    swagger_context:
      required:
        - company

Ivoz\Provider\Domain\Model\Recording\Recording:
  itemOperations:
    get:
      method: 'GET'
      path: '/recordings/{id}'
      requirements:
        id: '\d+'
    delete: ~
  collectionOperations:
    get: ~
    get_multiple_recorderded_files:
      method: 'GET'
      path: '/recordings/recorded_files_zip'
      route_name: 'get_multiple_recorderded_files'
      pagination_enabled: false
      swagger_context:
        produces:
          - 'application/octet-stream'
        tags:
          - Provider
        parameters:
          - name: _recordingIds
            in: query
            type: array
            required: false
            items:
              type: string
            description: 'Ensure download of multiple recording files'
  attributes:
    access_control: '"ROLE_COMPANY_USER" in roles'
    order:
      calldate: DESC
    read_access_control:
      ROLE_COMPANY_USER:
        user:
          eq: "user.getId()"
    swagger_context:
      required:
        - company
Ivoz\Provider\Domain\Model\Recording\RecordedFile: ~