#!/bin/bash

# Source debconf library.
. /usr/share/debconf/confmodule

# Show Configuration general menu
function show_menu_options()
{
    while [ 1 ]; do
        # Display configuration menu
        db_input high ivozprovider/menu_proxy               || true
        db_go                                               || true
        # Exec the menu entry callback
        db_get ivozprovider/menu_proxy                      || true
        OPTION=$RET

        # Run selected option
        [ "$OPTION" == "configure_finish" ] && break
        eval $OPTION
    done
}

function configure_mysql_password()
{
    # Request MySQL root password
    db_input high ivozprovider/mysql_password              || true
    db_go                                                  || true
    db_get ivozprovider/mysql_password                     || true
    MYSQL_PASS=$RET

    # Request MySQL root password confirmation
    db_input high ivozprovider/mysql_password_confirm      || true
    db_go                                                  || true
    db_get ivozprovider/mysql_password_confirm             || true
    MYSQL_PASS_CONFIRM=$RET

    # Check both passwords are the same
    if [ "$MYSQL_PASS" != "$MYSQL_PASS_CONFIRM" ]; then
        db_input high ivozprovider/mysql_password_error    || true
        db_go                                              || true
        configure_mysql_password
    fi
}

function check_valid_ip4()
{
    # Expect 4 number seperaded by dots
    if [[  "$1" =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        # Each number must not be greater than 255
        for I in 1 2 3 4; do
            if [ $(echo "$1" | cut -d. -f$I) -gt 255 ]; then
                return 1    # invalid segment digits
            fi
        done
        return 0            # valid
    else
        return 1            # invalid ip4 dot format
    fi
}

function configure_dns_address()
{
    # Request Kamailio users listen address
    db_input high ivozprovider/dns_address                 || true
    db_go                                                  || true
    db_get ivozprovider/dns_address                        || true

    # Check entered IP is valid
    if ! check_valid_ip4 $RET; then
        db_input high ivozprovider/invalid_ip              || true
        db_go                                              || true
        configure_dns_address
    fi
}

function configure_media_relay_address()
{
    # Request public Media relay address
    db_input high ivozprovider/media_relay_address         || true
    db_go                                                  || true
    db_get ivozprovider/media_relay_address                || true

    # Check entered IP is valid
    if ! check_valid_ip4 $RET; then
        db_input high ivozprovider/invalid_ip              || true
        db_go                                              || true
        configure_media_relay_address
    fi
}

function configure_media_relay_control()
{
    # Request private Media relay address
    db_input high ivozprovider/media_relay_control         || true
    db_go                                                  || true
    db_get ivozprovider/media_relay_control                || true

    # Check entered IP is valid
    if ! check_valid_ip4 $RET; then
        db_input high ivozprovider/invalid_ip              || true
        db_go                                              || true
        configure_media_relay_control
    fi
}

# This profile configuration has been done from another task/tool
db_get ivozprovider/preseed && exit 0

# Run while reconfigure or first install
if [ "$1" == "configure" ] && [ -z "$2" ] || [ "$1" = "reconfigure" ]; then
    show_menu_options
fi


: