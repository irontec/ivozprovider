#!/bin/bash

function configure_mysql_password()
{
    # Request MySQL root password
    db_input high ivozprovider/mysql_password              || true
    db_go                                                  || true
    db_get ivozprovider/mysql_password                     || true
    MYSQL_PASS=$RET

    # Request MySQL root password confirmation
    db_input high ivozprovider/mysql_password_confirm      || true
    db_go                                                  || true
    db_get ivozprovider/mysql_password_confirm             || true
    MYSQL_PASS_CONFIRM=$RET

    # Check both passwords are the same
    if [ "$MYSQL_PASS" != "$MYSQL_PASS_CONFIRM" ]; then
        db_input high ivozprovider/mysql_password_error    || true
        db_go                                              || true
        configure_mysql_password
    else
        # Set password used by mysql-server package
        db_set mysql-community-server/root-pass $MYSQL_PASS
        db_set mysql-community-server/re-root-pass $MYSQL_PASS
    fi
}

function check_valid_ip4()
{
    # Expect 4 number seperaded by dots
    if [[  "$1" =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        # Each number must not be greater than 255
        for I in 1 2 3 4; do
            if [ $(echo "$1" | cut -d. -f$I) -gt 255 ]; then
                return 1    # invalid segment digits
            fi
        done
        return 0            # valid
    else
        return 1            # invalid ip4 dot format
    fi
}

function configure_dns_address()
{
    # Rquest Kamailio users listen address
    db_input high ivozprovider/dns_address               || true
    db_go                                                  || true
    db_get ivozprovider/dns_address                        || true

    # Check entered IP is valid
    if ! check_valid_ip4 $RET; then
        db_input high ivozprovider/invalid_ip            || true
        db_go                                              || true
        configure_dns_address
    fi
}


function configure_users_address()
{
    # Rquest Kamailio users listen address
    db_input high ivozprovider/users_address             || true
    db_go                                                  || true
    db_get ivozprovider/users_address                      || true

    # Check entered IP is valid
    if ! check_valid_ip4 $RET; then
        db_input high ivozprovider/invalid_ip            || true
        db_go                                              || true
        configure_users_address
    fi
}

function configure_trunks_address()
{
    # Request Kamalio trunks listen address
    db_input high ivozprovider/trunks_address            || true
    db_go                                                  || true
    db_get ivozprovider/trunks_address                     || true

    # Check entered IP is valid
    if ! check_valid_ip4 $RET; then
        db_input high ivozprovider/invalid_ip            || true
        db_go                                              || true
        configure_trunks_address
    fi
}

function configure_jobs_address()
{
    # Request jobs listen address
    db_input high ivozprovider/jobs_address              || true
    db_go                                                  || true
    db_get ivozprovider/jobs_address                       || true

    # Check entered IP is valid
    if ! check_valid_ip4 $RET; then
        db_input high ivozprovider/invalid_ip            || true
        db_go                                              || true
        configure_jobs_address
    fi
}

function configure_data_address()
{
    # Request data listen address
    db_input high ivozprovider/data_address              || true
    db_go                                                  || true
    db_get ivozprovider/data_address                       || true

    # Check entered IP is valid
    if ! check_valid_ip4 $RET; then
        db_input high ivozprovider/invalid_ip            || true
        db_go                                              || true
        configure_data_address
    fi
}

function configure_cache_address()
{
    # Request cache listen address
    db_input high ivozprovider/cache_address               || true
    db_go                                                  || true
    db_get ivozprovider/cache_address                      || true

    # Check entered IP is valid
    if ! check_valid_ip4 $RET; then
        db_input high ivozprovider/invalid_ip            || true
        db_go                                              || true
        configure_cache_address
    fi
}

function configure_storage_address()
{
    # Request storage address
    db_input high ivozprovider/storage_address           || true
    db_go                                                  || true
    db_get ivozprovider/storage_address                    || true

    # Check entered IP is valid
    if ! check_valid_ip4 $RET; then
        db_input high ivozprovider/invalid_ip            || true
        db_go                                              || true
        configure_storage_address
    fi
}

function configure_logs_address()
{
    # Request log server address
    db_input high ivozprovider/logs_address              || true
    db_go                                                  || true
    db_get ivozprovider/logs_address                       || true

    # Check entered IP is valid
    if ! check_valid_ip4 $RET; then
        db_input high ivozprovider/invalid_ip            || true
        db_go                                              || true
        configure_logs_address
    fi
}


:
