#!/bin/bash

# Source debconf library.
. /usr/share/debconf/confmodule

# Show Configuration general menu
function show_menu_options()
{
    while [ "$OPTION" != "configure_finish" ]; do
        # Display configuration menu
        db_input high ivozprovider/menu                     || true
        db_go                                               || true
        # Exec the menu entry callback
        db_get ivozprovider/menu                            || true
        OPTION=$RET
        eval $OPTION
    done
}

## Menu entries functions
function configure_users_address()
{
    # Rquest Kamailio users listen address
    db_input high ivozprovider/users_address                || true
    db_go                                                   || true
    db_get ivozprovider/users_address                       || true

    # Check entered IP is valid
    if ! check_valid_ip4 $RET; then
        db_input high ivozprovider/invalid_ip               || true
        db_go                                               || true
        db_set ivozprovider/users_address ""
    else
        # Also set Media relay address
        db_set ivozprovider/media_relay_address $RET
        # Improve navigation moving to the next menu entry
        db_set ivozprovider/menu configure_trunks_address
    fi
}

function configure_trunks_address()
{
    # Request Kamalio trunks listen address
    db_input high ivozprovider/trunks_address               || true
    db_go                                                   || true
    db_get ivozprovider/trunks_address                      || true

    # Check entered IP is valid
    if ! check_valid_ip4 $RET; then
        db_input high ivozprovider/invalid_ip               || true
        db_go                                               || true
        db_set ivozprovider/trunks_address ""
    else
        # Improve navigation moving to the next menu entry
        db_set ivozprovider/menu configure_mysql_password
    fi
}

function configure_mysql_password()
{
    # Request MySQL root password
    db_input high ivozprovider/mysql_password               || true
    db_go                                                   || true
    db_get ivozprovider/mysql_password                      || true
    MYSQL_PASS=$RET

    # Request MySQL root password confirmation
    db_input high ivozprovider/mysql_password_confirm       || true
    db_go                                                   || true
    db_get ivozprovider/mysql_password_confirm              || true
    MYSQL_PASS_CONFIRM=$RET

    # Check both passwords are the same
    if [ "$MYSQL_PASS" != "$MYSQL_PASS_CONFIRM" ]; then
        db_input high ivozprovider/mysql_password_error     || true
        db_go                                               || true
        db_set ivozprovider/mysql_password ""
    else
        # Set password used by mysql-server package
        db_set mysql-server/root_password $MYSQL_PASS
        db_set mysql-server/root_password_again $MYSQL_PASS
        # Improve navigation moving to the next menu entry
        db_set ivozprovider/menu configure_language
    fi
}

function configure_language()
{
    # Request default portals language
    db_input high ivozprovider/language                     || true
    db_go                                                   || true
    # Improve navigation moving to the next menu entry
    db_set ivozprovider/menu configure_finish
}

function configure_finish()
{
    db_get ivozprovider/users_address
    USERS_ADDR=$RET
    db_get ivozprovider/trunks_address
    TRUNKS_ADDR=$RET

    if [ -z "$USERS_ADDR" ] || [ -z "$TRUNKS_ADDR" ]; then
        db_input high ivozprovider/incomplete_config
        db_go
        db_get ivozprovider/incomplete_config
        if [ "$RET"  == "false" ]; then
            # You can't escape this menu!
            OPTION=""
        else
            [ -z "$USERS_ADDR" ] && db_set ivozprovider/users_address 127.0.0.1
            [ -z "$TRUNKS_ADDR" ] && db_set ivozprovider/trunks_address 127.0.0.1
        fi
    fi
}

function check_valid_ip4()
{
    # Expect 4 number seperaded by dots
    if [[  "$1" =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        # Each number must not be greater than 255
        for I in 1 2 3 4; do
            if [ $(echo "$1" | cut -d. -f$I) -gt 255 ]; then
                return 1    # invalid segment digits
            fi
        done
        return 0            # valid
    else
        return 1            # invalid ip4 dot format
    fi
}

function confirm_restart()
{
    # Request service restart confirmation
    db_set ivozprovider/restart_services false              || true
    db_input high ivozprovider/restart_services             || true
    db_go                                                   || true
}

# Run while reconfigure or first install
if [ $1 == "configure" ] && [ -z "$2" ] || [ "$1" = "reconfigure" ]; then
    show_menu_options
fi

# Restart services confirmation
if [ "$1" = "reconfigure" ]; then
    confirm_restart
fi


:
