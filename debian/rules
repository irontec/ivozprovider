#!/usr/bin/make -f

export APP_ENV=prod
export TEMP=/tmp

build_doc:
	# Build doc using sphinx
	cd doc/sphinx ; sphinx-build -q -D"language=en" . ../html/en
	cd doc/sphinx ; sphinx-build -q -D"language=es" . ../html/es
	cd doc/sphinx ; sphinx-build -q -D"language=es" -bsinglehtml . ../html/essingle
	cd doc/sphinx ; sphinx-build -q -D"language=en" -bsinglehtml . ../html/ensingle

build_library:
	git config --global http.sslVerify false
	cd library ; composer --no-interaction --no-dev --no-progress --optimize-autoloader install

build_agis: build_library
	cd asterisk/agi ; composer --no-interaction --no-dev --no-progress --optimize-autoloader install

build_webrest: build_library
	cd web/rest/platform ; composer --no-interaction --no-dev --no-progress --optimize-autoloader install
	cd web/rest/brand ; composer --no-interaction --no-dev --no-progress --optimize-autoloader install
	cd web/rest/client ; composer --no-interaction --no-dev --no-progress --optimize-autoloader install
	cd web/rest/user ; composer --no-interaction --no-dev --no-progress --optimize-autoloader install

build_webportals:
	cd web/portal ; yarnpkg install
	cd web/portal/platform; yarnpkg version-info; yarnpkg build
	cd web/portal/brand; yarnpkg version-info; yarnpkg build
	cd web/portal/client ; yarnpkg version-info; yarnpkg build
	cd web/portal/user; yarnpkg version-info; yarnpkg build

build_microservices: build_library
	cd microservices/balances; composer --no-interaction --no-dev --no-progress --optimize-autoloader install
	cd microservices/recordings; composer --no-interaction --no-dev --no-progress --optimize-autoloader install
	cd microservices/workers; composer --no-interaction --no-dev --no-progress --optimize-autoloader install
	cd microservices/scheduler; composer --no-interaction --no-dev --no-progress --optimize-autoloader install
	cd microservices/provision; composer --no-interaction --no-dev --no-progress --optimize-autoloader install
	cd microservices/realtime; go mod download && go mod verify
	cd microservices/realtime; go build -v -o server irontec.com/realtime/cmd/server
	cd microservices/router; composer --no-interaction --no-dev --no-progress --optimize-autoloader install

build_schema: build_library
	cd schema ; composer --no-interaction --no-dev --no-progress --optimize-autoloader install

override_dh_auto_build: build_doc build_agis build_webrest build_microservices build_schema build_webportals

override_dh_install:
	dh_install
	# Remove .git directiories
	-find debian -type d -name .git -prune -exec rm -fr {} \;

# Install systemd unit files
override_dh_systemd_enable:
	dh_systemd_enable -p ivozprovider-asterisk-agi    --name=fastagi@      fastagi@.service
	dh_systemd_enable -p ivozprovider-asterisk-agi    --name=fastagi       fastagi.socket
	dh_systemd_enable -p ivozprovider-profile-proxy   --name=kamailio@     kamailio@.service        --no-enable
	dh_systemd_enable -p ivozprovider-web-rest        --name=ivozprovider-jwt                       --no-enable
	dh_systemd_enable -p ivozprovider-recordings      --name=ivozprovider-recordings                --no-enable
	dh_systemd_enable -p ivozprovider-balances        --name=ivozprovider-balances                  --no-enable
	dh_systemd_enable -p ivozprovider-balances        --name=ivozprovider-counters                  --no-enable
	dh_systemd_enable -p ivozprovider-realtime        --name=ivozprovider-realtime                  --no-enable
	dh_systemd_enable -p ivozprovider-scheduler       --name=ivozprovider-scheduler                 --no-enable
	dh_systemd_enable -p ivozprovider-scheduler       --name=ivozprovider-cdrs                      --no-enable
	dh_systemd_enable -p ivozprovider-scheduler       --name=ivozprovider-scheduler-historic-calls  --no-enable
	dh_systemd_enable -p ivozprovider-scheduler       --name=ivozprovider-users-cdrs                --no-enable

override_dh_systemd_start:
	dh_systemd_start  -p ivozprovider-asterisk-agi     --name=fastagi@     fastagi@.service          --no-restart-after-upgrade --no-start
	dh_systemd_start  -p ivozprovider-asterisk-agi     --name=fastagi      fastagi.socket            --no-restart-after-upgrade --no-start
	dh_systemd_start  -p ivozprovider-profile-proxy    --name=kamailio@    kamailio@.service         --no-restart-after-upgrade --no-start
	dh_systemd_start  -p ivozprovider-web-rest         --name=ivozprovider-jwt                       --no-restart-after-upgrade --no-start
	dh_systemd_start  -p ivozprovider-recordings       --name=ivozprovider-recordings                --no-restart-after-upgrade --no-start
	dh_systemd_start  -p ivozprovider-balances         --name=ivozprovider-balances                  --no-restart-after-upgrade --no-start
	dh_systemd_start  -p ivozprovider-balances         --name=ivozprovider-counters                  --no-restart-after-upgrade --no-start
	dh_systemd_start  -p ivozprovider-realtime         --name=ivozprovider-realtime                  --no-restart-after-upgrade --no-start
	dh_systemd_start  -p ivozprovider-scheduler        --name=ivozprovider-scheduler                 --no-restart-after-upgrade --no-start
	dh_systemd_start  -p ivozprovider-scheduler        --name=ivozprovider-cdrs                      --no-restart-after-upgrade --no-start
	dh_systemd_start  -p ivozprovider-scheduler        --name=ivozprovider-scheduler-historic-calls  --no-restart-after-upgrade --no-start
	dh_systemd_start  -p ivozprovider-scheduler        --name=ivozprovider-users-cdrs                --no-restart-after-upgrade --no-start

# Install /etc/default configuration
override_dh_installinit:
	dh_installinit    -p ivozprovider-kamailio-users   --name=kamusers     --noscripts --no-restart-after-upgrade --no-start
	dh_installinit    -p ivozprovider-kamailio-trunks  --name=kamtrunks    --noscripts --no-restart-after-upgrade --no-start

# Avoid stripping all vendor files
override_dh_strip_nondeterminism:

%:
	dh $@ --with systemd --parallel
