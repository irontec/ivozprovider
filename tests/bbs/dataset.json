{
	"info": {
		"_postman_id": "05153f64-76a6-4b04-932b-f948d9961dd0",
		"name": "IvozProvider - BBS Dataset (halliday)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "0000 - Authorization",
			"item": [
				{
					"name": "Get Platform Authorization Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token field\"] = jsonData.token !== undefined;",
									"",
									"postman.setGlobalVariable(\"platform_api_auth\", 'Bearer ' + jsonData.token);",
									"postman.setGlobalVariable(\"platform_api_token\", jsonData.token);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "{{api_username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{api_password}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{platform_api_url}}/admin_login",
							"host": [
								"{{platform_api_url}}"
							],
							"path": [
								"admin_login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "0001 - Brand Data",
			"item": [
				{
					"name": "Delete BBS brand",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{platform_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{platform_api_url}}/brands/{{brandId}}",
							"host": [
								"{{platform_api_url}}"
							],
							"path": [
								"brands",
								"{{brandId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create BBS Brand",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"brandId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{platform_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"ZZZ - Test Brand for BBS\",\n  \"domainUsers\": \"brand-bbs.ivozprovider.local\",\n  \"language\": 2,\n  \"currency\": 1,\n  \"defaultTimezone\": 145,\n  \"transformationRuleSet\": 70,\n  \"invoice\": {\n    \"nif\": \"string\",\n    \"postalAddress\": \"string\",\n    \"postalCode\": \"string\",\n    \"town\": \"string\",\n    \"province\": \"string\",\n    \"country\": \"string\",\n    \"registryData\": \"string\"\n  }\n}"
						},
						"url": {
							"raw": "{{platform_api_url}}/brands",
							"host": [
								"{{platform_api_url}}"
							],
							"path": [
								"brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create BBS Brand Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"brandAdminId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{platform_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"brandadmin\",\n  \"pass\": \"unusedp4ssw0rd\",\n  \"email\": \"brandamin@bbs.com\",\n  \"active\": 1,\n  \"restricted\": 0,\n  \"brand\": {{brandId}},\n  \"timezone\": 145\n}"
						},
						"url": {
							"raw": "{{platform_api_url}}/administrators",
							"host": [
								"{{platform_api_url}}"
							],
							"path": [
								"administrators"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Brand Authorization Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token field\"] = jsonData.token !== undefined;",
									"",
									"postman.setGlobalVariable(\"brand_api_auth\", 'Bearer ' + jsonData.token);",
									"postman.setGlobalVariable(\"brand_api_token\", jsonData.token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "token",
									"value": "{{platform_api_token}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "brandadmin",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{brand_api_url}}/token/exchange",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"token",
								"exchange"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Brand Trunk Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{platform_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brand\": {{brandId}},\n  \"proxyTrunk\": 1\n}"
						},
						"url": {
							"raw": "{{platform_api_url}}/proxy_trunks_rel_brands",
							"host": [
								"{{platform_api_url}}"
							],
							"path": [
								"proxy_trunks_rel_brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Queues",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{platform_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brand\": {{brandId}},\n  \"feature\": 1\n}"
						},
						"url": {
							"raw": "{{platform_api_url}}/features_rel_brands",
							"host": [
								"{{platform_api_url}}"
							],
							"path": [
								"features_rel_brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Recordings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{platform_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brand\": {{brandId}},\n  \"feature\": 2\n}"
						},
						"url": {
							"raw": "{{platform_api_url}}/features_rel_brands",
							"host": [
								"{{platform_api_url}}"
							],
							"path": [
								"features_rel_brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Faxes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{platform_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brand\": {{brandId}},\n  \"feature\": 3\n}"
						},
						"url": {
							"raw": "{{platform_api_url}}/features_rel_brands",
							"host": [
								"{{platform_api_url}}"
							],
							"path": [
								"features_rel_brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Friends",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{platform_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brand\": {{brandId}},\n  \"feature\": 4\n}"
						},
						"url": {
							"raw": "{{platform_api_url}}/features_rel_brands",
							"host": [
								"{{platform_api_url}}"
							],
							"path": [
								"features_rel_brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Conferences",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{platform_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brand\": {{brandId}},\n  \"feature\": 5\n}"
						},
						"url": {
							"raw": "{{platform_api_url}}/features_rel_brands",
							"host": [
								"{{platform_api_url}}"
							],
							"path": [
								"features_rel_brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Billing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{platform_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brand\": {{brandId}},\n  \"feature\": 6\n}"
						},
						"url": {
							"raw": "{{platform_api_url}}/features_rel_brands",
							"host": [
								"{{platform_api_url}}"
							],
							"path": [
								"features_rel_brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Invoices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{platform_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brand\": {{brandId}},\n  \"feature\": 7\n}"
						},
						"url": {
							"raw": "{{platform_api_url}}/features_rel_brands",
							"host": [
								"{{platform_api_url}}"
							],
							"path": [
								"features_rel_brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Progress",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{platform_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brand\": {{brandId}},\n  \"feature\": 8\n}"
						},
						"url": {
							"raw": "{{platform_api_url}}/features_rel_brands",
							"host": [
								"{{platform_api_url}}"
							],
							"path": [
								"features_rel_brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Residential",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{platform_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brand\": {{brandId}},\n  \"feature\": 9\n}"
						},
						"url": {
							"raw": "{{platform_api_url}}/features_rel_brands",
							"host": [
								"{{platform_api_url}}"
							],
							"path": [
								"features_rel_brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Retail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{platform_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brand\": {{brandId}},\n  \"feature\": 11\n}"
						},
						"url": {
							"raw": "{{platform_api_url}}/features_rel_brands",
							"host": [
								"{{platform_api_url}}"
							],
							"path": [
								"features_rel_brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: vPBX",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{platform_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brand\": {{brandId}},\n  \"feature\": 12\n}"
						},
						"url": {
							"raw": "{{platform_api_url}}/features_rel_brands",
							"host": [
								"{{platform_api_url}}"
							],
							"path": [
								"features_rel_brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Number Transformation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"transformationRulesetId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Spanish\",\n  \"internationalCode\": \"00\",\n  \"trunkPrefix\": \"\",\n  \"areaCode\": \"\",\n  \"nationalLen\": 9,\n  \"generateRules\": true,\n  \"name\": {\n     \"en\": \"Spanish Operator\",\n     \"es\": \"Operador Español\"\n  },\n  \"brand\": {{brandId}},\n  \"country\": 70\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/transformation_rule_sets",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"transformation_rule_sets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Number Transformation (USA999)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"transformationUSA999\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"USA (Area 999)\",\n  \"internationalCode\": \"011\",\n  \"trunkPrefix\": \"1\",\n  \"areaCode\": \"999\",\n  \"nationalLen\": 9,\n  \"generateRules\": true,\n  \"name\": {\n     \"en\": \"USA (Area 999)\",\n     \"es\": \"USA (Area 999)\"\n  },\n  \"brand\": {{brandId}},\n  \"country\": 235\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/transformation_rule_sets",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"transformation_rule_sets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create DDI Provider",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"ddiProviderId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"BBS DDI Provider\",\n  \"name\": \"BBS DDI Provider\",\n  \"externallyRated\": false,\n  \"brand\": {{brandId}},\n  \"transformationRuleSet\": 70,\n  \"proxyTrunk\": 1\n}\n"
						},
						"url": {
							"raw": "{{brand_api_url}}/ddi_providers",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"ddi_providers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create DDI Provider Address 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"ddiProviderAddressId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ddiProvider\": {{ddiProviderId}},\n  \"ip\": \"151.80.176.3\"\n}\n"
						},
						"url": {
							"raw": "{{brand_api_url}}/ddi_provider_addresses",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"ddi_provider_addresses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create DDI Provider Address 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"ddiProviderAddressId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ddiProvider\": {{ddiProviderId}},\n  \"ip\": \"151.80.161.20\"\n}\n"
						},
						"url": {
							"raw": "{{brand_api_url}}/ddi_provider_addresses",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"ddi_provider_addresses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Carrier",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"carrierId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"BBS Carrier\",\n  \"name\": \"BBS Carrier\",\n  \"externallyRated\": false,\n  \"brand\": {{brandId}},\n  \"transformationRuleSet\": 70,\n  \"proxyTrunk\": 1\n}\n"
						},
						"url": {
							"raw": "{{brand_api_url}}/carriers",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"carriers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Carrier Server",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"peerServerId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sipProxy\": \"127.0.0.1\",\t\n  \"carrier\": {{carrierId}},\n  \"brand\": {{brandId}}\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/carrier_servers",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"carrier_servers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Routing pattern ES",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"routingPatternESId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"prefix\": \"+34\",\n  \"name\": {\n  \t\"en\": \"Spain\",  \t\n  \t\"es\": \"España\"\n  },\n  \"description\": {\n  \t\"en\": \"BBS - Spain\",  \t\n  \t\"es\": \"BBS - España\"\n  },\n  \"brand\": {{brandId}}\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/routing_patterns",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"routing_patterns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Outgoing Routing ES",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"outgoingRouteESId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"pattern\",\n  \"priority\": 1,\n  \"brand\": {{brandId}},\n  \"carrier\": {{carrierId}},\n  \"routingPattern\": {{routingPatternESId}}\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/outgoing_routings",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"outgoing_routings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Routing pattern US",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"routingPatternUSId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"prefix\": \"+1\",\n  \"name\": {\n  \t\"en\": \"USA\",  \t\n  \t\"es\": \"Estados Unidos\"\n  },\n  \"description\": {\n  \t\"en\": \"BBS - Usa\",  \t\n  \t\"es\": \"BBS - Estados Unidos\"\n  },\n  \"brand\": {{brandId}}\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/routing_patterns",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"routing_patterns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Outgoing Routing US",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"outgoingRouteUSId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"pattern\",\n  \"priority\": 2,\n  \"brand\": {{brandId}},\n  \"carrier\": {{carrierId}},\n  \"routingPattern\": {{routingPatternUSId}}\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/outgoing_routings",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"outgoing_routings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Destination ES",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"destinationESId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": {\n  \t\"en\": \"Spain\",\n  \t\"es\": \"España\"\n  },\n  \"prefix\": \"+34\",\n  \"brand\": {{brandId}}\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/destinations",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"destinations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Destination US",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"destinationUSId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": {\n  \t\"en\": \"USA\",\n  \t\"es\": \"Estados Unidos\"\n  },\n  \"prefix\": \"+1\",\n  \"brand\": {{brandId}}\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/destinations",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"destinations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Destination Rate Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"destinationRateGroupId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": {\n  \t\"en\": \"Standard\",\n  \t\"es\": \"Estándar\"\n  },\n  \"description\": {\n  \t\"en\": \"Standard\",\n  \t\"es\": \"Estándar\"\n  },\n  \"brand\": {{brandId}}\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/destination_rate_groups",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"destination_rate_groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Destination Rate ES",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cost\": \"0.3\",\n  \"connectFee\": \"0.001\",\n  \"rateIncrement\": \"1s\",\n  \"groupIntervalStart\": \"0s\",\n  \"destination\": {{destinationESId}},\n  \"destinationRateGroup\": {{destinationRateGroupId}}\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/destination_rates",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"destination_rates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Destination Rate US",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cost\": \"0.3\",\n  \"connectFee\": \"0.001\",\n  \"rateIncrement\": \"1s\",\n  \"groupIntervalStart\": \"0s\",\n  \"destination\": {{destinationUSId}},\n  \"destinationRateGroup\": {{destinationRateGroupId}}\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/destination_rates",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"destination_rates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Rating Plan Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"ratingPlanGroupId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": {\n  \t\"en\": \"Standard 2017\",\n  \t\"es\": \"Estándar 2017\"\n  },\n  \"description\": {\n  \t\"en\": \"\",\n  \t\"es\": \"\"\n  },\n  \"brand\": {{brandId}}\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/rating_plan_groups",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"rating_plan_groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Rating Plan Destination rate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"weight\": \"1\",\n  \"timingType\": \"always\",\n  \"timeIn\": \"01-01-2018\",\n  \"ratingPlanGroup\": {{ratingPlanGroupId}},\n  \"destinationRateGroup\": {{destinationRateGroupId}}\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/rating_plans",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"rating_plans"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "0010 - vPBX Client",
			"item": [
				{
					"name": "Create BBS Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"companyId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"vpbx\",\n  \"name\": \"BBS - Company for Black Box SIP tests\",\n  \"domainUsers\": \"bbs.ivozprovider.local\",\n  \"nif\": \"09876543210ART\",\n  \"externalMaxCalls\": 2,\n  \"postalAddress\": \"Company address\",\n  \"postalCode\": \"48902\",\n  \"town\": \"Company town\",\n  \"province\": \"Company province\",\n  \"onDemandRecord\": 2,\n  \"onDemandRecordCode\": \"234\",\n  \"countryName\": \"Company country\",\n  \"ipfilter\": false,\n  \"defaultTimezone\": 1,\n  \"transformationRuleSet\": 70,\n  \"brand\": {{brandId}},\n  \"country\": 70,\n  \"currency\": 1\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/companies",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create BBS Company Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"brandAdminId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"companyadmin\",\n  \"pass\": \"unusedp4ssw0rd\",\n  \"email\": \"companyadmin@bbs.com\",\n  \"active\": 1,\n  \"restricted\": 0,\n  \"brand\": {{brandId}},\n  \"company\": {{companyId}},\n  \"timezone\": 145\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/administrators",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"administrators"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Company Authorization Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token field\"] = jsonData.token !== undefined;",
									"",
									"postman.setGlobalVariable(\"client_api_auth\", 'Bearer ' + jsonData.token);",
									"postman.setGlobalVariable(\"client_api_token\", jsonData.token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "token",
									"value": "{{brand_api_token}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "companyadmin",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{client_api_url}}/token/exchange",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"token",
								"exchange"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Company Rating Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"activationTime\": \"2018-01-01 00:00:00.000\",\n  \"company\": {{companyId}},\n  \"ratingPlanGroup\": {{ratingPlanGroupId}}\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/rating_profiles",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"rating_profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get BBS Company data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"postman.setGlobalVariable(\"companyData\", responseBody);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{brand_api_url}}/companies/{{companyId}}",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"companies",
								"{{companyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Company Feature: Queues",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"company\": {{companyId}},\n  \"feature\": 1\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/features_rel_companies",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"features_rel_companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Company Feature: Recordings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"company\": {{companyId}},\n  \"feature\": 2\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/features_rel_companies",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"features_rel_companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Company Feature: Faxes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"company\": {{companyId}},\n  \"feature\": 3\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/features_rel_companies",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"features_rel_companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Company Feature: Friends",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"company\": {{companyId}},\n  \"feature\": 4\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/features_rel_companies",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"features_rel_companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Company Feature: Conferences",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"company\": {{companyId}},\n  \"feature\": 5\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/features_rel_companies",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"features_rel_companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Company Feature: Progress",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"company\": {{companyId}},\n  \"feature\": 8\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/features_rel_companies",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"features_rel_companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Alice Terminal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"aliceTerminalId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"alice\",\n  \"directMediaMethod\": \"invite\",\n  \"password\": \"4l1C3P4sSw0rd+\",\n  \"company\": {{companyId}},\n  \"terminalModel\": 5\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/terminals",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"terminals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Alice User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"aliceUserId\", jsonData.id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Alice\",\n  \"lastname\": \"Allison\",\n  \"email\": \"alice@bbs.ivozprovider.local\",\n  \"pass\": \"4l1c3p4ssw0rd\",\n  \"company\": {{companyId}},\n  \"terminal\": {{aliceTerminalId}},\n  \"transformationRuleSet\": 70,\n  \"timezone\": 70\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/users",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Alice Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"aliceExtensionId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"1001\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"user\": {{aliceUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/extensions",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Alice DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"aliceDDIId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ddi\": \"999661001\",\n  \"company\": {{companyId}},\n  \"brand\": {{brandId}},\n  \"ddiProvider\": {{ddiProviderId}},\n  \"country\": 70\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/ddis",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"ddis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Route Alice DDI to Alice",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"routeType\": \"user\",\n  \"user\": {{aliceUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/ddis/{{aliceDDIId}}",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"ddis",
								"{{aliceDDIId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Bob Terminal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"bobTerminalId\", jsonData.id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"bob\",\n  \"directMediaMethod\": \"invite\",\n  \"password\": \"b0bP4sSW0rd+\",\n  \"company\": {{companyId}},\n  \"terminalModel\": 5\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/terminals",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"terminals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Bob User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"bobUserId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Bob\",\n  \"lastname\": \"Bobson\",\n  \"email\": \"bob@bbs.ivozprovider.local\",\n  \"pass\": \"b0bp4ssw0rd\",\n  \"company\": {{companyId}},\n  \"terminal\": {{bobTerminalId}},\n  \"transformationRuleSet\": 70,  \n  \"timezone\": 70\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/users",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Bob Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"bobExtensionId\", jsonData.id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"1002\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"user\": {{bobUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/extensions",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Bob DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"bobDDIId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ddi\": \"999661002\",\n  \"company\": {{companyId}},\n  \"brand\": {{brandId}},\n  \"ddiProvider\": {{ddiProviderId}},\n  \"country\": 70\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/ddis",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"ddis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Route Bob DDI to Bob",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"routeType\": \"user\",\n  \"user\": {{bobUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/ddis/{{bobDDIId}}",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"ddis",
								"{{bobDDIId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Charlie Terminal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"charlieTerminalId\", jsonData.id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"charlie\",\n  \"directMediaMethod\": \"invite\",\n  \"password\": \"Ch4rL1Ep4SSword+\",\n  \"company\": {{companyId}},\n  \"terminalModel\": 5\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/terminals",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"terminals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Charlie User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"charlieUserId\", jsonData.id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Charlie\",\n  \"lastname\": \"Charlieson\",\n  \"email\": \"charlie@bbs.ivozprovider.local\",\n  \"pass\": \"ch4rl1ep4ssw0rd\",\n  \"company\": {{companyId}},\n  \"terminal\": {{charlieTerminalId}},\n  \"transformationRuleSet\": 70,  \n  \"timezone\": 70\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/users",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Charlie Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"charlieExtensionId\", jsonData.id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"1003\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"user\": {{charlieUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/extensions",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Charlie DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"charlieDDIId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ddi\": \"999661003\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"brand\": {{brandId}},\n  \"user\": {{charlieUserId}},\n  \"ddiProvider\": {{ddiProviderId}},\n  \"country\": 70\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/ddis",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"ddis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Route Charlie DDI to Charlie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"routeType\": \"user\",\n  \"user\": {{charlieUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/ddis/{{charlieDDIId}}",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"ddis",
								"{{charlieDDIId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Dave Terminal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"daveTerminalId\", jsonData.id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"dave\",\n  \"directMediaMethod\": \"invite\",\n  \"password\": \"D4vEp4SSw0rd+\",\n  \"company\": {{companyId}},\n  \"terminalModel\": 5\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/terminals",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"terminals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Dave User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"daveUserId\", jsonData.id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Dave\",\n  \"lastname\": \"Daveson\",\n  \"email\": \"deve@bbs.ivozprovider.local\",\n  \"pass\": \"d4v3p4ssw0rd\",\n  \"company\": {{companyId}},\n  \"terminal\": {{daveTerminalId}},\n  \"transformationRuleSet\": {{transformationUSA999}},\n  \"timezone\": 70\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/users",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Dave Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"daveExtensionId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"number\": \"1004\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"user\": {{daveUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/extensions",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Dave DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"daveDDIId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"ddi\": \"999661004\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"brand\": {{brandId}},\n  \"user\": {{daveUserId}},\n  \"ddiProvider\": {{ddiProviderId}},\n  \"country\": 235\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/ddis",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"ddis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Route Dave DDI to Dave",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"routeType\": \"user\",\n  \"user\": {{daveUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/ddis/{{daveDDIId}}",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"ddis",
								"{{daveDDIId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Eve Terminal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"eveTerminalId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"eve\",\n  \"directMediaMethod\": \"invite\",\n  \"password\": \"Ev3p4SSw0rd+\",\n  \"company\": {{companyId}},\n  \"terminalModel\": 5\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/terminals",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"terminals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Eve User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"eveUserId\", jsonData.id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Eve\",\n  \"lastname\": \"Eveson\",\n  \"email\": \"eve@bbs.ivozprovider.local\",\n  \"pass\": \"3v3p4ssw0rd\",\n  \"company\": {{companyId}},\n  \"terminal\": {{eveTerminalId}},\n  \"transformationRuleSet\": {{transformationUSA999}},\n  \"timezone\": 70\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/users",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Eve Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"eveExtensionId\", jsonData.id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"1005\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"user\": {{eveUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/extensions",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Eve DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"eveDDIId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ddi\": \"999661005\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"brand\": {{brandId}},\n  \"user\": {{eveUserId}},\n  \"ddiProvider\": {{ddiProviderId}},\n  \"country\": 235\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/ddis",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"ddis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Route Eve DDI to Eve",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"routeType\": \"user\",\n  \"user\": {{eveUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/ddis/{{eveDDIId}}",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"ddis",
								"{{eveDDIId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Boss/Assistant MatchList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"bossAssistantWatchListId\", jsonData.id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"White List for Boss Frank\",\n  \"company\": {{companyId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/match_lists",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"match_lists"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Boss/Assistant MatchList Pattern Ext",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Alice DDI Number\",\n  \"type\": \"number\",\n  \"numbervalue\": \"999661001\",\n  \"matchList\": {{bossAssistantWatchListId}},\n  \"numberCountry\": 70\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/match_list_patterns",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"match_list_patterns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Boss/Assistant MatchList Pattern Int",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Alice Extension Number\",\n  \"type\": \"regexp\",\n  \"regexp\": \"^1001$\",\n  \"matchList\": {{bossAssistantWatchListId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/match_list_patterns",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"match_list_patterns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Frank Terminal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"frankTerminalId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"frank\",\n  \"directMediaMethod\": \"invite\",\n  \"password\": \"fr4Nkp4SSw0rd+\",\n  \"company\": {{companyId}},\n  \"terminalModel\": 5\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/terminals",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"terminals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Frank User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"frankUserId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Frank\",\n  \"lastname\": \"Frankson\",\n  \"email\": \"frank@bbs.ivozprovider.local\",\n  \"pass\": \"fr4nkp4ssw0rd\",\n  \"isBoss\": true,\n  \"company\": {{companyId}},\n  \"bossAssistant\": {{daveUserId}},\n  \"bossAssistantWhiteList\": {{bossAssistantWatchListId}},\n  \"transformationRuleSet\": {{transformationUSA999}},\n  \"terminal\": {{frankTerminalId}},\n  \"timezone\": 1\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/users",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Frank Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"frankExtensionId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"1006\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"user\": {{frankUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/extensions",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Frank DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"frankDDIId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"ddi\": \"999661006\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"brand\": {{brandId}},\n  \"user\": {{frankUserId}},\n  \"ddiProvider\": {{ddiProviderId}},\n  \"country\": 70\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/ddis",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"ddis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Route Frank DDI to Frank",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"routeType\": \"user\",\n  \"user\": {{frankUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/ddis/{{frankDDIId}}",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"ddis",
								"{{frankDDIId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Default Company DDI",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var companyData = JSON.parse(postman.getGlobalVariable(\"companyData\"));",
									"",
									"companyData.outgoingDdi = postman.getGlobalVariable(\"aliceDDIId\");",
									"",
									"postman.setGlobalVariable(\"companyData\", JSON.stringify(companyData));",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"console.log(postman.getGlobalVariable(\"companyDataJson\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{companyData}}"
						},
						"url": {
							"raw": "{{brand_api_url}}/companies/{{companyId}}",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"companies",
								"{{companyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Friend",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"friendId\", jsonData.id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"friend\",\n  \"description\": \"BBS - Friend\",\n  \"transport\": \"udp\",\n  \"password\": \"fr13ndp4SSW0rd+\",\n  \"priority\": 1,\n  \"directConnectivity\": \"no\",\n  \"company\": {{companyId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/friends",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"friends"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Friend Pattern",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"friendPatternId\", jsonData.id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"2XXX Extensions\",\n  \"regExp\": \"^2[0-9]{3}$\",\n  \"friend\": {{friendId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/friends_patterns",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"friends_patterns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Friend Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"friendExtensionId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"2001\",\n  \"routeType\": \"friend\",\n  \"company\": {{companyId}},\n  \"friendValue\": \"2001\"\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/extensions",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Route Lock",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"routeLockId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"BBS Route Lock\",\n  \"description\": \"For testing Conditional Routes\",\n  \"open\": false,\n  \"company\": {{companyId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/route_locks",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"route_locks"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "0011 - IVR",
			"item": [
				{
					"name": "Create IVR Generic",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"ivrCommonId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"BBS Generic IVR\",\n  \"timeout\": 5,\n  \"maxDigits\": 4,\n  \"allowExtensions\": true,\n  \"noInputRouteType\": \"extension\",\n  \"errorRouteType\": \"number\",\n  \"errorNumberValue\": \"999661001\",\n  \"company\": {{companyId}},\n  \"noInputExtension\": {{daveExtensionId}},\n  \"errorNumberCountry\": 70\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/ivrs",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"ivrs"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Create IVR Generic Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"ivrCommonExtensionId\", jsonData.id);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"600\",\n  \"routeType\": \"ivr\",\n  \"company\": {{companyId}},\n  \"ivr\": {{ivrCommonId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/extensions",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create IVR Custom",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"ivrCustomId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"BBS Custom IVR\",\n  \"timeout\": 5,\n  \"maxDigits\": 1,\n  \"noInputRouteType\": \"extension\",\n  \"errorRouteType\": \"extension\",\n  \"company\": {{companyId}},\n  \"noInputExtension\": {{daveExtensionId}},\n  \"errorExtension\": {{eveExtensionId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/ivrs",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"ivrs"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Create IVR Custom Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"ivrCustomExtensionId\", jsonData.id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"601\",\n  \"routeType\": \"ivr\",\n  \"company\": {{companyId}},\n  \"ivr\": {{ivrCustomId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/extensions",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create IVR Custom Entry 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"entry\": \"1\",\n  \"routeType\": \"extension\",\n  \"ivr\": {{ivrCustomId}},\n  \"extension\": {{aliceExtensionId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/ivr_entries",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"ivr_entries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create IVR Custom Entry 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"entry\": \"5\",\n  \"routeType\": \"extension\",\n  \"ivr\": {{ivrCustomId}},\n  \"extension\": {{eveExtensionId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/ivr_entries",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"ivr_entries"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "0012 - Conference",
			"item": [
				{
					"name": "Create Conference Room",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"conferenceRoomId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"BBS Conference Room\",\n  \"pinProtected\": true,\n  \"pinCode\": \"1234\",\n  \"maxMembers\": 2,\n  \"company\": {{companyId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/conference_rooms",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"conference_rooms"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Create Conference Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"ivrCommonExtensionId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"number\": \"500\",\n  \"routeType\": \"conferenceRoom\",\n  \"company\": {{companyId}},\n  \"conferenceRoom\": {{conferenceRoomId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/extensions",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "0013 - Pickup",
			"item": [
				{
					"name": "Create Pickup Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"pickupGroupId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"BBS Pickup Group\",\n  \"company\": {{companyId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/pick_up_groups",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"pick_up_groups"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Add Alice to Pickup Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"pickUpGroup\": {{pickupGroupId}},\n  \"user\": {{aliceUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/pick_up_rel_users",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"pick_up_rel_users"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Add Bob to Pickup Group copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"pickUpGroup\": {{pickupGroupId}},\n  \"user\": {{bobUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/pick_up_rel_users",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"pick_up_rel_users"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Add Charlie to Pickup Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"pickUpGroup\": {{pickupGroupId}},\n  \"user\": {{charlieUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/pick_up_rel_users",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"pick_up_rel_users"
							]
						},
						"description": "POST"
					},
					"response": []
				}
			]
		},
		{
			"name": "0014 - HuntGroup",
			"item": [
				{
					"name": "Create HungGroup RingAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"huntGroupRingAllId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"BBS RingAll HuntGroup\",\n  \"description\": \"BBS RingAll HuntGroup\",\n  \"strategy\": \"ringAll\",\n  \"ringAllTimeout\": 10,\n  \"noAnswerTargetType\": \"extension\",\n  \"company\": {{companyId}},\n  \"noAnswerExtension\": {{eveExtensionId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/hunt_groups",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"hunt_groups"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Create HungGroup RingAll Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"700\",\n  \"routeType\": \"huntGroup\",\n  \"company\": {{companyId}},\n  \"huntGroup\": {{huntGroupRingAllId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/extensions",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add HungGroup RingAll User Bob",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"huntGroup\": {{huntGroupRingAllId}},\n  \"routeType\": \"user\",\n  \"user\": {{bobUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/hunt_groups_rel_users",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"hunt_groups_rel_users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add HungGroup RingAll User Charlie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"huntGroup\": {{huntGroupRingAllId}},\n  \"routeType\": \"user\",\n  \"user\": {{charlieUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/hunt_groups_rel_users",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"hunt_groups_rel_users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add HungGroup RingAll User Dave",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"huntGroup\": {{huntGroupRingAllId}},\n  \"routeType\": \"user\",\n  \"user\": {{daveUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/hunt_groups_rel_users",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"hunt_groups_rel_users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create HungGroup RR",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"huntGroupRRId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"BBS RR HuntGroup\",\n  \"description\": \"BBS RR HuntGroup\",\n  \"strategy\": \"roundRobin\",\n  \"noAnswerTargetType\": \"extension\",\n  \"company\": {{companyId}},\n  \"noAnswerExtension\": {{eveExtensionId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/hunt_groups",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"hunt_groups"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Create HungGroup RR Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"701\",\n  \"routeType\": \"huntGroup\",\n  \"company\": {{companyId}},\n  \"huntGroup\": {{huntGroupRRId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/extensions",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add HungGroup RR User Bob",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"timeoutTime\": 3,\n  \"priority\": 1,\n  \"huntGroup\": {{huntGroupRRId}},\n  \"routeType\": \"user\",\n  \"user\": {{bobUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/hunt_groups_rel_users",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"hunt_groups_rel_users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add HungGroup RR User Charlie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"timeoutTime\": 3,\n  \"priority\": 2,\n  \"huntGroup\": {{huntGroupRRId}},\n  \"routeType\": \"user\",\n  \"user\": {{charlieUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/hunt_groups_rel_users",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"hunt_groups_rel_users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add HungGroup RR User Dave",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"timeoutTime\": 3,\n  \"priority\": 3,\n  \"huntGroup\": {{huntGroupRRId}},\n  \"routeType\": \"user\",\n  \"user\": {{daveUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/hunt_groups_rel_users",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"hunt_groups_rel_users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "0015 - Conditional Routes",
			"item": [
				{
					"name": "Create Conditional Route",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"conditionalRouteId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"BBS Conditional Route\",\n  \"routetype\": \"user\",\n  \"company\": {{companyId}},\n  \"user\": {{daveUserId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/conditional_routes",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"conditional_routes"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Create Conditional Route Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"conditionalRouteExtensionId\", jsonData.id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"800\",\n  \"routeType\": \"conditional\",\n  \"company\": {{companyId}},\n  \"conditionalRoute\": {{conditionalRouteId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/extensions",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Conditional Route Codition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"conditionalRouteConditionId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"priority\": 1,\n  \"routeType\": \"extension\",\n  \"conditionalRoute\": {{conditionalRouteId}},\n  \"extension\": {{aliceExtensionId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/conditional_routes_conditions",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"conditional_routes_conditions"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Add RouteLock to Condition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"condition\": {{conditionalRouteConditionId}},\n  \"routeLock\": {{routeLockId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/conditional_routes_conditions_rel_route_locks",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"conditional_routes_conditions_rel_route_locks"
							]
						},
						"description": "POST"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "0016 - Call Forward Settings",
			"item": [
				{
					"name": "Call Forward Eve Busy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"callTypeFilter\": \"internal\",\n  \"callForwardType\": \"busy\",\n  \"targetType\": \"extension\",\n  \"user\": {{eveUserId}},\n  \"extension\": {{charlieExtensionId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/call_forward_settings",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"call_forward_settings"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Call Forward Eve NoAnswer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"callTypeFilter\": \"internal\",\n  \"callForwardType\": \"noAnswer\",\n  \"targetType\": \"extension\",\n  \"noAnswerTimeout\": 5,\n  \"user\": {{eveUserId}},\n  \"extension\": {{bobExtensionId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/call_forward_settings",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"call_forward_settings"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Call Forward Eve Unregistered",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"callTypeFilter\": \"internal\",\n  \"callForwardType\": \"userNotRegistered\",\n  \"targetType\": \"extension\",\n  \"user\": {{eveUserId}},\n  \"extension\": {{daveExtensionId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/call_forward_settings",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"call_forward_settings"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Call Forward Charlie Inconditional External",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"callTypeFilter\": \"external\",\n  \"callForwardType\": \"inconditional\",\n  \"targetType\": \"number\",\n  \"user\": {{charlieUserId}},\n  \"numberCountry\": 70,\n  \"numberValue\": \"999661001\"\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/call_forward_settings",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"call_forward_settings"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Call Forward Friend Unregisted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"callTypeFilter\": \"internal\",\n  \"callForwardType\": \"userNotRegistered\",\n  \"targetType\": \"extension\",\n  \"friend\": {{friendId}},\n  \"extension\": {{charlieExtensionId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/call_forward_settings",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"call_forward_settings"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Call Forward Friend Busy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"callTypeFilter\": \"internal\",\n  \"callForwardType\": \"busy\",\n  \"targetType\": \"extension\",\n  \"friend\": {{friendId}},\n  \"extension\": {{daveExtensionId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/call_forward_settings",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"call_forward_settings"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Call Forward Friend NoAnswer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{client_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"callTypeFilter\": \"internal\",\n  \"callForwardType\": \"noAnswer\",\n  \"targetType\": \"extension\",\n  \"friend\": {{friendId}},\n  \"extension\": {{bobExtensionId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/call_forward_settings",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"call_forward_settings"
							]
						},
						"description": "POST"
					},
					"response": []
				}
			]
		},
		{
			"name": "0020 - Residential Data",
			"item": [
				{
					"name": "Create BBS Residential Client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"residentialId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"residential\",\n  \"name\": \"BBS - Residential for Black Box SIP tests\",\n  \"nif\": \"09876543210ART\",\n  \"externalMaxCalls\": 2,\n  \"postalAddress\": \"Residential address\",\n  \"postalCode\": \"48902\",\n  \"town\": \"Residential town\",\n  \"province\": \"Residential province\",\n  \"countryName\": \"Residential country\",\n  \"defaultTimezone\": 1,\n  \"onDemandRecord\": 2,\n  \"onDemandRecordCode\": \"234\",\n  \"ipfilter\": false,\n  \"transformationRuleSet\": 70,\n  \"brand\": {{brandId}},\n  \"country\": 70\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/companies",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create BBS Residential Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"brandAdminId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"residentialadmin\",\n  \"pass\": \"unusedp4ssw0rd\",\n  \"email\": \"residentialadmin@bbs.com\",\n  \"active\": 1,\n  \"restricted\": 0,\n  \"brand\": {{brandId}},\n  \"company\": {{residentialId}},\n  \"timezone\": 145\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/administrators",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"administrators"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Residential Authorization Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token field\"] = jsonData.token !== undefined;",
									"",
									"postman.setGlobalVariable(\"residential_api_auth\", 'Bearer ' + jsonData.token);",
									"postman.setGlobalVariable(\"residential_api_token\", jsonData.token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "token",
									"value": "{{brand_api_token}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "residentialadmin",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{client_api_url}}/token/exchange",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"token",
								"exchange"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add  Residential Rating Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"activationTime\": \"2018-01-01 00:00:00.000\",\n  \"company\": {{residentialId}},\n  \"ratingPlanGroup\": {{ratingPlanGroupId}}\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/rating_profiles",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"rating_profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get BBS Residential data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"postman.setGlobalVariable(\"residentialData\", responseBody);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{brand_api_url}}/companies/{{residentialId}}",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"companies",
								"{{residentialId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Residential Feature: Recordings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"company\": {{residentialId}},\n  \"feature\": 2\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/features_rel_companies",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"features_rel_companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Residential Feature: Faxes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"company\": {{residentialId}},\n  \"feature\": 3\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/features_rel_companies",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"features_rel_companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Residential Feature: Progress",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"company\": {{residentialId}},\n  \"feature\": 8\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/features_rel_companies",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"features_rel_companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Residential Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"residentialDeviceId\", jsonData.id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"20000\",\n  \"transport\": \"udp\",\n  \"password\": \"r3S1d3nT14lP4sSW0rd+\",\n  \"directConnectivity\": \"no\",\n  \"brand\": {{brandId}},\n  \"company\": {{residentialId}}\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/residential_devices",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"residential_devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Residential DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"residentialDDIId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ddi\": \"999920000\",\n  \"company\": {{residentialId}},\n  \"brand\": {{brandId}},\n  \"ddiProvider\": {{ddiProviderId}},\n  \"country\": 235\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/ddis",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"ddis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Route Residential DDI to Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{residential_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"routeType\": \"residential\",\n  \"residentialDevice\": {{residentialDeviceId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/ddis/{{residentialDDIId}}",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"ddis",
								"{{residentialDDIId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Default Residential Client DDI",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var residentialData = JSON.parse(postman.getGlobalVariable(\"residentialData\"));",
									"",
									"residentialData.outgoingDdi = postman.getGlobalVariable(\"residentialDDIId\");",
									"",
									"postman.setGlobalVariable(\"residentialData\", JSON.stringify(residentialData));",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{residentialData}}"
						},
						"url": {
							"raw": "{{brand_api_url}}/companies/{{residentialId}}",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"companies",
								"{{residentialId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "0030 - Retail Data",
			"item": [
				{
					"name": "Create BBS Retail Client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"retailId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"retail\",\n  \"name\": \"BBS - Retail for Black Box SIP tests\",\n  \"nif\": \"09876543210ART\",\n  \"externalMaxCalls\": 2,\n  \"postalAddress\": \"Retail address\",\n  \"postalCode\": \"48902\",\n  \"town\": \"Retail town\",\n  \"province\": \"Retail province\",\n  \"countryName\": \"Retail country\",\n  \"defaultTimezone\": 1,\n  \"ipfilter\": false,\n  \"transformationRuleSet\": 70,\n  \"brand\": {{brandId}},\n  \"country\": 70\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/companies",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create BBS Retail Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"brandAdminId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"retailadmin\",\n  \"pass\": \"unusedp4ssw0rd\",\n  \"email\": \"retailadmin@bbs.com\",\n  \"active\": 1,\n  \"restricted\": 0,\n  \"brand\": {{brandId}},\n  \"company\": {{retailId}},\n  \"timezone\": 145\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/administrators",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"administrators"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Retail Authorization Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token field\"] = jsonData.token !== undefined;",
									"",
									"postman.setGlobalVariable(\"retail_api_auth\", 'Bearer ' + jsonData.token);",
									"postman.setGlobalVariable(\"retail_api_token\", jsonData.token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "token",
									"value": "{{brand_api_token}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "retailadmin",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{client_api_url}}/token/exchange",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"token",
								"exchange"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add  Retail Rating Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"activationTime\": \"2018-01-01 00:00:00.000\",\n  \"company\": {{retailId}},\n  \"ratingPlanGroup\": {{ratingPlanGroupId}}\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/rating_profiles",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"rating_profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get BBS Retail data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"postman.setGlobalVariable(\"retailData\", responseBody);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{brand_api_url}}/companies/{{retailId}}",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"companies",
								"{{retailId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Retail Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"retailAccountId\", jsonData.id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"999666001\",\n  \"transport\": \"udp\",\n  \"password\": \"r3t41lP4sSW0rd+\",\n  \"directConnectivity\": \"no\",\n  \"brand\": {{brandId}},\n  \"company\": {{retailId}}\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/retail_accounts",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"retail_accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Retail DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"retailDDIId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ddi\": \"999666001\",\n  \"routeType\": \"retail\",\n  \"company\": {{retailId}},\n  \"brand\": {{brandId}},\n  \"retailAccount\": {{retailAccountId}},\n  \"ddiProvider\": {{ddiProviderId}},\n  \"country\": 70\n}"
						},
						"url": {
							"raw": "{{brand_api_url}}/ddis",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"ddis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Route Retail DDI to Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{retail_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"routeType\": \"retail\",\n  \"retailAccount\": {{retailAccountId}}\n}"
						},
						"url": {
							"raw": "{{client_api_url}}/ddis/{{retailDDIId}}",
							"host": [
								"{{client_api_url}}"
							],
							"path": [
								"ddis",
								"{{retailDDIId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Default Retail Client DDI",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var retailData = JSON.parse(postman.getGlobalVariable(\"retailData\"));",
									"",
									"retailData.outgoingDdi = postman.getGlobalVariable(\"retailDDIId\");",
									"",
									"postman.setGlobalVariable(\"retailData\", JSON.stringify(retailData));",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{brand_api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{retailData}}"
						},
						"url": {
							"raw": "{{brand_api_url}}/companies/{{retailId}}",
							"host": [
								"{{brand_api_url}}"
							],
							"path": [
								"companies",
								"{{retailId}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"exec": [
					""
				],
				"type": "text/javascript"
			}
		},
		{
			"listen": "test",
			"script": {
				"exec": [
					""
				],
				"type": "text/javascript"
			}
		}
	]
}