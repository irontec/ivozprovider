{
	"info": {
		"name": "IvozProvider - BBS Dataset (artemis)",
		"_postman_id": "834679ce-4b90-1534-7752-d82a3a462e43",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "0000 - Authorization",
			"item": [
				{
					"name": "Get Authorization Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token field\"] = jsonData.token !== undefined;",
									"",
									"postman.setGlobalVariable(\"api_auth\", 'Bearer ' + jsonData.token);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"type": "text",
									"value": "{{api_username}}"
								},
								{
									"key": "password",
									"value": "{{api_password}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api_url}}/admin_login",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"admin_login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "0001 - Brand Data",
			"item": [
				{
					"name": "Create BBS Brand",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"brandId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"ZZZ - Test Brand for BBS\",\n  \"domainUsers\": \"retail-bbs.ivozprovider.local\",\n  \"language\": 2,\n  \"defaultTimezone\": 145,\n  \"transformationRuleSet\": 70,\n  \"invoice\": {\n    \"nif\": \"string\",\n    \"postalAddress\": \"string\",\n    \"postalCode\": \"string\",\n    \"town\": \"string\",\n    \"province\": \"string\",\n    \"country\": \"string\",\n    \"registryData\": \"string\"\n  }\n}"
						},
						"url": {
							"raw": "{{api_url}}/brands",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Queues",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brand\": {{brandId}},\n  \"feature\": 1\n}"
						},
						"url": {
							"raw": "{{api_url}}/features_rel_brands",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"features_rel_brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Recordings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brand\": {{brandId}},\n  \"feature\": 2\n}"
						},
						"url": {
							"raw": "{{api_url}}/features_rel_brands",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"features_rel_brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Faxes",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brand\": {{brandId}},\n  \"feature\": 3\n}"
						},
						"url": {
							"raw": "{{api_url}}/features_rel_brands",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"features_rel_brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Friends",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brand\": {{brandId}},\n  \"feature\": 4\n}"
						},
						"url": {
							"raw": "{{api_url}}/features_rel_brands",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"features_rel_brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Conferences",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brand\": {{brandId}},\n  \"feature\": 5\n}"
						},
						"url": {
							"raw": "{{api_url}}/features_rel_brands",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"features_rel_brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Billing",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brand\": {{brandId}},\n  \"feature\": 6\n}"
						},
						"url": {
							"raw": "{{api_url}}/features_rel_brands",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"features_rel_brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Invoices",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brand\": {{brandId}},\n  \"feature\": 7\n}"
						},
						"url": {
							"raw": "{{api_url}}/features_rel_brands",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"features_rel_brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Progress",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brand\": {{brandId}},\n  \"feature\": 8\n}"
						},
						"url": {
							"raw": "{{api_url}}/features_rel_brands",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"features_rel_brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Brand Feature: Retail",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brand\": {{brandId}},\n  \"feature\": 9\n}"
						},
						"url": {
							"raw": "{{api_url}}/features_rel_brands",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"features_rel_brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Number Transformation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"transformationRulesetId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Spanish\",\n  \"internationalCode\": \"00\",\n  \"trunkPrefix\": \"\",\n  \"areaCode\": \"\",\n  \"nationalLen\": 9,\n  \"generateRules\": true,\n  \"name\": {\n     \"en\": \"Spanish Operator\",\n     \"es\": \"Operador Español\"\n  },\n  \"brand\": {{brandId}},\n  \"country\": 70\n}"
						},
						"url": {
							"raw": "{{api_url}}/transformation_rule_sets",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"transformation_rule_sets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Number Transformation (USA999)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"transformationUSA999\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"USA (Area 999)\",\n  \"internationalCode\": \"011\",\n  \"trunkPrefix\": \"1\",\n  \"areaCode\": \"999\",\n  \"nationalLen\": 9,\n  \"generateRules\": true,\n  \"name\": {\n     \"en\": \"USA (Area 999)\",\n     \"es\": \"USA (Area 999)\"\n  },\n  \"brand\": {{brandId}},\n  \"country\": 235\n}"
						},
						"url": {
							"raw": "{{api_url}}/transformation_rule_sets",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"transformation_rule_sets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Peering Contract",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"peeringContractId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"BBS Peering Contract\",\n  \"name\": \"BBS Peering Contract\",\n  \"externallyRated\": false,\n  \"brand\": {{brandId}},\n  \"transformationRuleSet\": 70\n}\n"
						},
						"url": {
							"raw": "{{api_url}}/peering_contracts",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"peering_contracts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Peer Server",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"peerServerId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sipProxy\": \"fakepeerserver.com\",\t\n  \"peeringContract\": {{peeringContractId}},\n  \"brand\": {{brandId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/peer_servers",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"peer_servers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Routing pattern ES",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"routingPatternESId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"regExp\": \"+34\",\n  \"name\": {\n  \t\"en\": \"Spain\",  \t\n  \t\"es\": \"España\"\n  },\n  \"description\": {\n  \t\"en\": \"BBS - Spain\",  \t\n  \t\"es\": \"BBS - España\"\n  },\n  \"brand\": {{brandId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/routing_patterns",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"routing_patterns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Outgoing Routing ES",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"outgoingRouteESId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"pattern\",\n  \"priority\": 1,\n  \"brand\": {{brandId}},\n  \"peeringContract\": {{peeringContractId}},\n  \"routingPattern\": {{routingPatternESId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/outgoing_routings",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"outgoing_routings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Routing pattern US",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"routingPatternUSId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"regExp\": \"+1\",\n  \"name\": {\n  \t\"en\": \"USA\",  \t\n  \t\"es\": \"Estados Unidos\"\n  },\n  \"description\": {\n  \t\"en\": \"BBS - Usa\",  \t\n  \t\"es\": \"BBS - Estados Unidos\"\n  },\n  \"brand\": {{brandId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/routing_patterns",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"routing_patterns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Outgoing Routing US",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"outgoingRouteUSId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"pattern\",\n  \"priority\": 2,\n  \"brand\": {{brandId}},\n  \"peeringContract\": {{peeringContractId}},\n  \"routingPattern\": {{routingPatternUSId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/outgoing_routings",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"outgoing_routings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Destination ES",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "33215d11-abbc-43de-9fa0-ed285d960710",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"destinationESId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": {\n  \t\"en\": \"Spain\",\n  \t\"es\": \"España\"\n  },\n  \"description\": {\n  \t\"en\": \"Spain\",\n  \t\"es\": \"España\"\n  },\n  \"brand\": {{brandId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/destinations",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"destinations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Pattern to Destination ES",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e811bf36-abf5-48f2-b4b1-087d8e917873",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"prefix\": \"+34\",\n  \"destination\": {{destinationESId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/tp_destinations",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"tp_destinations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Destination US",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f3e91408-7d38-46bf-bf27-a1b5c5d305c2",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"destinationUSId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": {\n  \t\"en\": \"USA\",\n  \t\"es\": \"EEEUU\"\n  },\n  \"description\": {\n  \t\"en\": \"United States of America\",\n  \t\"es\": \"Estados Unidos de América\"\n  },\n  \"brand\": {{brandId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/destinations",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"destinations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Pattern to Destination US",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e811bf36-abf5-48f2-b4b1-087d8e917873",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"prefix\": \"+1\",\n  \"destination\": {{destinationUSId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/tp_destinations",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"tp_destinations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create National Rate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b01386f-10ec-45ea-b067-f7e567aacc5a",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"nationalRateId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"National Calls Rate\",\n  \"brand\": {{brandId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/rates",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"rates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add National Costs to Rate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "427efeed-65aa-4fbd-9d06-0a4921eb586f",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"connectFee\": \"0.001\",\n  \"rateCost\": \"0.3\",\n  \"rateUnit\": \"60s\",\n  \"rateIncrement\": \"1s\",\n  \"groupIntervalStart\": \"0s\",\n  \"rate\": {{nationalRateId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/tp_rates",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"tp_rates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create National Rate copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09544a4e-400a-4ac7-907f-4b8e4ded463c",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"internationalRateId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Intenational Calls Rate\",\n  \"brand\": {{brandId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/rates",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"rates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add International Costs to Rate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "427efeed-65aa-4fbd-9d06-0a4921eb586f",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"connectFee\": \"1.500\",\n  \"rateCost\": \"1.2\",\n  \"rateUnit\": \"60s\",\n  \"rateIncrement\": \"1s\",\n  \"groupIntervalStart\": \"0s\",\n  \"rate\": {{internationalRateId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/tp_rates",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"tp_rates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Destination Rate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f14a8e6f-a677-4a81-9333-0d7eebb4ed29",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"destinationRateId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": {\n  \t\"en\": \"Standard\",\n  \t\"es\": \"Estándar\"\n  },\n  \"description\": {\n  \t\"en\": \"\",\n  \t\"es\": \"\"\n  },\n  \"brand\": {{brandId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/destination_rates",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"destination_rates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Destination Rate ES",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bc41beb0-8e5c-496d-93a2-ffc1e7a00aee",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"destinationRate\": {{destinationRateId}},\n  \"destination\": {{destinationESId}},\n  \"rate\": {{nationalRateId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/tp_destination_rates",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"tp_destination_rates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Destination Rate US",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b2665ea2-81d0-4f6d-ba99-c311166c9f44",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"destinationRate\": {{destinationRateId}},\n  \"destination\": {{destinationUSId}},\n  \"rate\": {{internationalRateId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/tp_destination_rates",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"tp_destination_rates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Rating Plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0f5b00b1-a78d-4e52-92dc-5b9089e64721",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"ratingPlanId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": {\n  \t\"en\": \"Standard 2017\",\n  \t\"es\": \"Estándar 2017\"\n  },\n  \"description\": {\n  \t\"en\": \"\",\n  \t\"es\": \"\"\n  },\n  \"brand\": {{brandId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/rating_plans",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"rating_plans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Rating Plan Destination rate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a62b51cd-049c-4137-b5f6-0112019e6d5f",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"weight\": \"1\",\n  \"timing\": \"1\",\n  \"ratingPlan\": {{ratingPlanId}},\n  \"destinationRate\": {{destinationRateId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/tp_rating_plans",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"tp_rating_plans"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "0010 - Company Data",
			"item": [
				{
					"name": "Create BBS Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"companyId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"vpbx\",\n  \"name\": \"BBS - Company for Black Box SIP tests\",\n  \"domainUsers\": \"bbs.ivozprovider.local\",\n  \"nif\": \"09876543210ART\",\n  \"externalMaxCalls\": 2,\n  \"postalAddress\": \"Company address\",\n  \"postalCode\": \"48902\",\n  \"town\": \"Company town\",\n  \"province\": \"Company province\",\n  \"onDemandRecord\": 2,\n  \"onDemandRecordCode\": \"234\",\n  \"countryName\": \"Company country\",\n  \"ipfilter\": false,\n  \"defaultTimezone\": 1,\n  \"transformationRuleSet\": 70,\n  \"brand\": {{brandId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/companies",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Company Rating Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d423fc8-954b-4358-be3d-a78ca5ddba30",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"activationTime\": \"2018-01-01 00:00:00.000\",\n  \"company\": {{companyId}},\n  \"ratingPlan\": {{ratingPlanId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/tp_rating_profiles",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"tp_rating_profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get BBS Company data",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"postman.setGlobalVariable(\"companyData\", responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"vpbx\",\n  \"name\": \"BBS - Company for Black Box SIP tests\",\n  \"domainUsers\": \"bbs.ivozprovider.local\",\n  \"nif\": \"09876543210ART\",\n  \"externalMaxCalls\": 2,\n  \"postalAddress\": \"Company address\",\n  \"postalCode\": \"48902\",\n  \"town\": \"Company town\",\n  \"province\": \"Company province\",\n  \"countryName\": \"Company country\",\n  \"defaultTimezone\": 1,\n  \"brand\": {{brandId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/companies/{{companyId}}",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"companies",
								"{{companyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Company Feature: Queues",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"company\": {{companyId}},\n  \"feature\": 1\n}"
						},
						"url": {
							"raw": "{{api_url}}/features_rel_companies",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"features_rel_companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Company Feature: Recordings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"company\": {{companyId}},\n  \"feature\": 2\n}"
						},
						"url": {
							"raw": "{{api_url}}/features_rel_companies",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"features_rel_companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Company Feature: Faxes",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"company\": {{companyId}},\n  \"feature\": 3\n}"
						},
						"url": {
							"raw": "{{api_url}}/features_rel_companies",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"features_rel_companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Company Feature: Friends",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"company\": {{companyId}},\n  \"feature\": 4\n}"
						},
						"url": {
							"raw": "{{api_url}}/features_rel_companies",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"features_rel_companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Company Feature: Conferences",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"company\": {{companyId}},\n  \"feature\": 5\n}"
						},
						"url": {
							"raw": "{{api_url}}/features_rel_companies",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"features_rel_companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Company Feature: Progress",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"company\": {{companyId}},\n  \"feature\": 8\n}"
						},
						"url": {
							"raw": "{{api_url}}/features_rel_companies",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"features_rel_companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Alice Terminal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"aliceTerminalId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"alice\",\n  \"directMediaMethod\": \"invite\",\n  \"password\": \"4l1C3P4sSw0rd+\",\n  \"company\": {{companyId}},\n  \"terminalModel\": 5\n}"
						},
						"url": {
							"raw": "{{api_url}}/terminals",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"terminals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Alice User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"aliceUserId\", jsonData.id);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Alice\",\n  \"lastname\": \"Allison\",\n  \"email\": \"alice@bbs.ivozprovider.local\",\n  \"pass\": \"4l1c3p4ssw0rd\",\n  \"company\": {{companyId}},\n  \"terminal\": {{aliceTerminalId}},\n  \"transformationRuleSet\": 70,\n  \"timezone\": 70\n}"
						},
						"url": {
							"raw": "{{api_url}}/users",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Alice Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"aliceExtensionId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"1001\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"user\": {{aliceUserId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/extensions",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Alice DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"aliceDDIId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ddi\": \"999661001\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"brand\": {{brandId}},\n  \"user\": {{aliceUserId}},\n  \"peeringContract\": {{peeringContractId}},\n  \"country\": 70\n}"
						},
						"url": {
							"raw": "{{api_url}}/ddis",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"ddis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Bob Terminal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"bobTerminalId\", jsonData.id);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"bob\",\n  \"directMediaMethod\": \"invite\",\n  \"password\": \"b0bP4sSW0rd+\",\n  \"company\": {{companyId}},\n  \"terminalModel\": 5\n}"
						},
						"url": {
							"raw": "{{api_url}}/terminals",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"terminals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Bob User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"bobUserId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Bob\",\n  \"lastname\": \"Bobson\",\n  \"email\": \"bob@bbs.ivozprovider.local\",\n  \"pass\": \"b0bp4ssw0rd\",\n  \"company\": {{companyId}},\n  \"terminal\": {{bobTerminalId}},\n  \"transformationRuleSet\": 70,  \n  \"timezone\": 70\n}"
						},
						"url": {
							"raw": "{{api_url}}/users",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Bob Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"bobExtensionId\", jsonData.id);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"1002\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"user\": {{bobUserId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/extensions",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Bob DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"bobDDIId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ddi\": \"999661002\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"brand\": {{brandId}},\n  \"user\": {{bobUserId}},\n  \"peeringContract\": {{peeringContractId}},\n  \"country\": 70\n}"
						},
						"url": {
							"raw": "{{api_url}}/ddis",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"ddis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Charlie Terminal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"charlieTerminalId\", jsonData.id);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"charlie\",\n  \"directMediaMethod\": \"invite\",\n  \"password\": \"Ch4rL1Ep4SSword+\",\n  \"company\": {{companyId}},\n  \"terminalModel\": 5\n}"
						},
						"url": {
							"raw": "{{api_url}}/terminals",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"terminals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Charlie User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"charlieUserId\", jsonData.id);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Charlie\",\n  \"lastname\": \"Charlieson\",\n  \"email\": \"charlie@bbs.ivozprovider.local\",\n  \"pass\": \"ch4rl1ep4ssw0rd\",\n  \"company\": {{companyId}},\n  \"terminal\": {{charlieTerminalId}},\n  \"transformationRuleSet\": 70,  \n  \"timezone\": 70\n}"
						},
						"url": {
							"raw": "{{api_url}}/users",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Charlie Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"charlieExtensionId\", jsonData.id);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"1003\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"user\": {{charlieUserId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/extensions",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Charlie DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"charlieDDIId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ddi\": \"999661003\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"brand\": {{brandId}},\n  \"user\": {{charlieUserId}},\n  \"peeringContract\": {{peeringContractId}},\n  \"country\": 70\n}"
						},
						"url": {
							"raw": "{{api_url}}/ddis",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"ddis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Dave Terminal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"daveTerminalId\", jsonData.id);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"dave\",\n  \"directMediaMethod\": \"invite\",\n  \"password\": \"D4vEp4SSw0rd+\",\n  \"company\": {{companyId}},\n  \"terminalModel\": 5\n}"
						},
						"url": {
							"raw": "{{api_url}}/terminals",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"terminals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Dave User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"daveUserId\", jsonData.id);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Dave\",\n  \"lastname\": \"Daveson\",\n  \"email\": \"deve@bbs.ivozprovider.local\",\n  \"pass\": \"d4v3p4ssw0rd\",\n  \"company\": {{companyId}},\n  \"terminal\": {{daveTerminalId}},\n  \"transformationRuleSet\": {{transformationUSA999}},\n  \"timezone\": 70\n}"
						},
						"url": {
							"raw": "{{api_url}}/users",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Dave Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"daveExtensionId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"number\": \"1004\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"user\": {{daveUserId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/extensions",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Dave DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"daveDDIId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"ddi\": \"999661004\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"brand\": {{brandId}},\n  \"user\": {{daveUserId}},\n  \"peeringContract\": {{peeringContractId}},\n  \"country\": 235\n}"
						},
						"url": {
							"raw": "{{api_url}}/ddis",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"ddis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Eve Terminal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"eveTerminalId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"eve\",\n  \"directMediaMethod\": \"invite\",\n  \"password\": \"Ev3p4SSw0rd+\",\n  \"company\": {{companyId}},\n  \"terminalModel\": 5\n}"
						},
						"url": {
							"raw": "{{api_url}}/terminals",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"terminals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Eve User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"eveUserId\", jsonData.id);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Eve\",\n  \"lastname\": \"Eveson\",\n  \"email\": \"eve@bbs.ivozprovider.local\",\n  \"pass\": \"3v3p4ssw0rd\",\n  \"company\": {{companyId}},\n  \"terminal\": {{eveTerminalId}},\n  \"transformationRuleSet\": {{transformationUSA999}},\n  \"timezone\": 70\n}"
						},
						"url": {
							"raw": "{{api_url}}/users",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Eve Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"eveExtensionId\", jsonData.id);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"1005\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"user\": {{eveUserId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/extensions",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Eve DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"eveDDIId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ddi\": \"999661005\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"brand\": {{brandId}},\n  \"user\": {{eveUserId}},\n  \"peeringContract\": {{peeringContractId}},\n  \"country\": 235\n}"
						},
						"url": {
							"raw": "{{api_url}}/ddis",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"ddis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Boss/Assistant MatchList",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"bossAssistantWatchListId\", jsonData.id);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"White List for Boss Frank\",\n  \"company\": {{companyId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/match_lists",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"match_lists"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Boss/Assistant MatchList Pattern Ext",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Alice DDI Number\",\n  \"type\": \"number\",\n  \"numbervalue\": \"999661001\",\n  \"matchList\": {{bossAssistantWatchListId}},\n  \"numberCountry\": 70\n}"
						},
						"url": {
							"raw": "{{api_url}}/match_list_patterns",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"match_list_patterns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Boss/Assistant MatchList Pattern Int",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Alice Extension Number\",\n  \"type\": \"regexp\",\n  \"regexp\": \"^1001$\",\n  \"matchList\": {{bossAssistantWatchListId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/match_list_patterns",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"match_list_patterns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Frank Terminal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"frankTerminalId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"frank\",\n  \"directMediaMethod\": \"invite\",\n  \"password\": \"fr4Nkp4SSw0rd+\",\n  \"company\": {{companyId}},\n  \"terminalModel\": 5\n}"
						},
						"url": {
							"raw": "{{api_url}}/terminals",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"terminals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Frank User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"frankUserId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Frank\",\n  \"lastname\": \"Frankson\",\n  \"email\": \"frank@bbs.ivozprovider.local\",\n  \"pass\": \"fr4nkp4ssw0rd\",\n  \"isBoss\": true,\n  \"company\": {{companyId}},\n  \"bossAssistant\": {{daveUserId}},\n  \"bossAssistantWhiteList\": {{bossAssistantWatchListId}},\n  \"transformationRuleSet\": {{transformationUSA999}},\n  \"terminal\": {{frankTerminalId}},\n  \"timezone\": 1\n}"
						},
						"url": {
							"raw": "{{api_url}}/users",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Frank Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"frankExtensionId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"1006\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"user\": {{frankUserId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/extensions",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Frank DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"frankDDIId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"ddi\": \"999661006\",\n  \"routeType\": \"user\",\n  \"company\": {{companyId}},\n  \"brand\": {{brandId}},\n  \"user\": {{frankUserId}},\n  \"peeringContract\": {{peeringContractId}},\n  \"country\": 70\n}"
						},
						"url": {
							"raw": "{{api_url}}/ddis",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"ddis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Default Company DDI",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var companyData = JSON.parse(postman.getGlobalVariable(\"companyData\"));",
									"",
									"companyData.outgoingDdi = postman.getGlobalVariable(\"aliceDDIId\");",
									"",
									"postman.setGlobalVariable(\"companyData\", JSON.stringify(companyData));",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"console.log(postman.getGlobalVariable(\"companyDataJson\"));"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{companyData}}"
						},
						"url": {
							"raw": "{{api_url}}/companies/{{companyId}}",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"companies",
								"{{companyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Friend",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"friendId\", jsonData.id);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"friend\",\n  \"description\": \"BBS - Friend\",\n  \"transport\": \"udp\",\n  \"password\": \"fr13ndp4SSW0rd+\",\n  \"priority\": 1,\n  \"directConnectivity\": \"no\",\n  \"company\": {{companyId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/friends",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"friends"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Friend Pattern",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"friendPatternId\", jsonData.id);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"2XXX Extensions\",\n  \"regExp\": \"^2[0-9]{3}$\",\n  \"friend\": {{friendId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/friends_patterns",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"friends_patterns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Friend Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"friendExtensionId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"2001\",\n  \"routeType\": \"friend\",\n  \"company\": {{companyId}},\n  \"friendValue\": \"2001\"\n}"
						},
						"url": {
							"raw": "{{api_url}}/extensions",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Route Lock",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "77e6a7d4-a6f1-4d8f-99f5-6299a36e10a5",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"routeLockId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"BBS Route Lock\",\n  \"description\": \"For testing Conditional Routes\",\n  \"open\": false,\n  \"company\": {{companyId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/route_locks",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"route_locks"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "0020 - Retail Data",
			"item": [
				{
					"name": "Create BBS Retail Client",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"retailId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"retail\",\n  \"name\": \"BBS - Retail for Black Box SIP tests\",\n  \"nif\": \"09876543210ART\",\n  \"externalMaxCalls\": 2,\n  \"postalAddress\": \"Retail address\",\n  \"postalCode\": \"48902\",\n  \"town\": \"Retail town\",\n  \"province\": \"Retail province\",\n  \"countryName\": \"Retail country\",\n  \"defaultTimezone\": 1,\n  \"onDemandRecord\": 2,\n  \"onDemandRecordCode\": \"234\",\n  \"ipfilter\": false,\n  \"transformationRuleSet\": 70,\n  \"brand\": {{brandId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/companies",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add  Retail Rating Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d423fc8-954b-4358-be3d-a78ca5ddba30",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"activationTime\": \"2018-01-01 00:00:00.000\",\n  \"company\": {{retailId}},\n  \"ratingPlan\": {{ratingPlanId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/tp_rating_profiles",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"tp_rating_profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get BBS Retail data",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"postman.setGlobalVariable(\"retailData\", responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"vpbx\",\n  \"name\": \"BBS - Company for Black Box SIP tests\",\n  \"domainUsers\": \"bbs.ivozprovider.local\",\n  \"nif\": \"09876543210ART\",\n  \"externalMaxCalls\": 2,\n  \"postalAddress\": \"Company address\",\n  \"postalCode\": \"48902\",\n  \"town\": \"Company town\",\n  \"province\": \"Company province\",\n  \"countryName\": \"Company country\",\n  \"defaultTimezone\": 1,\n  \"brand\": {{brandId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/companies/{{retailId}}",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"companies",
								"{{retailId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Retail Feature: Recordings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"company\": {{retailId}},\n  \"feature\": 2\n}"
						},
						"url": {
							"raw": "{{api_url}}/features_rel_companies",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"features_rel_companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Retail Feature: Faxes",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"company\": {{retailId}},\n  \"feature\": 3\n}"
						},
						"url": {
							"raw": "{{api_url}}/features_rel_companies",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"features_rel_companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Retail Feature: Progress",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"company\": {{retailId}},\n  \"feature\": 8\n}"
						},
						"url": {
							"raw": "{{api_url}}/features_rel_companies",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"features_rel_companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Retail Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"retailAccountId\", jsonData.id);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"20000\",\n  \"transport\": \"udp\",\n  \"password\": \"r3t41Lp4sSW0rd+\",\n  \"directConnectivity\": \"no\",\n  \"brand\": {{brandId}},\n  \"company\": {{retailId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/retail_accounts",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"retail_accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Retail DDI",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"retailDDIId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ddi\": \"999920000\",\n  \"routeType\": \"retailAccount\",\n  \"company\": {{retailId}},\n  \"brand\": {{brandId}},\n  \"retailAccount\": {{retailAccountId}},\n  \"peeringContract\": {{peeringContractId}},\n  \"country\": 235\n}"
						},
						"url": {
							"raw": "{{api_url}}/ddis",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"ddis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Default Retail Client DDI",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var retailData = JSON.parse(postman.getGlobalVariable(\"retailData\"));",
									"",
									"retailData.outgoingDdi = postman.getGlobalVariable(\"retailDDIId\");",
									"",
									"postman.setGlobalVariable(\"retailData\", JSON.stringify(retailData));",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{retailData}}"
						},
						"url": {
							"raw": "{{api_url}}/companies/{{retailId}}",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"companies",
								"{{retailId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2000 - IVR",
			"item": [
				{
					"name": "Create IVR Generic",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"ivrCommonId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"BBS Generic IVR\",\n  \"timeout\": 5,\n  \"maxDigits\": 4,\n  \"allowExtensions\": true,\n  \"noInputRouteType\": \"extension\",\n  \"errorRouteType\": \"number\",\n  \"errorNumberValue\": \"999661003\",\n  \"company\": {{companyId}},\n  \"noInputExtension\": {{daveExtensionId}},\n  \"errorNumberCountry\": 70\n}"
						},
						"url": {
							"raw": "{{api_url}}/ivrs",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"ivrs"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Create IVR Generic Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"ivrCommonExtensionId\", jsonData.id);",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"600\",\n  \"routeType\": \"ivr\",\n  \"company\": {{companyId}},\n  \"ivr\": {{ivrCommonId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/extensions",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create IVR Custom",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"ivrCustomId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"BBS Custom IVR\",\n  \"timeout\": 5,\n  \"maxDigits\": 1,\n  \"noInputRouteType\": \"extension\",\n  \"errorRouteType\": \"extension\",\n  \"company\": {{companyId}},\n  \"noInputExtension\": {{daveExtensionId}},\n  \"errorExtension\": {{eveExtensionId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/ivrs",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"ivrs"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Create IVR Custom Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"ivrCustomExtensionId\", jsonData.id);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"601\",\n  \"routeType\": \"ivr\",\n  \"company\": {{companyId}},\n  \"ivr\": {{ivrCustomId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/extensions",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create IVR Custom Entry 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"entry\": \"1\",\n  \"routeType\": \"extension\",\n  \"ivr\": {{ivrCustomId}},\n  \"extension\": {{aliceExtensionId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/ivr_entries",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"ivr_entries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create IVR Custom Entry 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"entry\": \"5\",\n  \"routeType\": \"extension\",\n  \"ivr\": {{ivrCustomId}},\n  \"extension\": {{eveExtensionId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/ivr_entries",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"ivr_entries"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2200 - Pickup",
			"item": [
				{
					"name": "Create Pickup Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"pickupGroupId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"BBS Pickup Group\",\n  \"company\": {{companyId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/pick_up_groups",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"pick_up_groups"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Add Alice to Pickup Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"pickUpGroup\": {{pickupGroupId}},\n  \"user\": {{aliceUserId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/pick_up_rel_users",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"pick_up_rel_users"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Add Bob to Pickup Group copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"pickUpGroup\": {{pickupGroupId}},\n  \"user\": {{bobUserId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/pick_up_rel_users",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"pick_up_rel_users"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Add Charlie to Pickup Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"pickUpGroup\": {{pickupGroupId}},\n  \"user\": {{charlieUserId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/pick_up_rel_users",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"pick_up_rel_users"
							]
						},
						"description": "POST"
					},
					"response": []
				}
			]
		},
		{
			"name": "2300 - Conference",
			"item": [
				{
					"name": "Create Conference Room",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"conferenceRoomId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"BBS Conference Room\",\n  \"pinProtected\": true,\n  \"pinCode\": \"1234\",\n  \"maxMembers\": 2,\n  \"company\": {{companyId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/conference_rooms",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"conference_rooms"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Create Conference Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"ivrCommonExtensionId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"number\": \"500\",\n  \"routeType\": \"conferenceRoom\",\n  \"company\": {{companyId}},\n  \"conferenceRoom\": {{conferenceRoomId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/extensions",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2400 - HuntGroup",
			"item": [
				{
					"name": "Create HungGroup RingAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"huntGroupRingAllId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"BBS RingAll HuntGroup\",\n  \"description\": \"BBS RingAll HuntGroup\",\n  \"strategy\": \"ringAll\",\n  \"ringAllTimeout\": 10,\n  \"noAnswerTargetType\": \"extension\",\n  \"company\": {{companyId}},\n  \"noAnswerExtension\": {{eveExtensionId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/hunt_groups",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"hunt_groups"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Create HungGroup RingAll Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"700\",\n  \"routeType\": \"huntGroup\",\n  \"company\": {{companyId}},\n  \"huntGroup\": {{huntGroupRingAllId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/extensions",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add HungGroup RingAll User Bob",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"huntGroup\": {{huntGroupRingAllId}},\n  \"user\": {{bobUserId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/hunt_groups_rel_users",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"hunt_groups_rel_users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add HungGroup RingAll User Charlie",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"huntGroup\": {{huntGroupRingAllId}},\n  \"user\": {{charlieUserId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/hunt_groups_rel_users",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"hunt_groups_rel_users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add HungGroup RingAll User Dave",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"huntGroup\": {{huntGroupRingAllId}},\n  \"user\": {{daveUserId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/hunt_groups_rel_users",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"hunt_groups_rel_users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create HungGroup RR",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"huntGroupRRId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"BBS RR HuntGroup\",\n  \"description\": \"BBS RR HuntGroup\",\n  \"strategy\": \"roundRobin\",\n  \"noAnswerTargetType\": \"extension\",\n  \"company\": {{companyId}},\n  \"noAnswerExtension\": {{eveExtensionId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/hunt_groups",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"hunt_groups"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Create HungGroup RR Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"701\",\n  \"routeType\": \"huntGroup\",\n  \"company\": {{companyId}},\n  \"huntGroup\": {{huntGroupRRId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/extensions",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add HungGroup RR User Bob",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"timeoutTime\": 3,\n  \"priority\": 1,\n  \"huntGroup\": {{huntGroupRRId}},\n  \"user\": {{bobUserId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/hunt_groups_rel_users",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"hunt_groups_rel_users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add HungGroup RR User Charlie",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"timeoutTime\": 3,\n  \"priority\": 2,\n  \"huntGroup\": {{huntGroupRRId}},\n  \"user\": {{charlieUserId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/hunt_groups_rel_users",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"hunt_groups_rel_users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add HungGroup RR User Dave",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"timeoutTime\": 3,\n  \"priority\": 3,\n  \"huntGroup\": {{huntGroupRRId}},\n  \"user\": {{daveUserId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/hunt_groups_rel_users",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"hunt_groups_rel_users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2600 - Conditional Routes",
			"item": [
				{
					"name": "Create Conditional Route",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dba5e667-324c-4798-89ad-b01622fad92e",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"conditionalRouteId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"BBS Conditional Route\",\n  \"routetype\": \"user\",\n  \"company\": {{companyId}},\n  \"user\": {{daveUserId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/conditional_routes",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"conditional_routes"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Create Conditional Route Extension",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "002d565c-8df2-4fb4-b6e6-b358df218807",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"conditionalRouteExtensionId\", jsonData.id);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number\": \"800\",\n  \"routeType\": \"conditional\",\n  \"company\": {{companyId}},\n  \"conditionalRoute\": {{conditionalRouteId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/extensions",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"extensions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Conditional Route Codition",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "54e06dcd-6452-4c7d-a2ac-744f255cdd41",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									"postman.setGlobalVariable(\"conditionalRouteConditionId\", jsonData.id);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"priority\": 1,\n  \"routeType\": \"extension\",\n  \"conditionalRoute\": {{conditionalRouteId}},\n  \"extension\": {{aliceExtensionId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/conditional_routes_conditions",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"conditional_routes_conditions"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Add RouteLock to Condition",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "949b9034-923d-41ce-ad79-c315cb30d3aa",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"condition\": {{conditionalRouteConditionId}},\n  \"routeLock\": {{routeLockId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/conditional_routes_conditions_rel_route_locks",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"conditional_routes_conditions_rel_route_locks"
							]
						},
						"description": "POST"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "dee8a1ff-7b04-4f9e-a6ad-5f1d26af3127",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3b2545c1-c583-4d8a-a6b1-afa8968ac642",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "3000 - Call Forward Settings",
			"item": [
				{
					"name": "Call Forward Eve Busy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"callTypeFilter\": \"internal\",\n  \"callForwardType\": \"busy\",\n  \"targetType\": \"extension\",\n  \"user\": {{eveUserId}},\n  \"extension\": {{charlieExtensionId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/call_forward_settings",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"call_forward_settings"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Call Forward Eve NoAnswer",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"callTypeFilter\": \"internal\",\n  \"callForwardType\": \"noAnswer\",\n  \"targetType\": \"extension\",\n  \"noAnswerTimeout\": 5,\n  \"user\": {{eveUserId}},\n  \"extension\": {{bobExtensionId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/call_forward_settings",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"call_forward_settings"
							]
						},
						"description": "POST"
					},
					"response": []
				},
				{
					"name": "Call Forward Eve Unregistered",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody)",
									"",
									"tests[\"Response body is JSON\"] = jsonData !== undefined;",
									"",
									"tests[\"Response body has token id\"] = jsonData.id !== undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{api_auth}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"callTypeFilter\": \"internal\",\n  \"callForwardType\": \"userNotRegistered\",\n  \"targetType\": \"extension\",\n  \"user\": {{eveUserId}},\n  \"extension\": {{daveExtensionId}}\n}"
						},
						"url": {
							"raw": "{{api_url}}/call_forward_settings",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"call_forward_settings"
							]
						},
						"description": "POST"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d0aa020a-fada-45a0-a6b6-ef98907ff7cf",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "003779a0-3e8c-4576-af85-5c167e825de7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}